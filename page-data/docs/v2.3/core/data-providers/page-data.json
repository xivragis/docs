{"componentChunkName":"component---src-templates-doc-js","path":"/docs/v2.3/core/data-providers/","result":{"pageContext":{"html":"<h1 id=\"data-providers\" style=\"position:relative;\"><a href=\"#data-providers\" aria-label=\"data providers permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Data Providers</h1>\n<p>To retrieve data exposed by the API, API Platform uses classes called <strong>data providers</strong>. A data provider using <a href=\"http://www.doctrine-project.org/projects/orm.html\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Doctrine\nORM</a> to retrieve data from a database is included with the library and\nis enabled by default. This data provider natively supports paged collections and filters. It can be used as is and fits\nperfectly with common usages.</p>\n<p>However, you sometime want to retrieve data from other sources such as another persistence layer, a webservice, ElasticSearch\nor MongoDB.\nCustom data providers can be used to do so. A project can include as many data providers as it needs. The first able to\nretrieve data for a given resource will be used.</p>\n<p>For a given resource, you can implement two kind of interfaces:</p>\n<ul>\n<li>the <a href=\"https://github.com/api-platform/core/blob/master/src/DataProvider/CollectionDataProviderInterface.php\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"><code class=\"language-text\">CollectionDataProviderInterface</code></a>\nis used when fetching a collection.</li>\n<li>the <a href=\"https://github.com/api-platform/core/blob/master/src/DataProvider/ItemDataProviderInterface.php\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"><code class=\"language-text\">ItemDataProviderInterface</code></a>\nis used when fetching items.</li>\n</ul>\n<p>Both implementations can also implement a third, optional interface called\n<a href=\"https://github.com/api-platform/core/blob/master/src/DataProvider/RestrictedDataProviderInterface.php\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">'RestrictedDataProviderInterface'</a>\nif you want to limit their effects to a single resource or operation.</p>\n<p>In the following examples we will create custom data providers for an entity class called <code class=\"language-text\">App\\Entity\\BlogPost</code>.\nNote, that if your entity is not Doctrine-related, you need to flag the identifier property by using <code class=\"language-text\">@ApiProperty(identifier=true)</code> for things to work properly (see also <a href=\"/docs/v2.3/core/serialization/#entity-identifier-case\">Entity Identifier Case</a>).</p>\n<h2 id=\"custom-collection-data-provider\" style=\"position:relative;\"><a href=\"#custom-collection-data-provider\" aria-label=\"custom collection data provider permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Custom Collection Data Provider</h2>\n<p>First, your <code class=\"language-text\">BlogPostCollectionDataProvider</code> has to implement the <a href=\"https://github.com/api-platform/core/blob/master/src/DataProvider/CollectionDataProviderInterface.php\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"><code class=\"language-text\">CollectionDataProviderInterface</code></a>:</p>\n<p>The <code class=\"language-text\">getCollection</code> method must return an <code class=\"language-text\">array</code>, a <code class=\"language-text\">Traversable</code> or a <a href=\"https://github.com/api-platform/core/blob/master/src/DataProvider/PaginatorInterface.php\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"><code class=\"language-text\">ApiPlatform\\Core\\DataProvider\\PaginatorInterface</code></a> instance.\nIf no data is available, you should return an empty array.</p>\n<div class=\"gatsby-highlight\" data-language=\"php\"><pre class=\"language-php\"><code class=\"language-php\"><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span>\n<span class=\"token comment\">// api/src/DataProvider/BlogPostCollectionDataProvider.php</span>\n\n<span class=\"token keyword\">namespace</span> <span class=\"token package\">App<span class=\"token punctuation\">\\</span>DataProvider</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">use</span> <span class=\"token package\">ApiPlatform<span class=\"token punctuation\">\\</span>Core<span class=\"token punctuation\">\\</span>DataProvider<span class=\"token punctuation\">\\</span>CollectionDataProviderInterface</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">use</span> <span class=\"token package\">ApiPlatform<span class=\"token punctuation\">\\</span>Core<span class=\"token punctuation\">\\</span>DataProvider<span class=\"token punctuation\">\\</span>RestrictedDataProviderInterface</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">use</span> <span class=\"token package\">ApiPlatform<span class=\"token punctuation\">\\</span>Core<span class=\"token punctuation\">\\</span>Exception<span class=\"token punctuation\">\\</span>ResourceClassNotSupportedException</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">use</span> <span class=\"token package\">App<span class=\"token punctuation\">\\</span>Entity<span class=\"token punctuation\">\\</span>BlogPost</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">final</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">BlogPostCollectionDataProvider</span> <span class=\"token keyword\">implements</span> <span class=\"token class-name\">CollectionDataProviderInterface</span><span class=\"token punctuation\">,</span> RestrictedDataProviderInterface\n<span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">function</span> <span class=\"token function\">supports</span><span class=\"token punctuation\">(</span>string <span class=\"token variable\">$resourceClass</span><span class=\"token punctuation\">,</span> string <span class=\"token variable\">$operationName</span> <span class=\"token operator\">=</span> <span class=\"token constant\">null</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">array</span> <span class=\"token variable\">$context</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span> bool\n    <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">return</span> BlogPost<span class=\"token punctuation\">:</span><span class=\"token punctuation\">:</span><span class=\"token keyword\">class</span> <span class=\"token operator\">===</span> <span class=\"token variable\">$resourceClass</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">function</span> <span class=\"token function\">getCollection</span><span class=\"token punctuation\">(</span>string <span class=\"token variable\">$resourceClass</span><span class=\"token punctuation\">,</span> string <span class=\"token variable\">$operationName</span> <span class=\"token operator\">=</span> <span class=\"token constant\">null</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span> \\<span class=\"token package\">Generator</span>\n    <span class=\"token punctuation\">{</span>\n        <span class=\"token comment\">// Retrieve the blog post collection from somewhere</span>\n        <span class=\"token keyword\">yield</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">BlogPost</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">yield</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">BlogPost</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></span></code></pre></div>\n<p>If you use the default configuration, the corresponding service will be automatically registered thanks to <a href=\"https://symfony.com/doc/current/service_container/autowiring.html\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">autowiring</a>.\nTo declare the service explicitly, or to set a custom priority, you can use the following snippet:</p>\n<div class=\"gatsby-highlight\" data-language=\"yaml\"><pre class=\"language-yaml\"><code class=\"language-yaml\"><span class=\"token comment\"># api/config/services.yaml</span>\n<span class=\"token key atrule\">services</span><span class=\"token punctuation\">:</span>\n    <span class=\"token comment\"># ...</span>\n    <span class=\"token key atrule\">'App\\DataProvider\\BlogPostCollectionDataProvider'</span><span class=\"token punctuation\">:</span>\n        <span class=\"token key atrule\">tags</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span> <span class=\"token punctuation\">{</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'api_platform.collection_data_provider'</span><span class=\"token punctuation\">,</span> <span class=\"token key atrule\">priority</span><span class=\"token punctuation\">:</span> <span class=\"token number\">2 </span><span class=\"token punctuation\">}</span> <span class=\"token punctuation\">]</span>\n        <span class=\"token comment\"># Autoconfiguration must be disabled to set a custom priority</span>\n        <span class=\"token key atrule\">autoconfigure</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">false</span></code></pre></div>\n<p>Tagging the service with the tag <code class=\"language-text\">api_platform.collection_data_provider</code> will enable API Platform Core to automatically\nregister and use this data provider. The optional attribute <code class=\"language-text\">priority</code> allows to define the order in which the\ndata providers are called. The first data provider not throwing a <code class=\"language-text\">ApiPlatform\\Core\\Exception\\ResourceClassNotSupportedException</code>\nwill be used.</p>\n<h2 id=\"custom-item-data-provider\" style=\"position:relative;\"><a href=\"#custom-item-data-provider\" aria-label=\"custom item data provider permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Custom Item Data Provider</h2>\n<p>The process is similar for item data providers. Create a <code class=\"language-text\">BlogPostItemDataProvider</code> implementing the <a href=\"https://github.com/api-platform/core/blob/master/src/DataProvider/ItemDataProviderInterface.php\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"><code class=\"language-text\">ItemDataProviderInterface</code></a>\ninterface:</p>\n<p>The <code class=\"language-text\">getItem</code> method can return <code class=\"language-text\">null</code> if no result has been found.</p>\n<div class=\"gatsby-highlight\" data-language=\"php\"><pre class=\"language-php\"><code class=\"language-php\"><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span>\n<span class=\"token comment\">// api/src/DataProvider/BlogPostItemDataProvider.php</span>\n\n<span class=\"token keyword\">namespace</span> <span class=\"token package\">App<span class=\"token punctuation\">\\</span>DataProvider</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">use</span> <span class=\"token package\">ApiPlatform<span class=\"token punctuation\">\\</span>Core<span class=\"token punctuation\">\\</span>DataProvider<span class=\"token punctuation\">\\</span>ItemDataProviderInterface</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">use</span> <span class=\"token package\">ApiPlatform<span class=\"token punctuation\">\\</span>Core<span class=\"token punctuation\">\\</span>DataProvider<span class=\"token punctuation\">\\</span>RestrictedDataProviderInterface</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">use</span> <span class=\"token package\">ApiPlatform<span class=\"token punctuation\">\\</span>Core<span class=\"token punctuation\">\\</span>Exception<span class=\"token punctuation\">\\</span>ResourceClassNotSupportedException</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">use</span> <span class=\"token package\">App<span class=\"token punctuation\">\\</span>Entity<span class=\"token punctuation\">\\</span>BlogPost</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">final</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">BlogPostItemDataProvider</span> <span class=\"token keyword\">implements</span> <span class=\"token class-name\">ItemDataProviderInterface</span><span class=\"token punctuation\">,</span> RestrictedDataProviderInterface\n<span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">function</span> <span class=\"token function\">supports</span><span class=\"token punctuation\">(</span>string <span class=\"token variable\">$resourceClass</span><span class=\"token punctuation\">,</span> string <span class=\"token variable\">$operationName</span> <span class=\"token operator\">=</span> <span class=\"token constant\">null</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">array</span> <span class=\"token variable\">$context</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span> bool\n    <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">return</span> BlogPost<span class=\"token punctuation\">:</span><span class=\"token punctuation\">:</span><span class=\"token keyword\">class</span> <span class=\"token operator\">===</span> <span class=\"token variable\">$resourceClass</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">function</span> <span class=\"token function\">getItem</span><span class=\"token punctuation\">(</span>string <span class=\"token variable\">$resourceClass</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$id</span><span class=\"token punctuation\">,</span> string <span class=\"token variable\">$operationName</span> <span class=\"token operator\">=</span> <span class=\"token constant\">null</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">array</span> <span class=\"token variable\">$context</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span> <span class=\"token operator\">?</span>BlogPost\n    <span class=\"token punctuation\">{</span>\n        <span class=\"token comment\">// Retrieve the blog post item from somewhere then return it or null if not found</span>\n        <span class=\"token keyword\">return</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">BlogPost</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$id</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></span></code></pre></div>\n<p>If service autowiring and autoconfiguration are enabled (it's the case by default), you are done!</p>\n<p>Otherwise, if you use a custom dependency injection configuration, you need to register the corresponding service and add the\n<code class=\"language-text\">api_platform.item_data_provider</code> tag to it. As for collection data providers, the <code class=\"language-text\">priority</code> attribute can be used to order\nproviders.</p>\n<div class=\"gatsby-highlight\" data-language=\"yaml\"><pre class=\"language-yaml\"><code class=\"language-yaml\"><span class=\"token comment\"># api/config/services.yaml</span>\n<span class=\"token key atrule\">services</span><span class=\"token punctuation\">:</span>\n    <span class=\"token comment\"># ...</span>\n    <span class=\"token key atrule\">'App\\DataProvider\\BlogPostItemDataProvider'</span><span class=\"token punctuation\">:</span> <span class=\"token null important\">~</span>\n        <span class=\"token comment\"># Uncomment only if autoconfiguration is disabled</span>\n        <span class=\"token comment\">#tags: [ 'api_platform.item_data_provider' ]</span></code></pre></div>\n<h2 id=\"injecting-the-serializer-in-an-itemdataprovider\" style=\"position:relative;\"><a href=\"#injecting-the-serializer-in-an-itemdataprovider\" aria-label=\"injecting the serializer in an itemdataprovider permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Injecting the Serializer in an <code class=\"language-text\">ItemDataProvider</code></h2>\n<p>In some cases, you may need to inject the <code class=\"language-text\">Serializer</code> in your <code class=\"language-text\">DataProvider</code>. There are no issues with the\n<code class=\"language-text\">CollectionDataProvider</code>, but when injecting it in the <code class=\"language-text\">ItemDataProvider</code> it will throw a <code class=\"language-text\">CircularReferenceException</code>.</p>\n<p>For this reason, we implemented the <code class=\"language-text\">SerializerAwareDataProviderInterface</code>:</p>\n<div class=\"gatsby-highlight\" data-language=\"php\"><pre class=\"language-php\"><code class=\"language-php\"><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span>\n<span class=\"token comment\">// api/src/DataProvider/BlogPostItemDataProvider.php</span>\n\n<span class=\"token keyword\">namespace</span> <span class=\"token package\">App<span class=\"token punctuation\">\\</span>DataProvider</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">use</span> <span class=\"token package\">ApiPlatform<span class=\"token punctuation\">\\</span>Core<span class=\"token punctuation\">\\</span>DataProvider<span class=\"token punctuation\">\\</span>ItemDataProviderInterface</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">use</span> <span class=\"token package\">ApiPlatform<span class=\"token punctuation\">\\</span>Core<span class=\"token punctuation\">\\</span>DataProvider<span class=\"token punctuation\">\\</span>SerializerAwareDataProviderInterface</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">use</span> <span class=\"token package\">ApiPlatform<span class=\"token punctuation\">\\</span>Core<span class=\"token punctuation\">\\</span>DataProvider<span class=\"token punctuation\">\\</span>SerializerAwareDataProviderTrait</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">use</span> <span class=\"token package\">ApiPlatform<span class=\"token punctuation\">\\</span>Core<span class=\"token punctuation\">\\</span>Exception<span class=\"token punctuation\">\\</span>ResourceClassNotSupportedException</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">use</span> <span class=\"token package\">App<span class=\"token punctuation\">\\</span>Entity<span class=\"token punctuation\">\\</span>BlogPost</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">final</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">BlogPostItemDataProvider</span> <span class=\"token keyword\">implements</span> <span class=\"token class-name\">ItemDataProviderInterface</span><span class=\"token punctuation\">,</span> SerializerAwareDataProviderInterface\n<span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">use</span> <span class=\"token package\">SerializerAwareDataProviderTrait</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">function</span> <span class=\"token function\">supports</span><span class=\"token punctuation\">(</span>string <span class=\"token variable\">$resourceClass</span><span class=\"token punctuation\">,</span> string <span class=\"token variable\">$operationName</span> <span class=\"token operator\">=</span> <span class=\"token constant\">null</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">array</span> <span class=\"token variable\">$context</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span> bool\n    <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">return</span> BlogPost<span class=\"token punctuation\">:</span><span class=\"token punctuation\">:</span><span class=\"token keyword\">class</span> <span class=\"token operator\">===</span> <span class=\"token variable\">$resourceClass</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">function</span> <span class=\"token function\">getItem</span><span class=\"token punctuation\">(</span>string <span class=\"token variable\">$resourceClass</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$id</span><span class=\"token punctuation\">,</span> string <span class=\"token variable\">$operationName</span> <span class=\"token operator\">=</span> <span class=\"token constant\">null</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">array</span> <span class=\"token variable\">$context</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span> <span class=\"token operator\">?</span>BlogPost\n    <span class=\"token punctuation\">{</span>\n        <span class=\"token comment\">// Retrieve data from anywhere you want, in a custom format</span>\n        <span class=\"token variable\">$data</span> <span class=\"token operator\">=</span> <span class=\"token single-quoted-string string\">'...'</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token comment\">// Deserialize data using the Serializer</span>\n        <span class=\"token keyword\">return</span> <span class=\"token variable\">$this</span><span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">getSerializer</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">deserialize</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$data</span><span class=\"token punctuation\">,</span> BlogPost<span class=\"token punctuation\">:</span><span class=\"token punctuation\">:</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">,</span> <span class=\"token single-quoted-string string\">'custom'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></span></code></pre></div>\n<h2 id=\"injecting-extensions-pagination-filter-eagerloading-etc\" style=\"position:relative;\"><a href=\"#injecting-extensions-pagination-filter-eagerloading-etc\" aria-label=\"injecting extensions pagination filter eagerloading etc permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Injecting Extensions (Pagination, Filter, EagerLoading etc.)</h2>\n<p>ApiPlatform provides a few extensions that you can reuse in your custom DataProvider.\nNote that there are a few kind of extensions which are detailed in <a href=\"/docs/v2.3/core/extensions/\">their own chapter of the documentation</a>.\nBecause extensions are tagged services, you can use the <a href=\"https://symfony.com/blog/new-in-symfony-3-4-simpler-injection-of-tagged-services\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">injection of tagged services</a>:</p>\n<div class=\"gatsby-highlight\" data-language=\"yaml\"><pre class=\"language-yaml\"><code class=\"language-yaml\"><span class=\"token key atrule\">services</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">'App\\DataProvider\\BlogPostItemDataProvider'</span><span class=\"token punctuation\">:</span>\n        <span class=\"token key atrule\">arguments</span><span class=\"token punctuation\">:</span>\n          <span class=\"token key atrule\">$itemExtensions</span><span class=\"token punctuation\">:</span> <span class=\"token tag\">!tagged</span> api_platform.doctrine.orm.query_extension.item</code></pre></div>\n<p>Or in XML:</p>\n<div class=\"gatsby-highlight\" data-language=\"xml\"><pre class=\"language-xml\"><code class=\"language-xml\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>services</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>service</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>App\\DataProvider\\BlogPostItemDataProvider<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>argument</span> <span class=\"token attr-name\">key</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>$itemExtensions<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>tagged<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">tag</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>api_platform.doctrine.orm.query_extension.item<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>service</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>services</span><span class=\"token punctuation\">></span></span></code></pre></div>\n<p>Your data provider will now have access to the core extensions, here is an example on how to use them:</p>\n<div class=\"gatsby-highlight\" data-language=\"php\"><pre class=\"language-php\"><code class=\"language-php\"><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span>\n<span class=\"token comment\">// api/src/DataProvider/BlogPostItemDataProvider.php</span>\n\n<span class=\"token keyword\">namespace</span> <span class=\"token package\">App<span class=\"token punctuation\">\\</span>DataProvider</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">use</span> <span class=\"token package\">ApiPlatform<span class=\"token punctuation\">\\</span>Core<span class=\"token punctuation\">\\</span>Bridge<span class=\"token punctuation\">\\</span>Doctrine<span class=\"token punctuation\">\\</span>Orm<span class=\"token punctuation\">\\</span>Util<span class=\"token punctuation\">\\</span>QueryNameGenerator</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">use</span> <span class=\"token package\">ApiPlatform<span class=\"token punctuation\">\\</span>Core<span class=\"token punctuation\">\\</span>DataProvider<span class=\"token punctuation\">\\</span>ItemDataProviderInterface</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">use</span> <span class=\"token package\">ApiPlatform<span class=\"token punctuation\">\\</span>Core<span class=\"token punctuation\">\\</span>DataProvider<span class=\"token punctuation\">\\</span>RestrictedDataProviderInterface</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">use</span> <span class=\"token package\">ApiPlatform<span class=\"token punctuation\">\\</span>Core<span class=\"token punctuation\">\\</span>Exception<span class=\"token punctuation\">\\</span>ResourceClassNotSupportedException</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">use</span> <span class=\"token package\">App<span class=\"token punctuation\">\\</span>Entity<span class=\"token punctuation\">\\</span>BlogPost</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">use</span> <span class=\"token package\">Doctrine<span class=\"token punctuation\">\\</span>Common<span class=\"token punctuation\">\\</span>Persistence<span class=\"token punctuation\">\\</span>ManagerRegistry</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">final</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">BlogPostItemDataProvider</span> <span class=\"token keyword\">implements</span> <span class=\"token class-name\">ItemDataProviderInterface</span><span class=\"token punctuation\">,</span> RestrictedDataProviderInterface\n<span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">private</span> <span class=\"token variable\">$itemExtensions</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">private</span> <span class=\"token variable\">$managerRegistry</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">function</span> <span class=\"token function\">__construct</span><span class=\"token punctuation\">(</span>ManagerRegistry <span class=\"token variable\">$managerRegistry</span><span class=\"token punctuation\">,</span> iterable <span class=\"token variable\">$itemExtensions</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">{</span>\n      <span class=\"token variable\">$this</span><span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token property\">managerRegistry</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$managerRegistry</span><span class=\"token punctuation\">;</span>\n      <span class=\"token variable\">$this</span><span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token property\">itemExtensions</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$itemExtensions</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">function</span> <span class=\"token function\">supports</span><span class=\"token punctuation\">(</span>string <span class=\"token variable\">$resourceClass</span><span class=\"token punctuation\">,</span> string <span class=\"token variable\">$operationName</span> <span class=\"token operator\">=</span> <span class=\"token constant\">null</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">array</span> <span class=\"token variable\">$context</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span> bool\n    <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">return</span> BlogPost<span class=\"token punctuation\">:</span><span class=\"token punctuation\">:</span><span class=\"token keyword\">class</span> <span class=\"token operator\">===</span> <span class=\"token variable\">$resourceClass</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">function</span> <span class=\"token function\">getItem</span><span class=\"token punctuation\">(</span>string <span class=\"token variable\">$resourceClass</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$id</span><span class=\"token punctuation\">,</span> string <span class=\"token variable\">$operationName</span> <span class=\"token operator\">=</span> <span class=\"token constant\">null</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">array</span> <span class=\"token variable\">$context</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span> <span class=\"token operator\">?</span>BlogPost\n    <span class=\"token punctuation\">{</span>\n        <span class=\"token variable\">$manager</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$this</span><span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token property\">managerRegistry</span><span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">getManagerForClass</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$resourceClass</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token variable\">$repository</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$manager</span><span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">getRepository</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$resourceClass</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token variable\">$queryBuilder</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$repository</span><span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">createQueryBuilder</span><span class=\"token punctuation\">(</span><span class=\"token single-quoted-string string\">'o'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token variable\">$queryNameGenerator</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">QueryNameGenerator</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token variable\">$identifiers</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token single-quoted-string string\">'id'</span> <span class=\"token operator\">=</span><span class=\"token operator\">></span> <span class=\"token variable\">$id</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token keyword\">foreach</span> <span class=\"token punctuation\">(</span><span class=\"token variable\">$this</span><span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token property\">itemExtensions</span> <span class=\"token keyword\">as</span> <span class=\"token variable\">$extension</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token variable\">$extension</span><span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">applyToItem</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$queryBuilder</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$queryNameGenerator</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$resourceClass</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$identifiers</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$operationName</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$context</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token variable\">$extension</span> <span class=\"token keyword\">instanceof</span> <span class=\"token class-name\">QueryResultItemExtensionInterface</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token variable\">$extension</span><span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">supportsResult</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$resourceClass</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$operationName</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$context</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>                 <span class=\"token punctuation\">{</span>\n                <span class=\"token keyword\">return</span> <span class=\"token variable\">$extension</span><span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">getResult</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$queryBuilder</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$resourceClass</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$operationName</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$context</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span>\n        <span class=\"token punctuation\">}</span>\n\n        <span class=\"token keyword\">return</span> <span class=\"token variable\">$queryBuilder</span><span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">getQuery</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">getOneOrNullResult</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></span></code></pre></div>","nav":{"chapters":[{"title":"The Distribution: Create Powerful APIs with Ease","path":"distribution","items":[{"id":"index","title":"Getting Started with API Platform: Hypermedia and GraphQL API, Admin and Progressive Web App","anchors":[{"id":"installing-the-framework","title":"Installing the Framework","anchors":[{"id":"using-the-official-distribution-recommended","title":"Using the Official Distribution (recommended)"},{"id":"using-symfony-flex-and-composer-advanced-users","title":"Using Symfony Flex and Composer (advanced users)"}]},{"id":"its-ready","title":"It's Ready!"},{"id":"bringing-your-own-model","title":"Bringing your Own Model"},{"id":"validating-data","title":"Validating Data"},{"id":"adding-graphql-support","title":"Adding GraphQL Support"},{"id":"the-admin","title":"The Admin"},{"id":"a-reactredux-progressive-web-app","title":"A React/Redux Progressive Web App"},{"id":"other-features","title":"Other Features"}]},{"id":"testing","title":"Testing and Specifying the API","anchors":[{"id":"running-unit-tests-with-phpunit","title":"Running Unit Tests with PHPUnit"}]},{"id":"debugging","title":"Debugging","anchors":[{"id":"add-a-development-stage-to-the-dockerfile","title":"Add a Development Stage to the Dockerfile"},{"id":"configure-xdebug-with-docker-compose-override","title":"Configure Xdebug with Docker Compose Override"},{"id":"troubleshooting","title":"Troubleshooting"}]}]},{"title":"The API Component","path":"core","items":[{"id":"index","title":"The API Platform Core Library","anchors":[{"id":"features","title":"Features"},{"id":"other-resources","title":"Other resources"}]},{"id":"getting-started","title":"Getting started","anchors":[{"id":"installing-api-platform-core","title":"Installing API Platform Core"},{"id":"before-reading-this-documentation","title":"Before Reading this Documentation"},{"id":"mapping-the-entities","title":"Mapping the Entities"}]},{"id":"design","title":"General Design Considerations"},{"id":"operations","title":"Operations","anchors":[{"id":"enabling-and-disabling-operations","title":"Enabling and Disabling Operations"},{"id":"configuring-operations","title":"Configuring Operations","anchors":[{"id":"prefixing-all-routes-of-all-operations","title":"Prefixing All Routes of All Operations"}]},{"id":"subresources","title":"Subresources","anchors":[{"id":"control-the-path-of-subresources","title":"Control the Path of Subresources"},{"id":"access-control-of-subresources","title":"Access Control of Subresources"},{"id":"control-the-depth-of-subresources","title":"Control the Depth of Subresources"}]},{"id":"creating-custom-operations-and-controllers","title":"Creating Custom Operations and Controllers","anchors":[{"id":"recommended-method","title":"Recommended Method","anchors":[{"id":"serialization-groups","title":"Serialization Groups"},{"id":"entity-retrieval","title":"Entity Retrieval"}]},{"id":"alternative-method","title":"Alternative Method"}]}]},{"id":"graphql","title":"GraphQL Support","anchors":[{"id":"overall-view","title":"Overall View"},{"id":"enabling-graphql","title":"Enabling GraphQL"},{"id":"graphiql","title":"GraphiQL"},{"id":"filters","title":"Filters","anchors":[{"id":"filtering-on-nested-properties","title":"Filtering on Nested Properties"}]},{"id":"security-access_control","title":"Security (access_control)"},{"id":"serialization-groups","title":"Serialization Groups"}]},{"id":"filters","title":"Filters","anchors":[{"id":"doctrine-orm-filters","title":"Doctrine ORM Filters","anchors":[{"id":"basic-knowledge","title":"Basic Knowledge"},{"id":"search-filter","title":"Search Filter"},{"id":"date-filter","title":"Date Filter","anchors":[{"id":"managing-null-values","title":"Managing null Values"}]},{"id":"boolean-filter","title":"Boolean Filter"},{"id":"numeric-filter","title":"Numeric Filter"},{"id":"range-filter","title":"Range Filter"},{"id":"exists-filter","title":"Exists Filter"},{"id":"order-filter-sorting","title":"Order Filter (Sorting)","anchors":[{"id":"comparing-with-null-values","title":"Comparing with Null Values"},{"id":"using-a-custom-order-query-parameter-name","title":"Using a Custom Order Query Parameter Name"}]},{"id":"filtering-on-nested-properties","title":"Filtering on Nested Properties"},{"id":"enabling-a-filter-for-all-properties-of-a-resource","title":"Enabling a Filter for All Properties of a Resource"}]},{"id":"serializer-filters","title":"Serializer Filters","anchors":[{"id":"group-filter","title":"Group Filter"},{"id":"property-filter","title":"Property filter"}]},{"id":"creating-custom-filters","title":"Creating Custom Filters","anchors":[{"id":"creating-custom-doctrine-orm-filters","title":"Creating Custom Doctrine ORM Filters"},{"id":"using-doctrine-filters","title":"Using Doctrine Filters"}]},{"id":"apifilter-annotation","title":"ApiFilter Annotation"}]},{"id":"serialization","title":"The Serialization Process","anchors":[{"id":"overall-process","title":"Overall Process"},{"id":"available-serializers","title":"Available Serializers"},{"id":"the-serialization-context-groups-and-relations","title":"The Serialization Context, Groups and Relations","anchors":[{"id":"configuration","title":"Configuration"}]},{"id":"using-serialization-groups","title":"Using Serialization Groups"},{"id":"using-serialization-groups-per-operation","title":"Using Serialization Groups per Operation","anchors":[{"id":"embedding-relations","title":"Embedding Relations"},{"id":"denormalization","title":"Denormalization"}]},{"id":"changing-the-serialization-context-dynamically","title":"Changing the Serialization Context Dynamically"},{"id":"changing-the-serialization-context-on-a-per-item-basis","title":"Changing the Serialization Context on a Per-item Basis"},{"id":"name-conversion","title":"Name Conversion"},{"id":"decorating-a-serializer-and-adding-extra-data","title":"Decorating a Serializer and Adding Extra Data"},{"id":"entity-identifier-case","title":"Entity Identifier Case"},{"id":"embedding-the-json-ld-context","title":"Embedding the JSON-LD Context"}]},{"id":"validation","title":"Validation","anchors":[{"id":"validating-submitted-data","title":"Validating Submitted Data"},{"id":"using-validation-groups","title":"Using Validation Groups"},{"id":"using-validation-groups-on-operations","title":"Using Validation Groups on Operations"},{"id":"dynamic-validation-groups","title":"Dynamic Validation Groups"},{"id":"error-levels-and-payload-serialization","title":"Error Levels and Payload Serialization"}]},{"id":"security","title":"Security","anchors":[{"id":"configuring-the-access-control-message","title":"Configuring the Access Control Message"}]},{"id":"data-providers","title":"Data Providers","anchors":[{"id":"custom-collection-data-provider","title":"Custom Collection Data Provider"},{"id":"custom-item-data-provider","title":"Custom Item Data Provider"},{"id":"injecting-the-serializer-in-an-itemdataprovider","title":"Injecting the Serializer in an ItemDataProvider"},{"id":"injecting-extensions-pagination-filter-eagerloading-etc","title":"Injecting Extensions (Pagination, Filter, EagerLoading etc.)"}]},{"id":"data-persisters","title":"Data Persisters","anchors":[{"id":"creating-a-custom-data-persister","title":"Creating a Custom Data Persister"}]},{"id":"pagination","title":"Pagination","anchors":[{"id":"disabling-the-pagination","title":"Disabling the Pagination","anchors":[{"id":"globally","title":"Globally"},{"id":"for-a-specific-resource","title":"For a Specific Resource"},{"id":"client-side","title":"Client-side","anchors":[{"id":"globally","title":"Globally"},{"id":"for-a-specific-resource","title":"For a specific resource"}]}]},{"id":"changing-the-number-of-items-per-page","title":"Changing the Number of Items per Page","anchors":[{"id":"globally","title":"Globally"},{"id":"for-a-specific-resource","title":"For a Specific Resource"},{"id":"client-side","title":"Client-side","anchors":[{"id":"globally","title":"Globally"},{"id":"for-a-specific-resource","title":"For a Specific Resource"}]}]},{"id":"changing-maximum-items-per-page","title":"Changing Maximum items per page","anchors":[{"id":"globally","title":"Globally"},{"id":"for-a-specific-resource","title":"For a Specific Resource"},{"id":"for-a-specific-resource-collection-operation","title":"For a Specific Resource Collection Operation"}]},{"id":"partial-pagination","title":"Partial Pagination","anchors":[{"id":"globally","title":"Globally"},{"id":"for-a-specific-resource","title":"For a Specific Resource"},{"id":"client-side","title":"Client-side","anchors":[{"id":"globally","title":"Globally"},{"id":"for-a-specific-resource","title":"For a Specific Resource"}]}]},{"id":"avoiding-double-sql-requests-on-doctrine","title":"Avoiding double SQL requests on Doctrine"},{"id":"custom-controller-action","title":"Custom Controller Action"}]},{"id":"events","title":"The Event System"},{"id":"content-negotiation","title":"Content Negotiation","anchors":[{"id":"enabling-several-formats","title":"Enabling Several Formats"},{"id":"enabling-additional-formats-on-a-specific-resourceoperation","title":"Enabling Additional Formats On a Specific Resource/Operation"},{"id":"registering-a-custom-serializer","title":"Registering a Custom Serializer"},{"id":"writing-a-custom-normalizer","title":"Writing a Custom Normalizer"}]},{"id":"deprecations","title":"Deprecating Resources and Properties (Alternative to Versioning)","anchors":[{"id":"deprecating-resource-classes-operations-and-properties","title":"Deprecating Resource Classes, Operations and Properties"}]},{"id":"performance","title":"Performance","anchors":[{"id":"enabling-the-built-in-http-cache-invalidation-system","title":"Enabling the Built-in HTTP Cache Invalidation System","anchors":[{"id":"extending-cache-tags-for-invalidation","title":"Extending Cache-Tags for invalidation"}]},{"id":"enabling-the-metadata-cache","title":"Enabling the Metadata Cache"},{"id":"using-ppm-php-pm","title":"Using PPM (PHP-PM)"},{"id":"doctrine-queries-and-indexes","title":"Doctrine Queries and Indexes","anchors":[{"id":"search-filter","title":"Search Filter"},{"id":"eager-loading","title":"Eager Loading","anchors":[{"id":"max-joins","title":"Max Joins"},{"id":"force-eager","title":"Force Eager"},{"id":"override-at-resource-and-operation-level","title":"Override at Resource and Operation Level"},{"id":"disable-eager-loading","title":"Disable Eager Loading"}]},{"id":"partial-pagination","title":"Partial Pagination"}]},{"id":"profiling-with-blackfireio","title":"Profiling with Blackfire.io"}]},{"id":"extensions","title":"Extensions","anchors":[{"id":"custom-extension","title":"Custom Extension"},{"id":"example","title":"Example","anchors":[{"id":"blocking-anonymous-users","title":"Blocking Anonymous Users"}]}]},{"id":"swagger","title":"Swagger / Open API Support","anchors":[{"id":"overriding-the-swagger-documentation","title":"Overriding the Swagger Documentation"},{"id":"using-the-swagger-context","title":"Using the Swagger Context"},{"id":"changing-the-name-of-a-definition","title":"Changing the Name of a Definition"},{"id":"changing-operations-in-the-swagger-documentation","title":"Changing Operations in the Swagger Documentation"},{"id":"changing-the-swagger-ui-location","title":"Changing the Swagger UI Location","anchors":[{"id":"disabling-swagger-ui","title":"Disabling Swagger UI"},{"id":"manually-registering-the-swagger-ui-controller","title":"Manually Registering the Swagger UI Controller"}]},{"id":"using-the-swagger-command","title":"Using the Swagger Command"},{"id":"overriding-the-ui-template","title":"Overriding the UI Template"},{"id":"compatibilily-layer-with-amazon-api-gateway","title":"Compatibilily Layer with Amazon API Gateway"}]},{"id":"dto","title":"Handling Data Transfer Objects (DTOs)","anchors":[{"id":"how-to-use-a-dto-for-writing","title":"How to Use a DTO for Writing"},{"id":"how-to-use-a-dto-for-reading","title":"How to Use a DTO for Reading","anchors":[{"id":"adding-this-custom-dto-reading-in-swagger-documentation","title":"Adding this Custom DTO reading in Swagger Documentation.","anchors":[{"id":"use-swagger-decorator","title":"Use Swagger Decorator"},{"id":"use-nelmioapidoc","title":"Use NelmioApiDoc"}]}]}]},{"id":"file-upload","title":"Handling File Upload","anchors":[{"id":"installing-vichuploaderbundle","title":"Installing VichUploaderBundle"},{"id":"configuring-the-entity-receiving-the-uploaded-file","title":"Configuring the Entity Receiving the Uploaded File"},{"id":"handling-file-upload","title":"Handling File Upload"},{"id":"making-a-request-to-the-media_objects-endpoint","title":"Making a Request to the /media_objects Endpoint"},{"id":"linking-a-mediaobject-resource-to-another-resource","title":"Linking a MediaObject Resource to Another Resource"}]},{"id":"default-order","title":"Overriding Default Order"},{"id":"errors","title":"Errors Handling","anchors":[{"id":"converting-php-exceptions-to-http-errors","title":"Converting PHP Exceptions to HTTP Errors"}]},{"id":"external-vocabularies","title":"Using External Vocabularies"},{"id":"operation-path-naming","title":"Operation Path Naming","anchors":[{"id":"configuration","title":"Configuration"},{"id":"create-a-custom-operation-path-resolver","title":"Create a Custom Operation Path Resolver","anchors":[{"id":"defining-the-operation-path-resolver","title":"Defining the Operation Path Resolver"},{"id":"registering-the-service","title":"Registering the Service"},{"id":"configure-it","title":"Configure It"}]}]},{"id":"extending-jsonld-context","title":"Extending JSON-LD context"},{"id":"form-data","title":"Accept application/x-www-form-urlencoded Form Data","anchors":[{"id":"create-your-deserializelistener-decorator","title":"Create your DeserializeListener Decorator"},{"id":"creating-the-service-definition","title":"Creating the Service Definition"}]},{"id":"identifiers","title":"Identifiers","anchors":[{"id":"custom-identifier-normalizer","title":"Custom identifier normalizer"},{"id":"supported-identifiers","title":"Supported identifiers"}]},{"id":"jwt","title":"JWT Authentication","anchors":[{"id":"installing-lexikjwtauthenticationbundle","title":"Installing LexikJWTAuthenticationBundle"},{"id":"documenting-the-authentication-mechanism-with-swaggeropen-api","title":"Documenting the Authentication Mechanism with Swagger/Open API","anchors":[{"id":"configuring-api-platform","title":"Configuring API Platform"},{"id":"adding-a-new-api-key","title":"Adding a New API Key"}]},{"id":"testing-with-behat","title":"Testing with Behat"}]},{"id":"angularjs-integration","title":"AngularJS Integration","anchors":[{"id":"restangular","title":"Restangular"},{"id":"ng-admin","title":"ng-admin"}]},{"id":"fosuser-bundle","title":"FOSUserBundle Integration","anchors":[{"id":"installing-the-bundle","title":"Installing the Bundle"},{"id":"enabling-the-bridge","title":"Enabling the Bridge"},{"id":"creating-a-user-entity-with-serialization-groups","title":"Creating a User Entity with Serialization Groups"}]},{"id":"nelmio-api-doc","title":"NelmioApiDocBundle Integration"},{"id":"configuration","title":"Configuration"}]},{"title":"The Schema Generator Component","path":"schema-generator","items":[{"id":"index","title":"The schema generator","anchors":[{"id":"what-is-schemaorg","title":"What is Schema.org?"},{"id":"why-use-schemaorg-data-to-generate-a-php-model","title":"Why use Schema.org data to generate a PHP model?","anchors":[{"id":"dont-reinvent-the-wheel","title":"Don't Reinvent The Wheel"},{"id":"improve-seo-and-user-experience","title":"Improve SEO and user experience"},{"id":"be-ready-for-the-future","title":"Be ready for the future"}]},{"id":"documentation","title":"Documentation"}]},{"id":"getting-started","title":"Getting Started","anchors":[{"id":"installation","title":"Installation"},{"id":"model-scaffolding","title":"Model Scaffolding","anchors":[{"id":"going-further","title":"Going Further"}]},{"id":"cardinality-extraction","title":"Cardinality Extraction"}]},{"id":"configuration","title":"Configuration","anchors":[{"id":"customizing-php-namespaces","title":"Customizing PHP Namespaces"},{"id":"forcing-a-field-range","title":"Forcing a Field Range"},{"id":"forcing-a-field-cardinality","title":"Forcing a Field Cardinality"},{"id":"forcing-a-relation-table-name","title":"Forcing a Relation Table Name"},{"id":"forcing-or-disabling-a-class-parent","title":"Forcing (or Disabling) a Class Parent"},{"id":"forcing-a-class-to-be-abstract","title":"Forcing a Class to be Abstract"},{"id":"forcing-a-nullable-property","title":"Forcing a Nullable Property"},{"id":"forcing-a-unique-property","title":"Forcing a Unique Property"},{"id":"making-a-property-read-only","title":"Making a Property Read Only"},{"id":"making-a-property-write-only","title":"Making a Property Write Only"},{"id":"forcing-a-property-to-be-in-a-serialization-group","title":"Forcing a Property to be in a Serialization Group"},{"id":"forcing-an-embeddable-class-to-be-embedded","title":"Forcing an Embeddable Class to be Embedded"},{"id":"author-phpdoc","title":"Author PHPDoc"},{"id":"disabling-generators-and-creating-custom-ones","title":"Disabling Generators and Creating Custom Ones"},{"id":"skipping-accessor-method-generation","title":"Skipping Accessor Method Generation"},{"id":"disabling-the-id-generator","title":"Disabling the id Generator"},{"id":"generating-uuids","title":"Generating UUIDs"},{"id":"user-submitted-uuids","title":"User submitted UUIDs"},{"id":"generating-custom-ids","title":"Generating Custom IDs"},{"id":"disabling-usage-of-doctrine-collection","title":"Disabling Usage of Doctrine Collection"},{"id":"changing-the-field-visibility","title":"Changing the Field Visibility"},{"id":"generating-asserttype-annotations","title":"Generating @Assert\\Type Annotations"},{"id":"forcing-doctrine-inheritance-mapping-annotation","title":"Forcing Doctrine Inheritance Mapping Annotation"},{"id":"interfaces-and-doctrine-resolve-target-entity-listener","title":"Interfaces and Doctrine Resolve Target Entity Listener"},{"id":"custom-schemas","title":"Custom Schemas"},{"id":"checking-goodrelation-compatibility","title":"Checking GoodRelation Compatibility"},{"id":"php-file-header","title":"PHP File Header"},{"id":"full-configuration-reference","title":"Full Configuration Reference"}]}]},{"title":"The Admin Component","path":"admin","items":[{"id":"index","title":"The API Platform Admin","anchors":[{"id":"features","title":"Features"}]},{"id":"getting-started","title":"Getting Started","anchors":[{"id":"installation","title":"Installation"},{"id":"creating-the-admin","title":"Creating the Admin"},{"id":"customizing-the-admin","title":"Customizing the Admin","anchors":[{"id":"using-custom-components","title":"Using Custom Components"},{"id":"managing-files-and-images","title":"Managing Files and Images"},{"id":"using-a-custom-validation-function-or-inject-custom-props","title":"Using a Custom Validation Function or Inject Custom Props"},{"id":"using-the-hydra-data-provider-directly-with-react-admin","title":"Using the Hydra Data Provider Directly with react-admin"}]}]},{"id":"authentication-support","title":"Authentication Support"},{"id":"handling-relations-to-collections","title":"Handling Relations to Collections","anchors":[{"id":"customizing-a-property","title":"Customizing a Property"},{"id":"customizing-an-icon","title":"Customizing an Icon"},{"id":"using-an-autocomplete-input-for-relations","title":"Using an Autocomplete Input for Relations"}]}]},{"title":"The Client Generator Component","path":"client-generator","items":[{"id":"index","title":"The API Platform Client Generator","anchors":[{"id":"features","title":"Features"}]},{"id":"react","title":"React Generator","anchors":[{"id":"install","title":"Install"},{"id":"generating-a-progressive-web-app","title":"Generating a Progressive Web App"},{"id":"screenshots","title":"Screenshots"}]},{"id":"react-native","title":"React Native generator","anchors":[{"id":"install","title":"Install"},{"id":"generating-a-native-app","title":"Generating a Native App"},{"id":"screenshots-in-ios-simulator","title":"Screenshots in iOS Simulator"}]},{"id":"vuejs","title":"Vue.js Generator"},{"id":"troubleshooting","title":"Troubleshooting"}]},{"title":"Deployment","path":"deployment","items":[{"id":"index","title":"Deploying API Platform Applications"},{"id":"kubernetes","title":"Deploying to a Kubernetes Cluster","anchors":[{"id":"preparing-your-cluster-and-your-local-machine","title":"Preparing Your Cluster and Your Local Machine"},{"id":"creating-and-publishing-the-docker-images","title":"Creating and Publishing the Docker Images"},{"id":"deploying","title":"Deploying"},{"id":"initializing-the-database","title":"Initializing the Database"},{"id":"tiller-rbac-issue","title":"Tiller RBAC Issue"}]},{"id":"heroku","title":"Deploying an API Platform App on Heroku"},{"id":"traefik","title":"Implement Traefik Into API Platform Dockerized","anchors":[{"id":"basic-implementation","title":"Basic Implementation"},{"id":"known-issues","title":"Known Issues"}]}]},{"title":"Extra","path":"extra","items":[{"id":"releases","title":"The Release Process"},{"id":"philosophy","title":"API Platform's Philosophy"},{"id":"troubleshooting","title":"Troubleshooting","anchors":[{"id":"using-docker","title":"Using Docker","anchors":[{"id":"with-docker-toolbox-on-windows","title":"With Docker Toolbox on Windows"},{"id":"error-starting-userland-proxy","title":"Error starting userland proxy"}]},{"id":"using-api-platform-and-jms-serializer-in-the-same-project","title":"Using API Platform and JMS Serializer in the same project"},{"id":"upstream-sent-too-big-header-while-reading-response-header-from-upstream-502-error","title":"\"upstream sent too big header while reading response header from upstream\" 502 Error"}]},{"id":"contribution-guides","title":"Contribution guides"},{"id":"conduct","title":"Contributor Code of Conduct","anchors":[{"id":"our-pledge","title":"Our Pledge"},{"id":"our-standards","title":"Our Standards"},{"id":"our-responsibilities","title":"Our Responsibilities"},{"id":"scope","title":"Scope"},{"id":"enforcement","title":"Enforcement"},{"id":"attribution","title":"Attribution"}]}]}]},"next":{"slug":"/docs/v2.3/core/data-persisters/","title":"Data Persisters"},"prefixedVersion":"v2.3","previous":{"slug":"/docs/v2.3/core/security/","title":"Security"},"title":"Data Providers","urlEditDocumentation":"https://github.com/api-platform/docs/edit/2.3/core/data-providers.md","version":"v2.3/"}}}