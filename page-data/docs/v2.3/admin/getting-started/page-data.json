{"componentChunkName":"component---src-templates-doc-js","path":"/docs/v2.3/admin/getting-started/","result":{"pageContext":{"html":"<h1 id=\"getting-started\" style=\"position:relative;\"><a href=\"#getting-started\" aria-label=\"getting started permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Getting Started</h1>\n<h2 id=\"installation\" style=\"position:relative;\"><a href=\"#installation\" aria-label=\"installation permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Installation</h2>\n<p>Install the skeleton and the library:</p>\n<p>Start by installing <a href=\"https://yarnpkg.com/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">the Yarn package manager</a> (<a href=\"https://www.npmjs.com/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">NPM</a> is also supported) and\nthe <a href=\"https://facebook.github.io/create-react-app/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Create React App</a> tool.</p>\n<p>Then, create a new React application for your admin:</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">$ create-react-app my-admin</code></pre></div>\n<p>Now, go to the newly created <code class=\"language-text\">my-admin</code> directory:</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">$ cd my-admin</code></pre></div>\n<p>Finally, install the <code class=\"language-text\">@api-platform/admin</code> library:</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">$ yarn add @api-platform/admin</code></pre></div>\n<h2 id=\"creating-the-admin\" style=\"position:relative;\"><a href=\"#creating-the-admin\" aria-label=\"creating the admin permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Creating the Admin</h2>\n<p>Edit the <code class=\"language-text\">src/App.js</code> file like the following:</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">import</span> React <span class=\"token keyword\">from</span> <span class=\"token string\">'react'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> HydraAdmin <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'@api-platform/admin'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// Replace with your own API entrypoint: if https://example.com/api/books is the path</span>\n<span class=\"token comment\">// to the collection of book resources, then the entrypoint is https://example.com/api</span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token operator\">&lt;</span>HydraAdmin entrypoint<span class=\"token operator\">=</span><span class=\"token string\">\"https://demo.api-platform.com\"</span><span class=\"token operator\">/</span><span class=\"token operator\">></span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>Be sure to make your API send proper <a href=\"https://developer.mozilla.org/en-US/docs/Web/HTTP/CORS\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">CORS HTTP headers</a> to allow\nthe admin's domain to access it.\nTo do so, update the value of the <code class=\"language-text\">CORS_ALLOW_ORIGIN</code> parameter in <code class=\"language-text\">api/.env</code> (it will be set to <code class=\"language-text\">^https?://localhost:?[0-9]*$</code>\nby default).</p>\n<p>If you're not using the API Platform distribution, you will need to adjust the NelmioCorsBundle configuration to expose the <code class=\"language-text\">Link</code> HTTP header and to send proper CORS headers on the route under which the API will be served (<code class=\"language-text\">/api</code> by default).\nHere is a sample configuration (if you use the API Platform distribution, you can skip this step):</p>\n<div class=\"gatsby-highlight\" data-language=\"yaml\"><pre class=\"language-yaml\"><code class=\"language-yaml\"><span class=\"token comment\"># config/packages/nelmio-cors.yaml</span>\n\n<span class=\"token key atrule\">nelmio_cors</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">paths</span><span class=\"token punctuation\">:</span>\n        <span class=\"token key atrule\">'^/api/'</span><span class=\"token punctuation\">:</span>\n            <span class=\"token key atrule\">origin_regex</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">true</span>\n            <span class=\"token key atrule\">allow_origin</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'^http://localhost:[0-9]+'</span><span class=\"token punctuation\">]</span> <span class=\"token comment\"># You probably want to change this regex to match your real domain</span>\n            <span class=\"token key atrule\">allow_methods</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'GET'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'OPTIONS'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'POST'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'PUT'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'PATCH'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'DELETE'</span><span class=\"token punctuation\">]</span>\n            <span class=\"token key atrule\">allow_headers</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'Content-Type'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'Authorization'</span><span class=\"token punctuation\">]</span>\n            <span class=\"token key atrule\">expose_headers</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'Link'</span><span class=\"token punctuation\">]</span>\n            <span class=\"token key atrule\">max_age</span><span class=\"token punctuation\">:</span> <span class=\"token number\">3600</span></code></pre></div>\n<p>Clear the cache to apply this change:</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">$ docker-compose exec php bin/console cache:clear --env=prod</code></pre></div>\n<p>Your new administration interface is ready! Type <code class=\"language-text\">yarn start</code> to try it!</p>\n<p>Note: if you don't want to hardcode the API URL, you can <a href=\"https://facebook.github.io/create-react-app/docs/adding-custom-environment-variables\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">use an environment variable</a>.</p>\n<h2 id=\"customizing-the-admin\" style=\"position:relative;\"><a href=\"#customizing-the-admin\" aria-label=\"customizing the admin permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Customizing the Admin</h2>\n<p>The API Platform's admin parses the Hydra documentation exposed by the API and transforms it to an object data structure. This data structure can be customized to add, remove or customize resources and properties. To do so, we can leverage the <code class=\"language-text\">AdminBuilder</code> component provided by the library. It's a lower level component than the <code class=\"language-text\">HydraAdmin</code> one we used in the previous example. It allows to access to the object storing the structure of admin's screens.</p>\n<h3 id=\"using-custom-components\" style=\"position:relative;\"><a href=\"#using-custom-components\" aria-label=\"using custom components permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Using Custom Components</h3>\n<p>In the following example, we change components used for the <code class=\"language-text\">description</code> property of the <code class=\"language-text\">books</code> resource to ones accepting HTML (respectively <code class=\"language-text\">RichTextField</code> that renders HTML markup and <code class=\"language-text\">RichTextInput</code>, a WYSWYG editor).\n(To use the <code class=\"language-text\">RichTextInput</code>, the <code class=\"language-text\">ra-input-rich-text</code> package is must be installed: <code class=\"language-text\">yarn add ra-input-rich-text</code>).</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">import</span> React <span class=\"token keyword\">from</span> <span class=\"token string\">'react'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> RichTextField <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'react-admin'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> RichTextInput <span class=\"token keyword\">from</span> <span class=\"token string\">'ra-input-rich-text'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> HydraAdmin <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'@api-platform/admin'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> parseHydraDocumentation <span class=\"token keyword\">from</span> <span class=\"token string\">'@api-platform/api-doc-parser/lib/hydra/parseHydraDocumentation'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> entrypoint <span class=\"token operator\">=</span> <span class=\"token string\">'https://demo.api-platform.com'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> <span class=\"token function-variable function\">myApiDocumentationParser</span> <span class=\"token operator\">=</span> <span class=\"token parameter\">entrypoint</span> <span class=\"token operator\">=></span> <span class=\"token function\">parseHydraDocumentation</span><span class=\"token punctuation\">(</span>entrypoint<span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token punctuation\">{</span> api <span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> books <span class=\"token operator\">=</span> api<span class=\"token punctuation\">.</span>resources<span class=\"token punctuation\">.</span><span class=\"token function\">find</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token punctuation\">{</span> name <span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token string\">'books'</span> <span class=\"token operator\">===</span> name<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">const</span> description <span class=\"token operator\">=</span> books<span class=\"token punctuation\">.</span>fields<span class=\"token punctuation\">.</span><span class=\"token function\">find</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">f</span> <span class=\"token operator\">=></span> <span class=\"token string\">'description'</span> <span class=\"token operator\">===</span> f<span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    description<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">field</span> <span class=\"token operator\">=</span> <span class=\"token parameter\">props</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">(</span>\n      <span class=\"token operator\">&lt;</span>RichTextField <span class=\"token punctuation\">{</span><span class=\"token operator\">...</span>props<span class=\"token punctuation\">}</span> source<span class=\"token operator\">=</span><span class=\"token string\">\"description\"</span> <span class=\"token operator\">/</span><span class=\"token operator\">></span>\n    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    description<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">input</span> <span class=\"token operator\">=</span> <span class=\"token parameter\">props</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">(</span>\n      <span class=\"token operator\">&lt;</span>RichTextInput <span class=\"token punctuation\">{</span><span class=\"token operator\">...</span>props<span class=\"token punctuation\">}</span> source<span class=\"token operator\">=</span><span class=\"token string\">\"description\"</span> <span class=\"token operator\">/</span><span class=\"token operator\">></span>\n    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    description<span class=\"token punctuation\">.</span>input<span class=\"token punctuation\">.</span>defaultProps <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n      addField<span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n      addLabel<span class=\"token operator\">:</span> <span class=\"token boolean\">true</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">{</span> api <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">props</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token operator\">&lt;</span>HydraAdmin apiDocumentationParser<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>myApiDocumentationParser<span class=\"token punctuation\">}</span> entrypoint<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>entrypoint<span class=\"token punctuation\">}</span><span class=\"token operator\">/</span><span class=\"token operator\">></span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>The <code class=\"language-text\">field</code> property of the <code class=\"language-text\">Field</code> class allows to set the component used to render a property in list and show screens.\nThe <code class=\"language-text\">input</code> property allows to set the component to use to render the input used in create and edit screens.</p>\n<p>Any <a href=\"https://marmelab.com/react-admin/Fields.html\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">field</a> or <a href=\"https://marmelab.com/react-admin/Inputs.html\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">input</a> provided by the React Admin library can be used.</p>\n<p>To go further, take a look to the \"<a href=\"https://marmelab.com/react-admin/CustomApp.html\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Including react-admin on another React app</a>\" documentation page of React Admin to learn how to use directly redux, react-router, and redux-saga along with components provided by this library.</p>\n<h3 id=\"managing-files-and-images\" style=\"position:relative;\"><a href=\"#managing-files-and-images\" aria-label=\"managing files and images permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Managing Files and Images</h3>\n<p>In the following example, we will:</p>\n<ul>\n<li>find every <a href=\"http://schema.org/ImageObject\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">ImageObject</a> resources. For each <a href=\"http://schema.org/contentUrl\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">contentUrl</a> fields, we will use <a href=\"https://marmelab.com/react-admin/Fields.html#imagefield\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">ImageField</a> as <code class=\"language-text\">field</code> and <a href=\"https://marmelab.com/react-admin/Inputs.html#imageinput\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">ImageInput</a> as <code class=\"language-text\">input</code>.</li>\n<li><a href=\"https://marmelab.com/react-admin/Inputs.html#imageinput\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">ImageInput</a> will return a <a href=\"https://developer.mozilla.org/en/docs/Web/API/File\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">File</a> instance. In this example, we will send a multi-part form data to a special action (<code class=\"language-text\">https://demo.api-platform.com/images/upload</code>). The action will return the ID of the uploaded image. We will \"replace\" the <a href=\"https://developer.mozilla.org/en/docs/Web/API/File\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">File</a> instance by the ID in <code class=\"language-text\">normalizeData</code>.</li>\n<li>As <code class=\"language-text\">contentUrl</code> fields will return a string, we have to convert Hydra data to React Admin data. This action will be done by <code class=\"language-text\">denormalizeData</code>.</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">import</span> React <span class=\"token keyword\">from</span> <span class=\"token string\">'react'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> FunctionField<span class=\"token punctuation\">,</span> ImageField<span class=\"token punctuation\">,</span> ImageInput<span class=\"token punctuation\">,</span> RichTextField <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'react-admin'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> RichTextInput <span class=\"token keyword\">from</span> <span class=\"token string\">'ra-input-rich-text'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> HydraAdmin <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'@api-platform/admin'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> parseHydraDocumentation <span class=\"token keyword\">from</span> <span class=\"token string\">'@api-platform/api-doc-parser/lib/hydra/parseHydraDocumentation'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> entrypoint <span class=\"token operator\">=</span> <span class=\"token string\">'https://demo.api-platform.com'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> <span class=\"token function-variable function\">myApiDocumentationParser</span> <span class=\"token operator\">=</span> <span class=\"token parameter\">entrypoint</span> <span class=\"token operator\">=></span> <span class=\"token function\">parseHydraDocumentation</span><span class=\"token punctuation\">(</span>entrypoint<span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token punctuation\">{</span> api <span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n\n    <span class=\"token keyword\">const</span> books <span class=\"token operator\">=</span> api<span class=\"token punctuation\">.</span>resources<span class=\"token punctuation\">.</span><span class=\"token function\">find</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token punctuation\">{</span> name <span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token string\">'books'</span> <span class=\"token operator\">===</span> name<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">const</span> description <span class=\"token operator\">=</span> books<span class=\"token punctuation\">.</span>fields<span class=\"token punctuation\">.</span><span class=\"token function\">find</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token punctuation\">{</span> name <span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token string\">'description'</span> <span class=\"token operator\">===</span> name<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    description<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">input</span> <span class=\"token operator\">=</span> <span class=\"token parameter\">props</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">(</span>\n      <span class=\"token operator\">&lt;</span>RichTextInput <span class=\"token punctuation\">{</span><span class=\"token operator\">...</span>props<span class=\"token punctuation\">}</span> source<span class=\"token operator\">=</span><span class=\"token string\">\"description\"</span> <span class=\"token operator\">/</span><span class=\"token operator\">></span>\n    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    description<span class=\"token punctuation\">.</span>input<span class=\"token punctuation\">.</span>defaultProps <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n      addField<span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n      addLabel<span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n    api<span class=\"token punctuation\">.</span>resources<span class=\"token punctuation\">.</span><span class=\"token function\">map</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">resource</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token string\">'http://schema.org/ImageObject'</span> <span class=\"token operator\">===</span> resource<span class=\"token punctuation\">.</span>id<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        resource<span class=\"token punctuation\">.</span>fields<span class=\"token punctuation\">.</span><span class=\"token function\">map</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">field</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n          <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token string\">'http://schema.org/contentUrl'</span> <span class=\"token operator\">===</span> field<span class=\"token punctuation\">.</span>id<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            field<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">denormalizeData</span> <span class=\"token operator\">=</span> <span class=\"token parameter\">value</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n              src<span class=\"token operator\">:</span> value\n            <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n            field<span class=\"token punctuation\">.</span>field <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>\n              <span class=\"token operator\">&lt;</span>FunctionField\n                key<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>field<span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">}</span>\n                render<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>\n                  <span class=\"token parameter\">record</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">(</span>\n                    <span class=\"token operator\">&lt;</span>ImageField key<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>field<span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">}</span> record<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>record<span class=\"token punctuation\">}</span> source<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>field<span class=\"token punctuation\">.</span>name<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">.src</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">}</span><span class=\"token operator\">/</span><span class=\"token operator\">></span>\n                  <span class=\"token punctuation\">)</span>\n                <span class=\"token punctuation\">}</span>\n                source<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>field<span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">}</span>\n              <span class=\"token operator\">/</span><span class=\"token operator\">></span>\n            <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n            field<span class=\"token punctuation\">.</span>input <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>\n              <span class=\"token operator\">&lt;</span>ImageInput accept<span class=\"token operator\">=</span><span class=\"token string\">\"image/*\"</span> key<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>field<span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">}</span> multiple<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span><span class=\"token boolean\">false</span><span class=\"token punctuation\">}</span> source<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>field<span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">}</span><span class=\"token operator\">></span>\n                <span class=\"token operator\">&lt;</span>ImageField source<span class=\"token operator\">=</span><span class=\"token string\">\"src\"</span><span class=\"token operator\">/</span><span class=\"token operator\">></span>\n              <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>ImageInput<span class=\"token operator\">></span>\n            <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n            field<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">normalizeData</span> <span class=\"token operator\">=</span> <span class=\"token parameter\">value</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n              <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>value<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">&amp;&amp;</span> value<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>rawFile <span class=\"token keyword\">instanceof</span> <span class=\"token class-name\">File</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                <span class=\"token keyword\">const</span> body <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">FormData</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                body<span class=\"token punctuation\">.</span><span class=\"token function\">append</span><span class=\"token punctuation\">(</span><span class=\"token string\">'file'</span><span class=\"token punctuation\">,</span> value<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>rawFile<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n                <span class=\"token keyword\">return</span> <span class=\"token function\">fetch</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>entrypoint<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">/images/upload</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span> body<span class=\"token punctuation\">,</span> method<span class=\"token operator\">:</span> <span class=\"token string\">'POST'</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n                  <span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">response</span> <span class=\"token operator\">=></span> response<span class=\"token punctuation\">.</span><span class=\"token function\">json</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n              <span class=\"token punctuation\">}</span>\n\n              <span class=\"token keyword\">return</span> value<span class=\"token punctuation\">.</span>src<span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n          <span class=\"token punctuation\">}</span>\n\n          <span class=\"token keyword\">return</span> field<span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">}</span>\n\n      <span class=\"token keyword\">return</span> resource<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">{</span> api <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">props</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token operator\">&lt;</span>HydraAdmin apiDocumentationParser<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>myApiDocumentationParser<span class=\"token punctuation\">}</span> entrypoint<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>entrypoint<span class=\"token punctuation\">}</span><span class=\"token operator\">/</span><span class=\"token operator\">></span><span class=\"token punctuation\">;</span></code></pre></div>\n<p><strong>Note</strong>: In this example, we choose to send the file via a multi-part form data, but you are totally free to use another solution (like <code class=\"language-text\">base64</code>). But keep in mind that multi-part form data is the most efficient solution.</p>\n<h3 id=\"using-a-custom-validation-function-or-inject-custom-props\" style=\"position:relative;\"><a href=\"#using-a-custom-validation-function-or-inject-custom-props\" aria-label=\"using a custom validation function or inject custom props permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Using a Custom Validation Function or Inject Custom Props</h3>\n<p>Example to add a minLength validator on the <code class=\"language-text\">description</code> field:</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">import</span> React<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span> Component <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'react'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> minLength <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'react-admin'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> RichTextInput <span class=\"token keyword\">from</span> <span class=\"token string\">'ra-input-rich-text'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> AdminBuilder<span class=\"token punctuation\">,</span> hydraClient <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'@api-platform-admin'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> parseHydraDocumentation <span class=\"token keyword\">from</span> <span class=\"token string\">'@api-platform/api-doc-parser/lib/hydra/parseHydraDocumentation'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> entrypoint <span class=\"token operator\">=</span> <span class=\"token string\">'https://demo.api-platform.com'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">extends</span> Component <span class=\"token punctuation\">{</span>\n  state <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span> api<span class=\"token operator\">:</span> <span class=\"token keyword\">null</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token function\">componentDidMount</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">parseHydraDocumentation</span><span class=\"token punctuation\">(</span>entrypoint<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token punctuation\">{</span> api <span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">const</span> books <span class=\"token operator\">=</span> api<span class=\"token punctuation\">.</span>resources<span class=\"token punctuation\">.</span><span class=\"token function\">find</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token punctuation\">{</span> name <span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token string\">'books'</span> <span class=\"token operator\">===</span> name<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n      <span class=\"token keyword\">const</span> description <span class=\"token operator\">=</span> books<span class=\"token punctuation\">.</span>fields<span class=\"token punctuation\">.</span><span class=\"token function\">find</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token punctuation\">{</span> name <span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token string\">'description'</span> <span class=\"token operator\">===</span> name<span class=\"token punctuation\">)</span>\n      description<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">input</span> <span class=\"token operator\">=</span> <span class=\"token parameter\">props</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">(</span>\n        <span class=\"token operator\">&lt;</span>RichTextInput source<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>description<span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">}</span> label<span class=\"token operator\">=</span><span class=\"token string\">\"Description\"</span> validate<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span><span class=\"token function\">minLength</span><span class=\"token punctuation\">(</span><span class=\"token number\">30</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span> <span class=\"token punctuation\">{</span><span class=\"token operator\">...</span>props<span class=\"token punctuation\">}</span> <span class=\"token operator\">/</span><span class=\"token operator\">></span>\n      <span class=\"token punctuation\">)</span>\n\n      <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">setState</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> api <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">null</span> <span class=\"token operator\">===</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>state<span class=\"token punctuation\">.</span>api<span class=\"token punctuation\">)</span> <span class=\"token keyword\">return</span> <span class=\"token operator\">&lt;</span>div<span class=\"token operator\">></span>Loading<span class=\"token operator\">...</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">return</span> <span class=\"token operator\">&lt;</span>AdminBuilder api<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>state<span class=\"token punctuation\">.</span>api <span class=\"token punctuation\">}</span> dataProvider<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span> <span class=\"token function\">hydraClient</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>state<span class=\"token punctuation\">.</span>api<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">}</span><span class=\"token operator\">/</span><span class=\"token operator\">></span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h3 id=\"using-the-hydra-data-provider-directly-with-react-admin\" style=\"position:relative;\"><a href=\"#using-the-hydra-data-provider-directly-with-react-admin\" aria-label=\"using the hydra data provider directly with react admin permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Using the Hydra Data Provider Directly with react-admin</h3>\n<p>By default, the <code class=\"language-text\">HydraAdmin</code> component shipped with API Platform Admin will generate a convenient admin interface for every resources and every properties exposed by the API. But sometimes, you may prefer having full control over the generated admin.</p>\n<p>To do so, an alternative approach is <a href=\"https://marmelab.com/react-admin/Tutorial.html\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">to configure every react-admin components manually</a> instead of letting the library generating it, but to still leverage the built-in Hydra <a href=\"https://marmelab.com/react-admin/DataProviders.html\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">data provider</a>:</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token comment\">// admin/src/App.js</span>\n\n<span class=\"token keyword\">import</span> React<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span> Component <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'react'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> Admin<span class=\"token punctuation\">,</span> Resource <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'react-admin'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> parseHydraDocumentation <span class=\"token keyword\">from</span> <span class=\"token string\">'@api-platform/api-doc-parser/lib/hydra/parseHydraDocumentation'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> hydraClient<span class=\"token punctuation\">,</span> fetchHydra <span class=\"token keyword\">as</span> baseFetchHydra  <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'@api-platform/admin'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> authProvider <span class=\"token keyword\">from</span> <span class=\"token string\">'./authProvider'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> Redirect <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'react-router-dom'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> createMuiTheme <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'@material-ui/core/styles'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> Layout <span class=\"token keyword\">from</span> <span class=\"token string\">'./Component/Layout'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> UserShow <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'./Components/User/Show'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> UserEdit <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'./Components/User/Edit'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> UserCreate <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'./Components/User/Create'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> UserList <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'./Components/User/List'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> theme <span class=\"token operator\">=</span> <span class=\"token function\">createMuiTheme</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n    palette<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n        type<span class=\"token operator\">:</span> <span class=\"token string\">'light'</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> entrypoint <span class=\"token operator\">=</span> process<span class=\"token punctuation\">.</span>env<span class=\"token punctuation\">.</span><span class=\"token constant\">REACT_APP_API_ENTRYPOINT</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> fetchHeaders <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token string\">'Authorization'</span><span class=\"token operator\">:</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">Bearer </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>window<span class=\"token punctuation\">.</span>localStorage<span class=\"token punctuation\">.</span><span class=\"token function\">getItem</span><span class=\"token punctuation\">(</span><span class=\"token string\">'token'</span><span class=\"token punctuation\">)</span><span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> <span class=\"token function-variable function\">fetchHydra</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">url<span class=\"token punctuation\">,</span> options <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token function\">baseFetchHydra</span><span class=\"token punctuation\">(</span>url<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token operator\">...</span>options<span class=\"token punctuation\">,</span>\n    headers<span class=\"token operator\">:</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Headers</span><span class=\"token punctuation\">(</span>fetchHeaders<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> <span class=\"token function-variable function\">dataProvider</span> <span class=\"token operator\">=</span> <span class=\"token parameter\">api</span> <span class=\"token operator\">=></span> <span class=\"token function\">hydraClient</span><span class=\"token punctuation\">(</span>api<span class=\"token punctuation\">,</span> fetchHydra<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> <span class=\"token function-variable function\">apiDocumentationParser</span> <span class=\"token operator\">=</span> <span class=\"token parameter\">entrypoint</span> <span class=\"token operator\">=></span> <span class=\"token function\">parseHydraDocumentation</span><span class=\"token punctuation\">(</span>entrypoint<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span> headers<span class=\"token operator\">:</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Headers</span><span class=\"token punctuation\">(</span>fetchHeaders<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span>\n        <span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token punctuation\">{</span> api <span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>api<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n        <span class=\"token punctuation\">(</span><span class=\"token parameter\">result</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n            <span class=\"token keyword\">switch</span> <span class=\"token punctuation\">(</span>result<span class=\"token punctuation\">.</span>status<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                <span class=\"token keyword\">case</span> <span class=\"token number\">401</span><span class=\"token operator\">:</span>\n                    <span class=\"token keyword\">return</span> Promise<span class=\"token punctuation\">.</span><span class=\"token function\">resolve</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n                        api<span class=\"token operator\">:</span> result<span class=\"token punctuation\">.</span>api<span class=\"token punctuation\">,</span>\n                        customRoutes<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">{</span>\n                            props<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n                                path<span class=\"token operator\">:</span> <span class=\"token string\">'/'</span><span class=\"token punctuation\">,</span>\n                                <span class=\"token function-variable function\">render</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token operator\">&lt;</span>Redirect to<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">/login</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">}</span><span class=\"token operator\">/</span><span class=\"token operator\">></span><span class=\"token punctuation\">,</span>\n                            <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n                        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n                    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n                <span class=\"token keyword\">default</span><span class=\"token operator\">:</span>\n                    <span class=\"token keyword\">return</span> Promise<span class=\"token punctuation\">.</span><span class=\"token function\">reject</span><span class=\"token punctuation\">(</span>result<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">extends</span> Component <span class=\"token punctuation\">{</span>\n    state <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span> api<span class=\"token operator\">:</span> <span class=\"token keyword\">null</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token function\">componentDidMount</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token function\">apiDocumentationParser</span><span class=\"token punctuation\">(</span>entrypoint<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token punctuation\">{</span> api <span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n            <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">setState</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> api <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">catch</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">e</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n            console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">null</span> <span class=\"token operator\">===</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>state<span class=\"token punctuation\">.</span>api<span class=\"token punctuation\">)</span> <span class=\"token keyword\">return</span> <span class=\"token operator\">&lt;</span>div<span class=\"token operator\">></span>Loading<span class=\"token operator\">...</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n            <span class=\"token operator\">&lt;</span>Admin api<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>state<span class=\"token punctuation\">.</span>api <span class=\"token punctuation\">}</span>\n                   apiDocumentationParser<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span> apiDocumentationParser <span class=\"token punctuation\">}</span>\n                   dataProvider<span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span> <span class=\"token function\">dataProvider</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>state<span class=\"token punctuation\">.</span>api<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">}</span>\n                   theme<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span> theme <span class=\"token punctuation\">}</span>\n                   appLayout<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span> Layout <span class=\"token punctuation\">}</span>\n                   authProvider<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span> authProvider <span class=\"token punctuation\">}</span>          \n            <span class=\"token operator\">></span>                \n                <span class=\"token operator\">&lt;</span>Resource name<span class=\"token operator\">=</span><span class=\"token string\">\"users\"</span> list<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span> UserList <span class=\"token punctuation\">}</span> create<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span> UserCreate <span class=\"token punctuation\">}</span> show<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span> UserShow <span class=\"token punctuation\">}</span> edit<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span> UserEdit <span class=\"token punctuation\">}</span> title<span class=\"token operator\">=</span><span class=\"token string\">\"Users\"</span><span class=\"token operator\">/</span><span class=\"token operator\">></span>\n            <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>Admin<span class=\"token operator\">></span>\n        <span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>And accordingly create files <code class=\"language-text\">Show.js</code>, <code class=\"language-text\">Create.js</code>, <code class=\"language-text\">List.js</code>, <code class=\"language-text\">Edit.js</code>\nin the <code class=\"language-text\">admin/src/Component/User</code> directory:</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token comment\">// admin/src/Component/User/Create.js</span>\n\n<span class=\"token keyword\">import</span> React <span class=\"token keyword\">from</span> <span class=\"token string\">'react'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> Create<span class=\"token punctuation\">,</span> SimpleForm<span class=\"token punctuation\">,</span> TextInput<span class=\"token punctuation\">,</span> email<span class=\"token punctuation\">,</span> required<span class=\"token punctuation\">,</span> ArrayInput<span class=\"token punctuation\">,</span> SimpleFormIterator <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'react-admin'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">const</span> <span class=\"token function-variable function\">UserCreate</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">props</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">(</span>\n    <span class=\"token operator\">&lt;</span>Create <span class=\"token punctuation\">{</span> <span class=\"token operator\">...</span>props <span class=\"token punctuation\">}</span><span class=\"token operator\">></span>\n        <span class=\"token operator\">&lt;</span>SimpleForm<span class=\"token operator\">></span>\n            <span class=\"token operator\">&lt;</span>TextInput source<span class=\"token operator\">=</span><span class=\"token string\">\"email\"</span> label<span class=\"token operator\">=</span><span class=\"token string\">\"Email\"</span> validate<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span> <span class=\"token function\">email</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">}</span> <span class=\"token operator\">/</span><span class=\"token operator\">></span>\n            <span class=\"token operator\">&lt;</span>TextInput source<span class=\"token operator\">=</span><span class=\"token string\">\"plainPassword\"</span> label<span class=\"token operator\">=</span><span class=\"token string\">\"Password\"</span> validate<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span> <span class=\"token function\">required</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">}</span> <span class=\"token operator\">/</span><span class=\"token operator\">></span>\n            <span class=\"token operator\">&lt;</span>TextInput source<span class=\"token operator\">=</span><span class=\"token string\">\"name\"</span> label<span class=\"token operator\">=</span><span class=\"token string\">\"Name\"</span><span class=\"token operator\">/</span><span class=\"token operator\">></span>\n            <span class=\"token operator\">&lt;</span>TextInput source<span class=\"token operator\">=</span><span class=\"token string\">\"phone\"</span> label<span class=\"token operator\">=</span><span class=\"token string\">\"Phone\"</span><span class=\"token operator\">/</span><span class=\"token operator\">></span>\n            <span class=\"token operator\">&lt;</span>ArrayInput source<span class=\"token operator\">=</span><span class=\"token string\">\"roles\"</span> label<span class=\"token operator\">=</span><span class=\"token string\">\"Roles\"</span><span class=\"token operator\">></span>\n                <span class=\"token operator\">&lt;</span>SimpleFormIterator<span class=\"token operator\">></span>\n                    <span class=\"token operator\">&lt;</span>TextInput <span class=\"token operator\">/</span><span class=\"token operator\">></span>\n                <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>SimpleFormIterator<span class=\"token operator\">></span>\n            <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>ArrayInput<span class=\"token operator\">></span>\n        <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>SimpleForm<span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>Create<span class=\"token operator\">></span>\n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token comment\">// admin/src/Component/User/Edit.js</span>\n\n<span class=\"token keyword\">import</span> React <span class=\"token keyword\">from</span> <span class=\"token string\">'react'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> Edit<span class=\"token punctuation\">,</span> SimpleForm<span class=\"token punctuation\">,</span> DisabledInput<span class=\"token punctuation\">,</span> TextInput<span class=\"token punctuation\">,</span> email<span class=\"token punctuation\">,</span> ArrayInput<span class=\"token punctuation\">,</span> SimpleFormIterator<span class=\"token punctuation\">,</span> DateInput <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'react-admin'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">const</span> <span class=\"token function-variable function\">UserEdit</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">props</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">(</span>\n    <span class=\"token operator\">&lt;</span>Edit <span class=\"token punctuation\">{</span><span class=\"token operator\">...</span>props<span class=\"token punctuation\">}</span><span class=\"token operator\">></span>\n        <span class=\"token operator\">&lt;</span>SimpleForm<span class=\"token operator\">></span>\n            <span class=\"token operator\">&lt;</span>DisabledInput source<span class=\"token operator\">=</span><span class=\"token string\">\"originId\"</span> label<span class=\"token operator\">=</span><span class=\"token string\">\"ID\"</span><span class=\"token operator\">/</span><span class=\"token operator\">></span>\n            <span class=\"token operator\">&lt;</span>TextInput source<span class=\"token operator\">=</span><span class=\"token string\">\"email\"</span> label<span class=\"token operator\">=</span><span class=\"token string\">\"Email\"</span> validate<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span> <span class=\"token function\">email</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">}</span> <span class=\"token operator\">/</span><span class=\"token operator\">></span>\n            <span class=\"token operator\">&lt;</span>TextInput source<span class=\"token operator\">=</span><span class=\"token string\">\"name\"</span> label<span class=\"token operator\">=</span><span class=\"token string\">\"Name\"</span><span class=\"token operator\">/</span><span class=\"token operator\">></span>\n            <span class=\"token operator\">&lt;</span>TextInput source<span class=\"token operator\">=</span><span class=\"token string\">\"phone\"</span> label<span class=\"token operator\">=</span><span class=\"token string\">\"Phone\"</span><span class=\"token operator\">/</span><span class=\"token operator\">></span>\n            <span class=\"token operator\">&lt;</span>ArrayInput source<span class=\"token operator\">=</span><span class=\"token string\">\"roles\"</span> label<span class=\"token operator\">=</span><span class=\"token string\">\"Roles\"</span><span class=\"token operator\">></span>\n                <span class=\"token operator\">&lt;</span>SimpleFormIterator<span class=\"token operator\">></span>\n                    <span class=\"token operator\">&lt;</span>TextInput <span class=\"token operator\">/</span><span class=\"token operator\">></span>\n                <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>SimpleFormIterator<span class=\"token operator\">></span>\n            <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>ArrayInput<span class=\"token operator\">></span>\n            <span class=\"token operator\">&lt;</span>DateInput disabled source<span class=\"token operator\">=</span><span class=\"token string\">\"createdAt\"</span> label<span class=\"token operator\">=</span><span class=\"token string\">\"Date\"</span><span class=\"token operator\">/</span><span class=\"token operator\">></span>\n        <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>SimpleForm<span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>Edit<span class=\"token operator\">></span>\n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token comment\">// admin/src/Component/User/List.js</span>\n\n<span class=\"token keyword\">import</span> React <span class=\"token keyword\">from</span> <span class=\"token string\">'react'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> List<span class=\"token punctuation\">,</span> Datagrid<span class=\"token punctuation\">,</span> TextField<span class=\"token punctuation\">,</span> EmailField<span class=\"token punctuation\">,</span> DateField<span class=\"token punctuation\">,</span> ShowButton<span class=\"token punctuation\">,</span> EditButton <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'react-admin'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> CustomPagination <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'../Pagination/CustomPagination'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">const</span> <span class=\"token function-variable function\">UserList</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">props</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">(</span>\n    <span class=\"token operator\">&lt;</span>List <span class=\"token punctuation\">{</span><span class=\"token operator\">...</span>props<span class=\"token punctuation\">}</span> title<span class=\"token operator\">=</span><span class=\"token string\">\"Users\"</span> pagination<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span> <span class=\"token operator\">&lt;</span>CustomPagination<span class=\"token operator\">/</span><span class=\"token operator\">></span> <span class=\"token punctuation\">}</span>  perPage<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span> <span class=\"token number\">30</span> <span class=\"token punctuation\">}</span><span class=\"token operator\">></span>\n        <span class=\"token operator\">&lt;</span>Datagrid<span class=\"token operator\">></span>\n            <span class=\"token operator\">&lt;</span>TextField source<span class=\"token operator\">=</span><span class=\"token string\">\"originId\"</span> label<span class=\"token operator\">=</span><span class=\"token string\">\"ID\"</span><span class=\"token operator\">/</span><span class=\"token operator\">></span>\n            <span class=\"token operator\">&lt;</span>EmailField source<span class=\"token operator\">=</span><span class=\"token string\">\"email\"</span> label<span class=\"token operator\">=</span><span class=\"token string\">\"Email\"</span> <span class=\"token operator\">/</span><span class=\"token operator\">></span>\n            <span class=\"token operator\">&lt;</span>TextField source<span class=\"token operator\">=</span><span class=\"token string\">\"name\"</span> label<span class=\"token operator\">=</span><span class=\"token string\">\"Name\"</span><span class=\"token operator\">/</span><span class=\"token operator\">></span>\n            <span class=\"token operator\">&lt;</span>TextField source<span class=\"token operator\">=</span><span class=\"token string\">\"phone\"</span> label<span class=\"token operator\">=</span><span class=\"token string\">\"Phone\"</span><span class=\"token operator\">/</span><span class=\"token operator\">></span>\n            <span class=\"token operator\">&lt;</span>DateField source<span class=\"token operator\">=</span><span class=\"token string\">\"createdAt\"</span> label<span class=\"token operator\">=</span><span class=\"token string\">\"Date\"</span><span class=\"token operator\">/</span><span class=\"token operator\">></span>\n            <span class=\"token operator\">&lt;</span>ShowButton <span class=\"token operator\">/</span><span class=\"token operator\">></span>\n            <span class=\"token operator\">&lt;</span>EditButton <span class=\"token operator\">/</span><span class=\"token operator\">></span>\n        <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>Datagrid<span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>List<span class=\"token operator\">></span>\n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token comment\">// admin/src/Component/User/Show.js</span>\n<span class=\"token keyword\">import</span> React <span class=\"token keyword\">from</span> <span class=\"token string\">'react'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> Show<span class=\"token punctuation\">,</span> SimpleShowLayout<span class=\"token punctuation\">,</span> TextField<span class=\"token punctuation\">,</span> DateField<span class=\"token punctuation\">,</span> EmailField<span class=\"token punctuation\">,</span> EditButton <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'react-admin'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">const</span> <span class=\"token function-variable function\">UserShow</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">props</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">(</span>\n    <span class=\"token operator\">&lt;</span>Show <span class=\"token punctuation\">{</span> <span class=\"token operator\">...</span>props <span class=\"token punctuation\">}</span><span class=\"token operator\">></span>\n        <span class=\"token operator\">&lt;</span>SimpleShowLayout<span class=\"token operator\">></span>\n            <span class=\"token operator\">&lt;</span>TextField source<span class=\"token operator\">=</span><span class=\"token string\">\"originId\"</span> label<span class=\"token operator\">=</span><span class=\"token string\">\"ID\"</span><span class=\"token operator\">/</span><span class=\"token operator\">></span>\n            <span class=\"token operator\">&lt;</span>EmailField source<span class=\"token operator\">=</span><span class=\"token string\">\"email\"</span> label<span class=\"token operator\">=</span><span class=\"token string\">\"Email\"</span> <span class=\"token operator\">/</span><span class=\"token operator\">></span>\n            <span class=\"token operator\">&lt;</span>TextField source<span class=\"token operator\">=</span><span class=\"token string\">\"name\"</span> label<span class=\"token operator\">=</span><span class=\"token string\">\"Name\"</span><span class=\"token operator\">/</span><span class=\"token operator\">></span>\n            <span class=\"token operator\">&lt;</span>TextField source<span class=\"token operator\">=</span><span class=\"token string\">\"phone\"</span> label<span class=\"token operator\">=</span><span class=\"token string\">\"Phone\"</span><span class=\"token operator\">/</span><span class=\"token operator\">></span>\n            <span class=\"token operator\">&lt;</span>DateField source<span class=\"token operator\">=</span><span class=\"token string\">\"createdAt\"</span> label<span class=\"token operator\">=</span><span class=\"token string\">\"Date\"</span><span class=\"token operator\">/</span><span class=\"token operator\">></span>\n            <span class=\"token operator\">&lt;</span>EditButton <span class=\"token operator\">/</span><span class=\"token operator\">></span>\n        <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>SimpleShowLayout<span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>Show<span class=\"token operator\">></span>\n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>","nav":{"chapters":[{"title":"The Distribution: Create Powerful APIs with Ease","path":"distribution","items":[{"id":"index","title":"Getting Started with API Platform: Hypermedia and GraphQL API, Admin and Progressive Web App","anchors":[{"id":"installing-the-framework","title":"Installing the Framework","anchors":[{"id":"using-the-official-distribution-recommended","title":"Using the Official Distribution (recommended)"},{"id":"using-symfony-flex-and-composer-advanced-users","title":"Using Symfony Flex and Composer (advanced users)"}]},{"id":"its-ready","title":"It's Ready!"},{"id":"bringing-your-own-model","title":"Bringing your Own Model"},{"id":"validating-data","title":"Validating Data"},{"id":"adding-graphql-support","title":"Adding GraphQL Support"},{"id":"the-admin","title":"The Admin"},{"id":"a-reactredux-progressive-web-app","title":"A React/Redux Progressive Web App"},{"id":"other-features","title":"Other Features"}]},{"id":"testing","title":"Testing and Specifying the API","anchors":[{"id":"running-unit-tests-with-phpunit","title":"Running Unit Tests with PHPUnit"}]},{"id":"debugging","title":"Debugging","anchors":[{"id":"add-a-development-stage-to-the-dockerfile","title":"Add a Development Stage to the Dockerfile"},{"id":"configure-xdebug-with-docker-compose-override","title":"Configure Xdebug with Docker Compose Override"},{"id":"troubleshooting","title":"Troubleshooting"}]}]},{"title":"The API Component","path":"core","items":[{"id":"index","title":"The API Platform Core Library","anchors":[{"id":"features","title":"Features"},{"id":"other-resources","title":"Other resources"}]},{"id":"getting-started","title":"Getting started","anchors":[{"id":"installing-api-platform-core","title":"Installing API Platform Core"},{"id":"before-reading-this-documentation","title":"Before Reading this Documentation"},{"id":"mapping-the-entities","title":"Mapping the Entities"}]},{"id":"design","title":"General Design Considerations"},{"id":"operations","title":"Operations","anchors":[{"id":"enabling-and-disabling-operations","title":"Enabling and Disabling Operations"},{"id":"configuring-operations","title":"Configuring Operations","anchors":[{"id":"prefixing-all-routes-of-all-operations","title":"Prefixing All Routes of All Operations"}]},{"id":"subresources","title":"Subresources","anchors":[{"id":"control-the-path-of-subresources","title":"Control the Path of Subresources"},{"id":"access-control-of-subresources","title":"Access Control of Subresources"},{"id":"control-the-depth-of-subresources","title":"Control the Depth of Subresources"}]},{"id":"creating-custom-operations-and-controllers","title":"Creating Custom Operations and Controllers","anchors":[{"id":"recommended-method","title":"Recommended Method","anchors":[{"id":"serialization-groups","title":"Serialization Groups"},{"id":"entity-retrieval","title":"Entity Retrieval"}]},{"id":"alternative-method","title":"Alternative Method"}]}]},{"id":"graphql","title":"GraphQL Support","anchors":[{"id":"overall-view","title":"Overall View"},{"id":"enabling-graphql","title":"Enabling GraphQL"},{"id":"graphiql","title":"GraphiQL"},{"id":"filters","title":"Filters","anchors":[{"id":"filtering-on-nested-properties","title":"Filtering on Nested Properties"}]},{"id":"security-access_control","title":"Security (access_control)"},{"id":"serialization-groups","title":"Serialization Groups"}]},{"id":"filters","title":"Filters","anchors":[{"id":"doctrine-orm-filters","title":"Doctrine ORM Filters","anchors":[{"id":"basic-knowledge","title":"Basic Knowledge"},{"id":"search-filter","title":"Search Filter"},{"id":"date-filter","title":"Date Filter","anchors":[{"id":"managing-null-values","title":"Managing null Values"}]},{"id":"boolean-filter","title":"Boolean Filter"},{"id":"numeric-filter","title":"Numeric Filter"},{"id":"range-filter","title":"Range Filter"},{"id":"exists-filter","title":"Exists Filter"},{"id":"order-filter-sorting","title":"Order Filter (Sorting)","anchors":[{"id":"comparing-with-null-values","title":"Comparing with Null Values"},{"id":"using-a-custom-order-query-parameter-name","title":"Using a Custom Order Query Parameter Name"}]},{"id":"filtering-on-nested-properties","title":"Filtering on Nested Properties"},{"id":"enabling-a-filter-for-all-properties-of-a-resource","title":"Enabling a Filter for All Properties of a Resource"}]},{"id":"serializer-filters","title":"Serializer Filters","anchors":[{"id":"group-filter","title":"Group Filter"},{"id":"property-filter","title":"Property filter"}]},{"id":"creating-custom-filters","title":"Creating Custom Filters","anchors":[{"id":"creating-custom-doctrine-orm-filters","title":"Creating Custom Doctrine ORM Filters"},{"id":"using-doctrine-filters","title":"Using Doctrine Filters"}]},{"id":"apifilter-annotation","title":"ApiFilter Annotation"}]},{"id":"serialization","title":"The Serialization Process","anchors":[{"id":"overall-process","title":"Overall Process"},{"id":"available-serializers","title":"Available Serializers"},{"id":"the-serialization-context-groups-and-relations","title":"The Serialization Context, Groups and Relations","anchors":[{"id":"configuration","title":"Configuration"}]},{"id":"using-serialization-groups","title":"Using Serialization Groups"},{"id":"using-serialization-groups-per-operation","title":"Using Serialization Groups per Operation","anchors":[{"id":"embedding-relations","title":"Embedding Relations"},{"id":"denormalization","title":"Denormalization"}]},{"id":"changing-the-serialization-context-dynamically","title":"Changing the Serialization Context Dynamically"},{"id":"changing-the-serialization-context-on-a-per-item-basis","title":"Changing the Serialization Context on a Per-item Basis"},{"id":"name-conversion","title":"Name Conversion"},{"id":"decorating-a-serializer-and-adding-extra-data","title":"Decorating a Serializer and Adding Extra Data"},{"id":"entity-identifier-case","title":"Entity Identifier Case"},{"id":"embedding-the-json-ld-context","title":"Embedding the JSON-LD Context"}]},{"id":"validation","title":"Validation","anchors":[{"id":"validating-submitted-data","title":"Validating Submitted Data"},{"id":"using-validation-groups","title":"Using Validation Groups"},{"id":"using-validation-groups-on-operations","title":"Using Validation Groups on Operations"},{"id":"dynamic-validation-groups","title":"Dynamic Validation Groups"},{"id":"error-levels-and-payload-serialization","title":"Error Levels and Payload Serialization"}]},{"id":"security","title":"Security","anchors":[{"id":"configuring-the-access-control-message","title":"Configuring the Access Control Message"}]},{"id":"data-providers","title":"Data Providers","anchors":[{"id":"custom-collection-data-provider","title":"Custom Collection Data Provider"},{"id":"custom-item-data-provider","title":"Custom Item Data Provider"},{"id":"injecting-the-serializer-in-an-itemdataprovider","title":"Injecting the Serializer in an ItemDataProvider"},{"id":"injecting-extensions-pagination-filter-eagerloading-etc","title":"Injecting Extensions (Pagination, Filter, EagerLoading etc.)"}]},{"id":"data-persisters","title":"Data Persisters","anchors":[{"id":"creating-a-custom-data-persister","title":"Creating a Custom Data Persister"}]},{"id":"pagination","title":"Pagination","anchors":[{"id":"disabling-the-pagination","title":"Disabling the Pagination","anchors":[{"id":"globally","title":"Globally"},{"id":"for-a-specific-resource","title":"For a Specific Resource"},{"id":"client-side","title":"Client-side","anchors":[{"id":"globally","title":"Globally"},{"id":"for-a-specific-resource","title":"For a specific resource"}]}]},{"id":"changing-the-number-of-items-per-page","title":"Changing the Number of Items per Page","anchors":[{"id":"globally","title":"Globally"},{"id":"for-a-specific-resource","title":"For a Specific Resource"},{"id":"client-side","title":"Client-side","anchors":[{"id":"globally","title":"Globally"},{"id":"for-a-specific-resource","title":"For a Specific Resource"}]}]},{"id":"changing-maximum-items-per-page","title":"Changing Maximum items per page","anchors":[{"id":"globally","title":"Globally"},{"id":"for-a-specific-resource","title":"For a Specific Resource"},{"id":"for-a-specific-resource-collection-operation","title":"For a Specific Resource Collection Operation"}]},{"id":"partial-pagination","title":"Partial Pagination","anchors":[{"id":"globally","title":"Globally"},{"id":"for-a-specific-resource","title":"For a Specific Resource"},{"id":"client-side","title":"Client-side","anchors":[{"id":"globally","title":"Globally"},{"id":"for-a-specific-resource","title":"For a Specific Resource"}]}]},{"id":"avoiding-double-sql-requests-on-doctrine","title":"Avoiding double SQL requests on Doctrine"},{"id":"custom-controller-action","title":"Custom Controller Action"}]},{"id":"events","title":"The Event System"},{"id":"content-negotiation","title":"Content Negotiation","anchors":[{"id":"enabling-several-formats","title":"Enabling Several Formats"},{"id":"enabling-additional-formats-on-a-specific-resourceoperation","title":"Enabling Additional Formats On a Specific Resource/Operation"},{"id":"registering-a-custom-serializer","title":"Registering a Custom Serializer"},{"id":"writing-a-custom-normalizer","title":"Writing a Custom Normalizer"}]},{"id":"deprecations","title":"Deprecating Resources and Properties (Alternative to Versioning)","anchors":[{"id":"deprecating-resource-classes-operations-and-properties","title":"Deprecating Resource Classes, Operations and Properties"}]},{"id":"performance","title":"Performance","anchors":[{"id":"enabling-the-built-in-http-cache-invalidation-system","title":"Enabling the Built-in HTTP Cache Invalidation System","anchors":[{"id":"extending-cache-tags-for-invalidation","title":"Extending Cache-Tags for invalidation"}]},{"id":"enabling-the-metadata-cache","title":"Enabling the Metadata Cache"},{"id":"using-ppm-php-pm","title":"Using PPM (PHP-PM)"},{"id":"doctrine-queries-and-indexes","title":"Doctrine Queries and Indexes","anchors":[{"id":"search-filter","title":"Search Filter"},{"id":"eager-loading","title":"Eager Loading","anchors":[{"id":"max-joins","title":"Max Joins"},{"id":"force-eager","title":"Force Eager"},{"id":"override-at-resource-and-operation-level","title":"Override at Resource and Operation Level"},{"id":"disable-eager-loading","title":"Disable Eager Loading"}]},{"id":"partial-pagination","title":"Partial Pagination"}]},{"id":"profiling-with-blackfireio","title":"Profiling with Blackfire.io"}]},{"id":"extensions","title":"Extensions","anchors":[{"id":"custom-extension","title":"Custom Extension"},{"id":"example","title":"Example","anchors":[{"id":"blocking-anonymous-users","title":"Blocking Anonymous Users"}]}]},{"id":"swagger","title":"Swagger / Open API Support","anchors":[{"id":"overriding-the-swagger-documentation","title":"Overriding the Swagger Documentation"},{"id":"using-the-swagger-context","title":"Using the Swagger Context"},{"id":"changing-the-name-of-a-definition","title":"Changing the Name of a Definition"},{"id":"changing-operations-in-the-swagger-documentation","title":"Changing Operations in the Swagger Documentation"},{"id":"changing-the-swagger-ui-location","title":"Changing the Swagger UI Location","anchors":[{"id":"disabling-swagger-ui","title":"Disabling Swagger UI"},{"id":"manually-registering-the-swagger-ui-controller","title":"Manually Registering the Swagger UI Controller"}]},{"id":"using-the-swagger-command","title":"Using the Swagger Command"},{"id":"overriding-the-ui-template","title":"Overriding the UI Template"},{"id":"compatibilily-layer-with-amazon-api-gateway","title":"Compatibilily Layer with Amazon API Gateway"}]},{"id":"dto","title":"Handling Data Transfer Objects (DTOs)","anchors":[{"id":"how-to-use-a-dto-for-writing","title":"How to Use a DTO for Writing"},{"id":"how-to-use-a-dto-for-reading","title":"How to Use a DTO for Reading","anchors":[{"id":"adding-this-custom-dto-reading-in-swagger-documentation","title":"Adding this Custom DTO reading in Swagger Documentation.","anchors":[{"id":"use-swagger-decorator","title":"Use Swagger Decorator"},{"id":"use-nelmioapidoc","title":"Use NelmioApiDoc"}]}]}]},{"id":"file-upload","title":"Handling File Upload","anchors":[{"id":"installing-vichuploaderbundle","title":"Installing VichUploaderBundle"},{"id":"configuring-the-entity-receiving-the-uploaded-file","title":"Configuring the Entity Receiving the Uploaded File"},{"id":"handling-file-upload","title":"Handling File Upload"},{"id":"making-a-request-to-the-media_objects-endpoint","title":"Making a Request to the /media_objects Endpoint"},{"id":"linking-a-mediaobject-resource-to-another-resource","title":"Linking a MediaObject Resource to Another Resource"}]},{"id":"default-order","title":"Overriding Default Order"},{"id":"errors","title":"Errors Handling","anchors":[{"id":"converting-php-exceptions-to-http-errors","title":"Converting PHP Exceptions to HTTP Errors"}]},{"id":"external-vocabularies","title":"Using External Vocabularies"},{"id":"operation-path-naming","title":"Operation Path Naming","anchors":[{"id":"configuration","title":"Configuration"},{"id":"create-a-custom-operation-path-resolver","title":"Create a Custom Operation Path Resolver","anchors":[{"id":"defining-the-operation-path-resolver","title":"Defining the Operation Path Resolver"},{"id":"registering-the-service","title":"Registering the Service"},{"id":"configure-it","title":"Configure It"}]}]},{"id":"extending-jsonld-context","title":"Extending JSON-LD context"},{"id":"form-data","title":"Accept application/x-www-form-urlencoded Form Data","anchors":[{"id":"create-your-deserializelistener-decorator","title":"Create your DeserializeListener Decorator"},{"id":"creating-the-service-definition","title":"Creating the Service Definition"}]},{"id":"identifiers","title":"Identifiers","anchors":[{"id":"custom-identifier-normalizer","title":"Custom identifier normalizer"},{"id":"supported-identifiers","title":"Supported identifiers"}]},{"id":"jwt","title":"JWT Authentication","anchors":[{"id":"installing-lexikjwtauthenticationbundle","title":"Installing LexikJWTAuthenticationBundle"},{"id":"documenting-the-authentication-mechanism-with-swaggeropen-api","title":"Documenting the Authentication Mechanism with Swagger/Open API","anchors":[{"id":"configuring-api-platform","title":"Configuring API Platform"},{"id":"adding-a-new-api-key","title":"Adding a New API Key"}]},{"id":"testing-with-behat","title":"Testing with Behat"}]},{"id":"angularjs-integration","title":"AngularJS Integration","anchors":[{"id":"restangular","title":"Restangular"},{"id":"ng-admin","title":"ng-admin"}]},{"id":"fosuser-bundle","title":"FOSUserBundle Integration","anchors":[{"id":"installing-the-bundle","title":"Installing the Bundle"},{"id":"enabling-the-bridge","title":"Enabling the Bridge"},{"id":"creating-a-user-entity-with-serialization-groups","title":"Creating a User Entity with Serialization Groups"}]},{"id":"nelmio-api-doc","title":"NelmioApiDocBundle Integration"},{"id":"configuration","title":"Configuration"}]},{"title":"The Schema Generator Component","path":"schema-generator","items":[{"id":"index","title":"The schema generator","anchors":[{"id":"what-is-schemaorg","title":"What is Schema.org?"},{"id":"why-use-schemaorg-data-to-generate-a-php-model","title":"Why use Schema.org data to generate a PHP model?","anchors":[{"id":"dont-reinvent-the-wheel","title":"Don't Reinvent The Wheel"},{"id":"improve-seo-and-user-experience","title":"Improve SEO and user experience"},{"id":"be-ready-for-the-future","title":"Be ready for the future"}]},{"id":"documentation","title":"Documentation"}]},{"id":"getting-started","title":"Getting Started","anchors":[{"id":"installation","title":"Installation"},{"id":"model-scaffolding","title":"Model Scaffolding","anchors":[{"id":"going-further","title":"Going Further"}]},{"id":"cardinality-extraction","title":"Cardinality Extraction"}]},{"id":"configuration","title":"Configuration","anchors":[{"id":"customizing-php-namespaces","title":"Customizing PHP Namespaces"},{"id":"forcing-a-field-range","title":"Forcing a Field Range"},{"id":"forcing-a-field-cardinality","title":"Forcing a Field Cardinality"},{"id":"forcing-a-relation-table-name","title":"Forcing a Relation Table Name"},{"id":"forcing-or-disabling-a-class-parent","title":"Forcing (or Disabling) a Class Parent"},{"id":"forcing-a-class-to-be-abstract","title":"Forcing a Class to be Abstract"},{"id":"forcing-a-nullable-property","title":"Forcing a Nullable Property"},{"id":"forcing-a-unique-property","title":"Forcing a Unique Property"},{"id":"making-a-property-read-only","title":"Making a Property Read Only"},{"id":"making-a-property-write-only","title":"Making a Property Write Only"},{"id":"forcing-a-property-to-be-in-a-serialization-group","title":"Forcing a Property to be in a Serialization Group"},{"id":"forcing-an-embeddable-class-to-be-embedded","title":"Forcing an Embeddable Class to be Embedded"},{"id":"author-phpdoc","title":"Author PHPDoc"},{"id":"disabling-generators-and-creating-custom-ones","title":"Disabling Generators and Creating Custom Ones"},{"id":"skipping-accessor-method-generation","title":"Skipping Accessor Method Generation"},{"id":"disabling-the-id-generator","title":"Disabling the id Generator"},{"id":"generating-uuids","title":"Generating UUIDs"},{"id":"user-submitted-uuids","title":"User submitted UUIDs"},{"id":"generating-custom-ids","title":"Generating Custom IDs"},{"id":"disabling-usage-of-doctrine-collection","title":"Disabling Usage of Doctrine Collection"},{"id":"changing-the-field-visibility","title":"Changing the Field Visibility"},{"id":"generating-asserttype-annotations","title":"Generating @Assert\\Type Annotations"},{"id":"forcing-doctrine-inheritance-mapping-annotation","title":"Forcing Doctrine Inheritance Mapping Annotation"},{"id":"interfaces-and-doctrine-resolve-target-entity-listener","title":"Interfaces and Doctrine Resolve Target Entity Listener"},{"id":"custom-schemas","title":"Custom Schemas"},{"id":"checking-goodrelation-compatibility","title":"Checking GoodRelation Compatibility"},{"id":"php-file-header","title":"PHP File Header"},{"id":"full-configuration-reference","title":"Full Configuration Reference"}]}]},{"title":"The Admin Component","path":"admin","items":[{"id":"index","title":"The API Platform Admin","anchors":[{"id":"features","title":"Features"}]},{"id":"getting-started","title":"Getting Started","anchors":[{"id":"installation","title":"Installation"},{"id":"creating-the-admin","title":"Creating the Admin"},{"id":"customizing-the-admin","title":"Customizing the Admin","anchors":[{"id":"using-custom-components","title":"Using Custom Components"},{"id":"managing-files-and-images","title":"Managing Files and Images"},{"id":"using-a-custom-validation-function-or-inject-custom-props","title":"Using a Custom Validation Function or Inject Custom Props"},{"id":"using-the-hydra-data-provider-directly-with-react-admin","title":"Using the Hydra Data Provider Directly with react-admin"}]}]},{"id":"authentication-support","title":"Authentication Support"},{"id":"handling-relations-to-collections","title":"Handling Relations to Collections","anchors":[{"id":"customizing-a-property","title":"Customizing a Property"},{"id":"customizing-an-icon","title":"Customizing an Icon"},{"id":"using-an-autocomplete-input-for-relations","title":"Using an Autocomplete Input for Relations"}]}]},{"title":"The Client Generator Component","path":"client-generator","items":[{"id":"index","title":"The API Platform Client Generator","anchors":[{"id":"features","title":"Features"}]},{"id":"react","title":"React Generator","anchors":[{"id":"install","title":"Install"},{"id":"generating-a-progressive-web-app","title":"Generating a Progressive Web App"},{"id":"screenshots","title":"Screenshots"}]},{"id":"react-native","title":"React Native generator","anchors":[{"id":"install","title":"Install"},{"id":"generating-a-native-app","title":"Generating a Native App"},{"id":"screenshots-in-ios-simulator","title":"Screenshots in iOS Simulator"}]},{"id":"vuejs","title":"Vue.js Generator"},{"id":"troubleshooting","title":"Troubleshooting"}]},{"title":"Deployment","path":"deployment","items":[{"id":"index","title":"Deploying API Platform Applications"},{"id":"kubernetes","title":"Deploying to a Kubernetes Cluster","anchors":[{"id":"preparing-your-cluster-and-your-local-machine","title":"Preparing Your Cluster and Your Local Machine"},{"id":"creating-and-publishing-the-docker-images","title":"Creating and Publishing the Docker Images"},{"id":"deploying","title":"Deploying"},{"id":"initializing-the-database","title":"Initializing the Database"},{"id":"tiller-rbac-issue","title":"Tiller RBAC Issue"}]},{"id":"heroku","title":"Deploying an API Platform App on Heroku"},{"id":"traefik","title":"Implement Traefik Into API Platform Dockerized","anchors":[{"id":"basic-implementation","title":"Basic Implementation"},{"id":"known-issues","title":"Known Issues"}]}]},{"title":"Extra","path":"extra","items":[{"id":"releases","title":"The Release Process"},{"id":"philosophy","title":"API Platform's Philosophy"},{"id":"troubleshooting","title":"Troubleshooting","anchors":[{"id":"using-docker","title":"Using Docker","anchors":[{"id":"with-docker-toolbox-on-windows","title":"With Docker Toolbox on Windows"},{"id":"error-starting-userland-proxy","title":"Error starting userland proxy"}]},{"id":"using-api-platform-and-jms-serializer-in-the-same-project","title":"Using API Platform and JMS Serializer in the same project"},{"id":"upstream-sent-too-big-header-while-reading-response-header-from-upstream-502-error","title":"\"upstream sent too big header while reading response header from upstream\" 502 Error"}]},{"id":"contribution-guides","title":"Contribution guides"},{"id":"conduct","title":"Contributor Code of Conduct","anchors":[{"id":"our-pledge","title":"Our Pledge"},{"id":"our-standards","title":"Our Standards"},{"id":"our-responsibilities","title":"Our Responsibilities"},{"id":"scope","title":"Scope"},{"id":"enforcement","title":"Enforcement"},{"id":"attribution","title":"Attribution"}]}]}]},"next":{"slug":"/docs/v2.3/admin/authentication-support/","title":"Authentication Support"},"prefixedVersion":"v2.3","previous":{"slug":"/docs/v2.3/admin/","title":"The API Platform Admin"},"title":"Getting Started","urlEditDocumentation":"https://github.com/api-platform/docs/edit/2.3/admin/getting-started.md","version":"v2.3/"}}}