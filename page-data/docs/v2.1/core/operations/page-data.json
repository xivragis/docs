{"componentChunkName":"component---src-templates-doc-js","path":"/docs/v2.1/core/operations/","result":{"pageContext":{"html":"<h1 id=\"operations\" style=\"position:relative;\"><a href=\"#operations\" aria-label=\"operations permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Operations</h1>\n<p>API Platform Core relies on the concept of operations. Operations can be applied to a resource exposed by the API. From\nan implementation point of view, an operation is a link between a resource, a route and its related controller.</p>\n<p>API Platform automatically registers typical <a href=\"https://en.wikipedia.org/wiki/Create,_read,_update_and_delete\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">CRUD</a> operations\nand describes them in the exposed documentation (Hydra and Swagger). It also creates and registers routes corresponding\nto these operations in the Symfony routing system (if it is available).</p>\n<p>The behavior of built-in operations is briefly presented in the <a href=\"/docs/v2.1/core/getting-started/#mapping-the-entities\">Getting started</a>\nguide.</p>\n<p>The list of enabled operations can be configured on a per resource basis. Creating custom operations on specific routes\nis also possible.</p>\n<p>There are two types of operations: collection operations and item operations.</p>\n<p>Collection operations act on a collection of resources. By default two routes are implemented: <code class=\"language-text\">POST</code> and <code class=\"language-text\">GET</code>. Item\noperations act on an individual resource. 3 default routes are defined <code class=\"language-text\">GET</code>, <code class=\"language-text\">PUT</code> and <code class=\"language-text\">DELETE</code>.</p>\n<p>When the <code class=\"language-text\">ApiPlatform\\Core\\Annotation\\ApiResource</code> annotation is applied to an entity class, the following built-in CRUD\noperations are automatically enabled:</p>\n<p><em>Collection operations</em></p>\n<table>\n<thead>\n<tr>\n<th>Method</th>\n<th>Mandatory</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code class=\"language-text\">GET</code></td>\n<td>yes</td>\n<td>Retrieve the (paginated) list of elements</td>\n</tr>\n<tr>\n<td><code class=\"language-text\">POST</code></td>\n<td>no</td>\n<td>Create a new element</td>\n</tr>\n</tbody>\n</table>\n<p><em>Item operations</em></p>\n<table>\n<thead>\n<tr>\n<th>Method</th>\n<th>Mandatory</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code class=\"language-text\">GET</code></td>\n<td>yes</td>\n<td>Retrieve element</td>\n</tr>\n<tr>\n<td><code class=\"language-text\">PUT</code></td>\n<td>no</td>\n<td>Update an element</td>\n</tr>\n<tr>\n<td><code class=\"language-text\">DELETE</code></td>\n<td>no</td>\n<td>Delete an element</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"enabling-and-disabling-operations\" style=\"position:relative;\"><a href=\"#enabling-and-disabling-operations\" aria-label=\"enabling and disabling operations permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Enabling and Disabling Operations</h2>\n<p>If no operation is specified, all default CRUD operations are automatically registered. It is also possible - and recommended\nfor large projects - to define operations explicitly.</p>\n<p>Keep in mind that <code class=\"language-text\">collectionOperations</code> and <code class=\"language-text\">itemOperations</code> behave independently. For instance, if you don't explicitly\nconfigure operations for <code class=\"language-text\">collectionOperations</code>, <code class=\"language-text\">GET</code> and <code class=\"language-text\">POST</code> operations will be automatically registered, even if you\nexplicitly configure <code class=\"language-text\">itemOperations</code>. The reverse is also true.</p>\n<p>Operations can be configured using annotations, XML or YAML. In the following examples, we enable only the built-in operation\nfor the <code class=\"language-text\">GET</code> method for both <code class=\"language-text\">collectionOperations</code> and <code class=\"language-text\">itemOperations</code> to create a readonly endpoint.</p>\n<p><code class=\"language-text\">itemOperations</code> and <code class=\"language-text\">collectionOperations</code> are arrays containing a list of operation. Each operation is defined by a key\ncorresponding to the name of the operation that can be anything you want and an array of properties as value. If an\nempty list of operations is provided, all operations are disabled.</p>\n<div class=\"gatsby-highlight\" data-language=\"php\"><pre class=\"language-php\"><code class=\"language-php\"><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span>\n<span class=\"token comment\">// src/AppBundle/Entity/Book.php</span>\n\n<span class=\"token keyword\">use</span> <span class=\"token package\">ApiPlatform<span class=\"token punctuation\">\\</span>Core<span class=\"token punctuation\">\\</span>Annotation<span class=\"token punctuation\">\\</span>ApiResource</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">/**\n * @ApiResource(\n *     collectionOperations={\"get\"={\"method\"=\"GET\"}},\n *     itemOperations={\"get\"={\"method\"=\"GET\"}}\n *     )\n */</span>\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">Book</span>\n<span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// ...</span>\n<span class=\"token punctuation\">}</span></span></code></pre></div>\n<p>Alternatively, you can use the YAML configuration format:</p>\n<div class=\"gatsby-highlight\" data-language=\"yaml\"><pre class=\"language-yaml\"><code class=\"language-yaml\"><span class=\"token comment\"># src/AppBundle/Resources/config/api_resources/resources.yml</span>\n<span class=\"token key atrule\">AppBundle\\Entity\\Book</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">collectionOperations</span><span class=\"token punctuation\">:</span>\n        <span class=\"token key atrule\">get</span><span class=\"token punctuation\">:</span>\n            <span class=\"token key atrule\">method</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'GET'</span> <span class=\"token comment\"># nothing more to add if we want to keep the default controller</span>\n    <span class=\"token key atrule\">itemOperations</span><span class=\"token punctuation\">:</span>\n        <span class=\"token key atrule\">get</span><span class=\"token punctuation\">:</span>\n            <span class=\"token key atrule\">method</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'GET'</span></code></pre></div>\n<p>Or the XML configuration format:</p>\n<div class=\"gatsby-highlight\" data-language=\"xml\"><pre class=\"language-xml\"><code class=\"language-xml\"><span class=\"token comment\">&lt;!-- src/AppBundle/Resources/config/api_resources/resources.xml --></span>\n<span class=\"token prolog\">&lt;?xml version=\"1.0\" encoding=\"UTF-8\" ?></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>resources</span> <span class=\"token attr-name\">xmlns</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>https://api-platform.com/schema/metadata<span class=\"token punctuation\">\"</span></span>\n           <span class=\"token attr-name\"><span class=\"token namespace\">xmlns:</span>xsi</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>http://www.w3.org/2001/XMLSchema-instance<span class=\"token punctuation\">\"</span></span>\n           <span class=\"token attr-name\"><span class=\"token namespace\">xsi:</span>schemaLocation</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>https://api-platform.com/schema/metadata\n           https://api-platform.com/schema/metadata/metadata-2.0.xsd<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>resource</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>AppBundle\\Entity\\Book<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>itemOperations</span><span class=\"token punctuation\">></span></span>\n            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>itemOperation</span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>get<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n                <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>attribute</span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>method<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>GET<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>attribute</span><span class=\"token punctuation\">></span></span>\n            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>itemOperation</span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>itemOperations</span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>collectionOperations</span><span class=\"token punctuation\">></span></span>\n            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>collectionOperation</span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>get<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n                <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>attribute</span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>method<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>GET<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>attribute</span><span class=\"token punctuation\">></span></span>\n            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>collectionOperation</span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>collectionOperations</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>resource</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>resources</span><span class=\"token punctuation\">></span></span></code></pre></div>\n<p>API Platform Core is smart enough to automatically register the applicable Symfony route referencing a built-in CRUD action\njust by specifying the enabled HTTP method.</p>\n<h2 id=\"configuring-operations\" style=\"position:relative;\"><a href=\"#configuring-operations\" aria-label=\"configuring operations permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Configuring Operations</h2>\n<p>The URL, the HTTP method and the Hydra context passed to documentation generators of operations is easy to configure.</p>\n<p>In the next example, both <code class=\"language-text\">GET</code> and <code class=\"language-text\">PUT</code> operations are registered with custom URLs. Those will override the default generated\nURLs. In addition to that, we replace the Hydra context for the <code class=\"language-text\">PUT</code> operation, and require the <code class=\"language-text\">id</code> parameter to be an integer.</p>\n<div class=\"gatsby-highlight\" data-language=\"php\"><pre class=\"language-php\"><code class=\"language-php\"><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span>\n<span class=\"token comment\">// src/AppBundle/Entity/Book.php</span>\n\n<span class=\"token keyword\">use</span> <span class=\"token package\">ApiPlatform<span class=\"token punctuation\">\\</span>Core<span class=\"token punctuation\">\\</span>Annotation<span class=\"token punctuation\">\\</span>ApiResource</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">/**\n * @ApiResource(itemOperations={\n *     \"get\"={\"method\"=\"GET\", \"path\"=\"/grimoire/{id}\", \"requirements\"={\"id\"=\"\\d+\"}},\n *     \"put\"={\"method\"=\"PUT\", \"path\"=\"/grimoire/{id}/update\", \"hydra_context\"={\"foo\"=\"bar\"}},\n * })\n */</span>\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">Book</span>\n<span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">//...</span>\n<span class=\"token punctuation\">}</span></span></code></pre></div>\n<p>Or in YAML:</p>\n<div class=\"gatsby-highlight\" data-language=\"yaml\"><pre class=\"language-yaml\"><code class=\"language-yaml\"><span class=\"token comment\"># src/AppBundle/Resources/config/api_resources/resources.yml</span>\n<span class=\"token key atrule\">AppBundle\\Entity\\Book</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">itemOperations</span><span class=\"token punctuation\">:</span>\n        <span class=\"token key atrule\">get</span><span class=\"token punctuation\">:</span>\n            <span class=\"token key atrule\">method</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'GET'</span>\n            <span class=\"token key atrule\">path</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'/grimoire/{id}'</span>\n            <span class=\"token key atrule\">requirements</span><span class=\"token punctuation\">:</span>\n                <span class=\"token key atrule\">id</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'\\d+'</span>\n        <span class=\"token key atrule\">put</span><span class=\"token punctuation\">:</span>\n            <span class=\"token key atrule\">method</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'PUT'</span>\n            <span class=\"token key atrule\">path</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'/grimoire/{id}/update'</span>\n            <span class=\"token key atrule\">hydra_context</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span> <span class=\"token key atrule\">foo</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'bar'</span> <span class=\"token punctuation\">}</span>\n            <span class=\"token key atrule\">requirements</span><span class=\"token punctuation\">:</span>\n                <span class=\"token key atrule\">id</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'\\d+'</span></code></pre></div>\n<p>Or in XML:</p>\n<div class=\"gatsby-highlight\" data-language=\"xml\"><pre class=\"language-xml\"><code class=\"language-xml\"><span class=\"token comment\">&lt;!-- src/AppBundle/Resources/config/api_resources/resources.xml --></span>\n<span class=\"token prolog\">&lt;?xml version=\"1.0\" encoding=\"UTF-8\" ?></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>resources</span> <span class=\"token attr-name\">xmlns</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>https://api-platform.com/schema/metadata<span class=\"token punctuation\">\"</span></span>\n           <span class=\"token attr-name\"><span class=\"token namespace\">xmlns:</span>xsi</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>http://www.w3.org/2001/XMLSchema-instance<span class=\"token punctuation\">\"</span></span>\n           <span class=\"token attr-name\"><span class=\"token namespace\">xsi:</span>schemaLocation</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>https://api-platform.com/schema/metadata\n           https://api-platform.com/schema/metadata/metadata-2.0.xsd<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>resource</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>AppBundle\\Entity\\Book<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>itemOperations</span><span class=\"token punctuation\">></span></span>\n            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>itemOperation</span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>get<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n                <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>attribute</span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>method<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>GET<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>attribute</span><span class=\"token punctuation\">></span></span>\n                <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>attribute</span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>path<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>/grimoire/{id}<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>attribute</span><span class=\"token punctuation\">></span></span>\n                <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>attribute</span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>requirements<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n                    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>attribute</span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>id<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\\d+<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>attribute</span><span class=\"token punctuation\">></span></span>\n                <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>attribute</span><span class=\"token punctuation\">></span></span>\n            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>itemOperation</span><span class=\"token punctuation\">></span></span>\n            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>itemOperation</span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>put<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n                <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>attribute</span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>method<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>PUT<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>attribute</span><span class=\"token punctuation\">></span></span>\n                <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>attribute</span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>path<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>/grimoire/{id}/update<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>attribute</span><span class=\"token punctuation\">></span></span>\n                <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>attribute</span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>hydra_context<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n                    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>attribute</span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>foo<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>bar<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>attribute</span><span class=\"token punctuation\">></span></span>\n                <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>attribute</span><span class=\"token punctuation\">></span></span>\n                <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>attribute</span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>requirements<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n                    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>attribute</span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>id<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\\d+<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>attribute</span><span class=\"token punctuation\">></span></span>\n                <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>attribute</span><span class=\"token punctuation\">></span></span>\n            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>itemOperation</span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>itemOperations</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>resource</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>resources</span><span class=\"token punctuation\">></span></span></code></pre></div>\n<h2 id=\"subresources\" style=\"position:relative;\"><a href=\"#subresources\" aria-label=\"subresources permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Subresources</h2>\n<p>Since ApiPlatform 2.1, you can declare subresources. A subresource is a collection or an item that belongs to another resource. The starting point of a subresource must be a relation on an existing resource.</p>\n<p>For example, let's create two entities (Question, Answer) and set up a subresource so that <code class=\"language-text\">/question/42/answer</code> gives us the answer to the question 42:</p>\n<div class=\"gatsby-highlight\" data-language=\"php\"><pre class=\"language-php\"><code class=\"language-php\"><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span>\n<span class=\"token comment\">// src/AppBundle/Entity/Answer.php</span>\n\n<span class=\"token keyword\">use</span> <span class=\"token package\">ApiPlatform<span class=\"token punctuation\">\\</span>Core<span class=\"token punctuation\">\\</span>Annotation<span class=\"token punctuation\">\\</span>ApiResource</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">use</span> <span class=\"token package\">Doctrine<span class=\"token punctuation\">\\</span>ORM<span class=\"token punctuation\">\\</span>Mapping</span> <span class=\"token keyword\">as</span> <span class=\"token constant\">ORM</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">/**\n * @ORM\\Entity\n * @ApiResource\n */</span>\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">Answer</span>\n<span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">/**\n     * @ORM\\Column(type=\"integer\")\n     * @ORM\\Id\n     * @ORM\\GeneratedValue(strategy=\"AUTO\")\n     */</span>\n    <span class=\"token keyword\">private</span> <span class=\"token variable\">$id</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">/**\n     * @ORM\\Column\n     */</span>\n    <span class=\"token keyword\">public</span> <span class=\"token variable\">$content</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">/**\n     * @ORM\\OneToOne(targetEntity=\"Question\", mappedBy=\"answer\")\n     */</span>\n    <span class=\"token keyword\">public</span> <span class=\"token variable\">$question</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">function</span> <span class=\"token function\">getId</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">return</span> <span class=\"token variable\">$this</span><span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token property\">id</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></span></code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"php\"><pre class=\"language-php\"><code class=\"language-php\"><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span>\n<span class=\"token comment\">// src/AppBundle/Entity/Question.php</span>\n\n<span class=\"token keyword\">use</span> <span class=\"token package\">ApiPlatform<span class=\"token punctuation\">\\</span>Core<span class=\"token punctuation\">\\</span>Annotation<span class=\"token punctuation\">\\</span>ApiProperty</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">use</span> <span class=\"token package\">ApiPlatform<span class=\"token punctuation\">\\</span>Core<span class=\"token punctuation\">\\</span>Annotation<span class=\"token punctuation\">\\</span>ApiResource</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">use</span> <span class=\"token package\">ApiPlatform<span class=\"token punctuation\">\\</span>Core<span class=\"token punctuation\">\\</span>Annotation<span class=\"token punctuation\">\\</span>ApiSubresource</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">use</span> <span class=\"token package\">Doctrine<span class=\"token punctuation\">\\</span>ORM<span class=\"token punctuation\">\\</span>Mapping</span> <span class=\"token keyword\">as</span> <span class=\"token constant\">ORM</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">/**\n * @ORM\\Entity\n * @ApiResource\n */</span>\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">Question</span>\n<span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">/**\n     * @ORM\\Column(type=\"integer\")\n     * @ORM\\Id\n     * @ORM\\GeneratedValue(strategy=\"AUTO\")\n     */</span>\n    <span class=\"token keyword\">private</span> <span class=\"token variable\">$id</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">/**\n     * @ORM\\Column\n     */</span>\n    <span class=\"token keyword\">public</span> <span class=\"token variable\">$content</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">/**\n     * @ORM\\OneToOne(targetEntity=\"Answer\", inversedBy=\"question\")\n     * @ORM\\JoinColumn(referencedColumnName=\"id\", unique=true)\n     * @ApiSubresource\n     */</span>\n    <span class=\"token keyword\">public</span> <span class=\"token variable\">$answer</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">function</span> <span class=\"token function\">getId</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">return</span> <span class=\"token variable\">$this</span><span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token property\">id</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></span></code></pre></div>\n<p>Alternatively, you can use the YAML configuration format:</p>\n<div class=\"gatsby-highlight\" data-language=\"yaml\"><pre class=\"language-yaml\"><code class=\"language-yaml\"><span class=\"token key atrule\">AppBundle\\Entity\\Answer</span><span class=\"token punctuation\">:</span> <span class=\"token null important\">~</span>\n<span class=\"token key atrule\">AppBundle\\Entity\\Question</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">properties</span><span class=\"token punctuation\">:</span>\n        <span class=\"token key atrule\">answer</span><span class=\"token punctuation\">:</span>\n            <span class=\"token key atrule\">subresource</span><span class=\"token punctuation\">:</span>\n                <span class=\"token key atrule\">resourceClass</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'AppBundle\\Entity\\Answer'</span>\n                <span class=\"token key atrule\">collection</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">false</span></code></pre></div>\n<p>Note that all we had to do is to set up <code class=\"language-text\">@ApiSubresource</code> on the <code class=\"language-text\">Question::answer</code> relation. Because the <code class=\"language-text\">answer</code> is a to-one relation, we know that this subresource is an item. Therefore the response will look like this:</p>\n<div class=\"gatsby-highlight\" data-language=\"json\"><pre class=\"language-json\"><code class=\"language-json\"><span class=\"token punctuation\">{</span>\n  <span class=\"token property\">\"@context\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"/contexts/Answer\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"@id\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"/answers/42\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"@type\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"Answer\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"id\"</span><span class=\"token operator\">:</span> <span class=\"token number\">42</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"content\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"Life, the Universe, and Everything\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"question\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"/questions/42\"</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>If you put the subresource on a relation that is to-many, you will retrieve a collection.</p>\n<p>Last but not least, Subresources can be nested, such that <code class=\"language-text\">/questions/42/answer/comments</code> will get the collection of comments for the answer to question 42.</p>\n<p>You may want custom groups on subresources. Because a subresource is nothing more than a collection operation, you can set <code class=\"language-text\">normalization_context</code> or <code class=\"language-text\">denormalization_context</code> on that operation. To do so, you need to override <code class=\"language-text\">collectionOperations</code>. Based on the above operation, because we retrieve an answer, we need to alter it's configuration:</p>\n<div class=\"gatsby-highlight\" data-language=\"php\"><pre class=\"language-php\"><code class=\"language-php\"><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span>\n<span class=\"token comment\">// src/AppBundle/Entity/Answer.php</span>\n\n<span class=\"token keyword\">use</span> <span class=\"token package\">ApiPlatform<span class=\"token punctuation\">\\</span>Core<span class=\"token punctuation\">\\</span>Annotation<span class=\"token punctuation\">\\</span>ApiResource</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">/**\n * @ApiResource(collectionOperations={\"api_questions_answer_get_subresource\"={\"method\"=\"GET\", \"normalization_context\"={\"groups\"={\"foobar\"}}}})\n */</span>\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">Answer</span>\n<span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// ...</span>\n<span class=\"token punctuation\">}</span></span></code></pre></div>\n<p>Or using YAML:</p>\n<div class=\"gatsby-highlight\" data-language=\"yaml\"><pre class=\"language-yaml\"><code class=\"language-yaml\"><span class=\"token comment\"># src/AppBundle/Resources/config/api_resources/resources.yml</span>\n<span class=\"token key atrule\">AppBundle\\Entity\\Answer</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">collectionOperations</span><span class=\"token punctuation\">:</span>\n        <span class=\"token key atrule\">api_questions_answer_get_subresource</span><span class=\"token punctuation\">:</span>\n            <span class=\"token key atrule\">method</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'GET'</span> <span class=\"token comment\"># nothing more to add if we want to keep the default controller</span>\n            <span class=\"token key atrule\">normalization_context</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span><span class=\"token key atrule\">'groups'</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'foobar'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">}</span></code></pre></div>\n<p>Or in XML:</p>\n<div class=\"gatsby-highlight\" data-language=\"xml\"><pre class=\"language-xml\"><code class=\"language-xml\"><span class=\"token comment\">&lt;!-- src/AppBundle/Resources/config/api_resources/resources.xml --></span>\n<span class=\"token prolog\">&lt;?xml version=\"1.0\" encoding=\"UTF-8\" ?></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>resources</span> <span class=\"token attr-name\">xmlns</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>https://api-platform.com/schema/metadata<span class=\"token punctuation\">\"</span></span>\n           <span class=\"token attr-name\"><span class=\"token namespace\">xmlns:</span>xsi</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>http://www.w3.org/2001/XMLSchema-instance<span class=\"token punctuation\">\"</span></span>\n           <span class=\"token attr-name\"><span class=\"token namespace\">xsi:</span>schemaLocation</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>https://api-platform.com/schema/metadata\n           https://api-platform.com/schema/metadata/metadata-2.0.xsd<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>resource</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>AppBundle\\Entity\\Answer<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>collectionOperations</span><span class=\"token punctuation\">></span></span>\n            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>collectionOperation</span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>api_questions_answer_get_subresource<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n                <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>attribute</span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>method<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>GET<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>attribute</span><span class=\"token punctuation\">></span></span>\n                <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>attribute</span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>normalization_context<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n                  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>attribute</span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>groups<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n                    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>group</span><span class=\"token punctuation\">></span></span>foobar<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>group</span><span class=\"token punctuation\">></span></span>\n                  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>attribute</span><span class=\"token punctuation\">></span></span>\n                <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>attribute</span><span class=\"token punctuation\">></span></span>\n            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>collectionOperation</span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>collectionOperations</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>resource</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>resources</span><span class=\"token punctuation\">></span></span></code></pre></div>\n<p>Note that the operation name, here <code class=\"language-text\">api_questions_answer_get_subresource</code>, is the important keyword.\nIt'll be automatically set to <code class=\"language-text\">$resources_$subresource(s)_get_subresource</code>. To find the correct operation name you\nmay use <code class=\"language-text\">bin/console debug:router</code>.</p>\n<h3 id=\"control-the-path-of-subresources\" style=\"position:relative;\"><a href=\"#control-the-path-of-subresources\" aria-label=\"control the path of subresources permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Control the Path of Subresources</h3>\n<p>You can control the path of subresources with the <code class=\"language-text\">path</code> option of the <code class=\"language-text\">subresourceOperations</code> parameter:</p>\n<div class=\"gatsby-highlight\" data-language=\"php\"><pre class=\"language-php\"><code class=\"language-php\"><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span>\n<span class=\"token comment\">// src/AppBundle/Entity/Question.php</span>\n\n<span class=\"token comment\">/**\n * @ORM\\Entity()\n * @ApiResource(\n *      subresourceOperations={\n *          \"answer_get_subresource\"= {\n *              \"method\"=\"GET\",\n *              \"path\"=\"/questions/{id}/all-answers\",\n *          },\n *      },\n * )\n */</span>\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">Question</span>\n<span class=\"token punctuation\">{</span>\n<span class=\"token punctuation\">}</span></span></code></pre></div>\n<h3 id=\"control-the-depth-of-subresources\" style=\"position:relative;\"><a href=\"#control-the-depth-of-subresources\" aria-label=\"control the depth of subresources permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Control the Depth of Subresources</h3>\n<p>You can control depth of subresources with the parameter <code class=\"language-text\">maxDepth</code>. For example, if <code class=\"language-text\">Answer</code> entity also have subresource such as <code class=\"language-text\">comments</code>and you don't want the route <code class=\"language-text\">api/questions/{id}/answers/{id}/comments</code> to be generated. You can do this by adding the parameter maxDepth in ApiSubresource annotation or yml/xml file configuration.</p>\n<div class=\"gatsby-highlight\" data-language=\"php\"><pre class=\"language-php\"><code class=\"language-php\"><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span>\n<span class=\"token comment\">// src/AppBundle/Entity/Question.php</span>\n\n<span class=\"token keyword\">use</span> <span class=\"token package\">ApiPlatform<span class=\"token punctuation\">\\</span>Core<span class=\"token punctuation\">\\</span>Annotation<span class=\"token punctuation\">\\</span>ApiProperty</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">use</span> <span class=\"token package\">ApiPlatform<span class=\"token punctuation\">\\</span>Core<span class=\"token punctuation\">\\</span>Annotation<span class=\"token punctuation\">\\</span>ApiResource</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">use</span> <span class=\"token package\">ApiPlatform<span class=\"token punctuation\">\\</span>Core<span class=\"token punctuation\">\\</span>Annotation<span class=\"token punctuation\">\\</span>ApiSubresource</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">use</span> <span class=\"token package\">Doctrine<span class=\"token punctuation\">\\</span>ORM<span class=\"token punctuation\">\\</span>Mapping</span> <span class=\"token keyword\">as</span> <span class=\"token constant\">ORM</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">/**\n * @ORM\\Entity\n * @ApiResource\n */</span>\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">Question</span>\n<span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">/**\n     * @ORM\\Column(type=\"integer\")\n     * @ORM\\Id\n     * @ORM\\GeneratedValue(strategy=\"AUTO\")\n     */</span>\n    <span class=\"token keyword\">private</span> <span class=\"token variable\">$id</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">/**\n     * @ORM\\Column\n     */</span>\n    <span class=\"token keyword\">public</span> <span class=\"token variable\">$content</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">/**\n     * @ORM\\OneToOne(targetEntity=\"Answer\", inversedBy=\"question\")\n     * @ORM\\JoinColumn(referencedColumnName=\"id\", unique=true)\n     * @ApiSubresource(maxDepth=1)\n     */</span>\n    <span class=\"token keyword\">public</span> <span class=\"token variable\">$answer</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">function</span> <span class=\"token function\">getId</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">return</span> <span class=\"token variable\">$this</span><span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token property\">id</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></span></code></pre></div>\n<h2 id=\"creating-custom-operations-and-controllers\" style=\"position:relative;\"><a href=\"#creating-custom-operations-and-controllers\" aria-label=\"creating custom operations and controllers permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Creating Custom Operations and Controllers</h2>\n<p>API Platform can leverage the Symfony routing system to register custom operation related to custom controllers. Such custom\ncontrollers can be any valid <a href=\"http://symfony.com/doc/current/book/controller.html\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Symfony controller</a>, including standard\nSymfony controllers extending the <a href=\"http://api.symfony.com/3.1/Symfony/Bundle/FrameworkBundle/Controller/Controller.html\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"><code class=\"language-text\">Symfony\\Bundle\\FrameworkBundle\\Controller\\Controller</code></a>\nhelper class.</p>\n<p>However, API Platform recommends to use <strong>action classes</strong> instead of typical Symfony controllers. Internally, API Platform\nimplements the <a href=\"https://github.com/pmjones/adr\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Action-Domain-Responder</a> pattern (ADR), a web-specific refinement of <a href=\"https://en.wikipedia.org/wiki/Model%E2%80%93view%E2%80%93controller\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">MVC</a>.</p>\n<p>Note: <a href=\"/docs/v2.1/core/events/\">the event system</a> should be preferred over custom controllers when applicable.</p>\n<p>The distribution of API Platform also eases the implementation of the ADR pattern: it automatically registers action classes\nstored in <code class=\"language-text\">src/AppBundle/Action</code> and <code class=\"language-text\">src/AppBundle/Controller</code> as autowired services.</p>\n<p>Thanks to the <a href=\"http://symfony.com/doc/current/components/dependency_injection/autowiring.html\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">autowiring</a> feature of the\nSymfony Dependency Injection container, services required by an action can be type-hinted in its constructor, it will be\nautomatically instantiated and injected, without having to declare it explicitly.</p>\n<p>In the following example, the built-in <code class=\"language-text\">GET</code> operation is registered as well as a custom operation called <code class=\"language-text\">special</code>.\nThe <code class=\"language-text\">special</code> operation reference the Symfony route named <code class=\"language-text\">book_special</code>.</p>\n<div class=\"gatsby-highlight\" data-language=\"php\"><pre class=\"language-php\"><code class=\"language-php\"><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span>\n<span class=\"token comment\">// src/AppBundle/Entity/Book.php</span>\n\n<span class=\"token keyword\">use</span> <span class=\"token package\">ApiPlatform<span class=\"token punctuation\">\\</span>Core<span class=\"token punctuation\">\\</span>Annotation<span class=\"token punctuation\">\\</span>ApiResource</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">/**\n * @ApiResource(itemOperations={\n *     \"get\"={\"method\"=\"GET\"},\n *     \"special\"={\"route_name\"=\"book_special\"}\n * })\n */</span>\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">Book</span>\n<span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">//...</span>\n<span class=\"token punctuation\">}</span></span></code></pre></div>\n<p>Or in YAML:</p>\n<div class=\"gatsby-highlight\" data-language=\"yaml\"><pre class=\"language-yaml\"><code class=\"language-yaml\"><span class=\"token comment\"># src/AppBundle/Resources/config/api_resources/resources.yml</span>\n<span class=\"token key atrule\">AppBundle\\Entity\\Book</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">itemOperations</span><span class=\"token punctuation\">:</span>\n        <span class=\"token key atrule\">get</span><span class=\"token punctuation\">:</span>\n            <span class=\"token key atrule\">method</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'GET'</span>\n        <span class=\"token key atrule\">special</span><span class=\"token punctuation\">:</span>\n            <span class=\"token key atrule\">route_name</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'book_special'</span></code></pre></div>\n<p>Or in XML:</p>\n<div class=\"gatsby-highlight\" data-language=\"xml\"><pre class=\"language-xml\"><code class=\"language-xml\"><span class=\"token comment\">&lt;!-- src/AppBundle/Resources/config/api_resources/resources.xml --></span>\n<span class=\"token prolog\">&lt;?xml version=\"1.0\" encoding=\"UTF-8\" ?></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>resources</span> <span class=\"token attr-name\">xmlns</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>https://api-platform.com/schema/metadata<span class=\"token punctuation\">\"</span></span>\n           <span class=\"token attr-name\"><span class=\"token namespace\">xmlns:</span>xsi</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>http://www.w3.org/2001/XMLSchema-instance<span class=\"token punctuation\">\"</span></span>\n           <span class=\"token attr-name\"><span class=\"token namespace\">xsi:</span>schemaLocation</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>https://api-platform.com/schema/metadata\n           https://api-platform.com/schema/metadata/metadata-2.0.xsd<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>resource</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>AppBundle\\Entity\\Book<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>itemOperations</span><span class=\"token punctuation\">></span></span>\n            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>itemOperation</span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>get<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n                <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>attribute</span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>method<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>GET<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>attribute</span><span class=\"token punctuation\">></span></span>\n            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>itemOperation</span><span class=\"token punctuation\">></span></span>\n            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>itemOperation</span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>special<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n                <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>attribute</span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>route_name<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>book_special<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>attribute</span><span class=\"token punctuation\">></span></span>\n            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>itemOperation</span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>itemOperations</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>resource</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>resources</span><span class=\"token punctuation\">></span></span></code></pre></div>\n<p>API Platform will automatically map this <code class=\"language-text\">special</code> operation with the route <code class=\"language-text\">book_special</code>. Let's create a custom action\nand its related route using annotations:</p>\n<div class=\"gatsby-highlight\" data-language=\"php\"><pre class=\"language-php\"><code class=\"language-php\"><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span>\n<span class=\"token comment\">// src/AppBundle/Action/BookSpecial.php</span>\n\n<span class=\"token keyword\">namespace</span> <span class=\"token package\">AppBundle<span class=\"token punctuation\">\\</span>Action</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">use</span> <span class=\"token package\">AppBundle<span class=\"token punctuation\">\\</span>Entity<span class=\"token punctuation\">\\</span>Book</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">use</span> <span class=\"token package\">Doctrine<span class=\"token punctuation\">\\</span>Common<span class=\"token punctuation\">\\</span>Persistence<span class=\"token punctuation\">\\</span>ManagerRegistry</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">use</span> <span class=\"token package\">Sensio<span class=\"token punctuation\">\\</span>Bundle<span class=\"token punctuation\">\\</span>FrameworkExtraBundle<span class=\"token punctuation\">\\</span>Configuration<span class=\"token punctuation\">\\</span>Method</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">use</span> <span class=\"token package\">Symfony<span class=\"token punctuation\">\\</span>Component<span class=\"token punctuation\">\\</span>Routing<span class=\"token punctuation\">\\</span>Annotation<span class=\"token punctuation\">\\</span>Route</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">BookSpecial</span>\n<span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">private</span> <span class=\"token variable\">$myService</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">function</span> <span class=\"token function\">__construct</span><span class=\"token punctuation\">(</span>MyService <span class=\"token variable\">$myService</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">{</span>\n        <span class=\"token variable\">$this</span><span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token property\">myService</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$myService</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token comment\">/**\n     * @Route(\n     *     name=\"book_special\",\n     *     path=\"/books/{id}/special\",\n     *     defaults={\"_api_resource_class\"=Book::class, \"_api_item_operation_name\"=\"special\"}\n     * )\n     * @Method(\"PUT\")\n     */</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">function</span> <span class=\"token function\">__invoke</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$data</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// API Platform retrieves the PHP entity using the data provider then (for POST and</span>\n                                    <span class=\"token comment\">// PUT method) deserializes user data in it. Then passes it to the action. Here $data</span>\n                                    <span class=\"token comment\">// is an instance of Book having the given ID. By convention, the action's parameter</span>\n                                    <span class=\"token comment\">// must be called $data.</span>\n    <span class=\"token punctuation\">{</span>\n        <span class=\"token variable\">$this</span><span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token property\">myService</span><span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">doSomething</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$data</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token keyword\">return</span> <span class=\"token variable\">$data</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// API Platform will automatically validate, persist (if you use Doctrine) and serialize an entity</span>\n                      <span class=\"token comment\">// for you. If you prefer to do it yourself, return an instance of Symfony\\Component\\HttpFoundation\\Response</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></span></code></pre></div>\n<p>This custom operation behaves exactly like the built-in operation: it returns a JSON-LD document corresponding to the id\npassed in the URL.</p>\n<p>It is mandatory to set the <code class=\"language-text\">_api_resource_class</code> and <code class=\"language-text\">_api_item_operation_name</code> (or <code class=\"language-text\">_api_collection_operation_name</code> for a collection\noperation) in the parameters of the route (<code class=\"language-text\">defaults</code> key). It allows API Platform and the Symfony routing system to hook\ntogether.</p>\n<p>Here we consider that the autowiring enabled for controller classes (the default when using the API Platform distribution).\nThis action will be automatically registered as a service (the service name is the same as the class name: <code class=\"language-text\">AppBundle\\Action\\BookSpecial</code>).</p>\n<p>API Platform automatically retrieves the appropriate PHP entity then deserializes it, and for <code class=\"language-text\">POST</code> and <code class=\"language-text\">PUT</code> requests\nupdates the entity with data provided by the user.</p>\n<p>If you want to bypass the automatic retrieval of the entity, you can set the parameter <code class=\"language-text\">_api_receive</code> to <code class=\"language-text\">false</code>.\nThis way, it will skip the <code class=\"language-text\">Read</code>, <code class=\"language-text\">Deserialize</code> and <code class=\"language-text\">Validate</code> listeners (see <a href=\"/docs/v2.1/core/events/\">the event system</a> for more information).</p>\n<p>Services (<code class=\"language-text\">$myService</code> here) are automatically injected thanks to the autowiring feature. You can type-hint any service\nyou need and it will be autowired too.</p>\n<p>The <code class=\"language-text\">__invoke</code> method of the action is called when the matching route is hit. It can return either an instance of <code class=\"language-text\">Symfony\\Component\\HttpFoundation\\Response</code>\n(that will be displayed to the client immediately by the Symfony kernel) or, like in this example, an instance of an entity\nmapped as a resource (or a collection of instances for collection operations).\nIn this case, the entity will pass through <a href=\"/docs/v2.1/core/events/\">all built-in event listeners</a> of API Platform. It will be\nautomatically validated, persisted and serialized in JSON-LD. Then the Symfony kernel will send the resulting document to\nthe client.</p>\n<p>Alternatively, you can also use standard Symfony controller and YAML or XML route declarations. The following example does\nexactly the same thing than the previous example in a more Symfony-like fashion:</p>\n<div class=\"gatsby-highlight\" data-language=\"php\"><pre class=\"language-php\"><code class=\"language-php\"><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span>\n<span class=\"token comment\">// src/AppBundle/Controller/BookController.php</span>\n\n<span class=\"token keyword\">namespace</span> <span class=\"token package\">AppBundle<span class=\"token punctuation\">\\</span>Controller</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">use</span> <span class=\"token package\">AppBundle<span class=\"token punctuation\">\\</span>Entity<span class=\"token punctuation\">\\</span>Book</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">use</span> <span class=\"token package\">Symfony<span class=\"token punctuation\">\\</span>Bundle<span class=\"token punctuation\">\\</span>FrameworkBundle<span class=\"token punctuation\">\\</span>Controller<span class=\"token punctuation\">\\</span>Controller</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">BookController</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">Controller</span>\n<span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">function</span> <span class=\"token function\">specialAction</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$data</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">return</span> <span class=\"token variable\">$this</span><span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token single-quoted-string string\">'my_service'</span><span class=\"token punctuation\">)</span><span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">doSomething</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$data</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></span></code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"yaml\"><pre class=\"language-yaml\"><code class=\"language-yaml\"><span class=\"token comment\"># app/config/routing.yml</span>\n<span class=\"token key atrule\">book_special</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">path</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'/books/{id}/special'</span>\n    <span class=\"token key atrule\">methods</span><span class=\"token punctuation\">:</span>  <span class=\"token punctuation\">[</span><span class=\"token string\">'PUT'</span><span class=\"token punctuation\">]</span>\n    <span class=\"token key atrule\">defaults</span><span class=\"token punctuation\">:</span>\n        <span class=\"token key atrule\">_controller</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'AppBundle:Book:special'</span>\n        <span class=\"token key atrule\">_api_resource_class</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'AppBundle\\Entity\\Book'</span>\n        <span class=\"token key atrule\">_api_item_operation_name</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'special'</span></code></pre></div>","nav":{"chapters":[{"title":"The Distribution: Create Powerful APIs with Ease","path":"distribution","items":[{"id":"index","title":"Creating your First API with API Platform, in 5 Minutes","anchors":[{"id":"installing-the-framework","title":"Installing the framework","anchors":[{"id":"in-docker-containers","title":"In Docker Containers"},{"id":"via-composer","title":"Via Composer"}]},{"id":"its-ready","title":"It's ready!"},{"id":"creating-the-model","title":"Creating the model"},{"id":"validating-data","title":"Validating Data"},{"id":"going-client-side","title":"Going Client-Side"},{"id":"other-features","title":"Other Features"}]},{"id":"testing","title":"Testing and Specifying the API"}]},{"title":"The API Component","path":"core","items":[{"id":"index","title":"The API Platform Core Library","anchors":[{"id":"features","title":"Features"},{"id":"other-resources","title":"Other resources"}]},{"id":"getting-started","title":"Getting started","anchors":[{"id":"installing-api-platform-core","title":"Installing API Platform Core"},{"id":"before-reading-this-documentation","title":"Before Reading this Documentation"},{"id":"mapping-the-entities","title":"Mapping the Entities"}]},{"id":"operations","title":"Operations","anchors":[{"id":"enabling-and-disabling-operations","title":"Enabling and Disabling Operations"},{"id":"configuring-operations","title":"Configuring Operations"},{"id":"subresources","title":"Subresources","anchors":[{"id":"control-the-path-of-subresources","title":"Control the Path of Subresources"},{"id":"control-the-depth-of-subresources","title":"Control the Depth of Subresources"}]},{"id":"creating-custom-operations-and-controllers","title":"Creating Custom Operations and Controllers"}]},{"id":"filters","title":"Filters","anchors":[{"id":"doctrine-orm-filters","title":"Doctrine ORM Filters","anchors":[{"id":"search-filter","title":"Search Filter"},{"id":"date-filter","title":"Date Filter","anchors":[{"id":"managing-null-values","title":"Managing null Values"}]},{"id":"boolean-filter","title":"Boolean Filter"},{"id":"numeric-filter","title":"Numeric Filter"},{"id":"range-filter","title":"Range Filter"},{"id":"order-filter","title":"Order Filter","anchors":[{"id":"comparing-with-null-values","title":"Comparing with Null Values"},{"id":"using-a-custom-order-query-parameter-name","title":"Using a Custom Order Query Parameter Name"}]},{"id":"filtering-on-nested-properties","title":"Filtering on Nested Properties"},{"id":"enabling-a-filter-for-all-properties-of-a-resource","title":"Enabling a Filter for All Properties of a Resource"}]},{"id":"serializer-filters","title":"Serializer Filters","anchors":[{"id":"group-filter","title":"Group Filter"},{"id":"property-filter","title":"Property filter"}]},{"id":"creating-custom-filters","title":"Creating Custom Filters","anchors":[{"id":"creating-custom-doctrine-orm-filters","title":"Creating Custom Doctrine ORM Filters"},{"id":"overriding-extraction-of-properties-from-the-request","title":"Overriding Extraction of Properties from the Request"}]}]},{"id":"serialization","title":"The Serialization Process","anchors":[{"id":"overall-process","title":"Overall Process"},{"id":"available-serializers","title":"Available Serializers"},{"id":"the-serialization-context-groups-and-relations","title":"The Serialization Context, Groups and Relations","anchors":[{"id":"configuration","title":"Configuration"}]},{"id":"using-serialization-groups","title":"Using Serialization Groups"},{"id":"using-different-serialization-groups-per-operation","title":"Using Different Serialization Groups per Operation","anchors":[{"id":"embedding-relations","title":"Embedding Relations"},{"id":"normalization","title":"Normalization"},{"id":"denormalization","title":"Denormalization"}]},{"id":"changing-the-serialization-context-dynamically","title":"Changing the Serialization Context Dynamically"},{"id":"name-conversion","title":"Name Conversion"},{"id":"decorating-a-serializer-and-add-extra-data","title":"Decorating a Serializer and Add Extra Data"},{"id":"entity-identifier-case","title":"Entity Identifier Case"},{"id":"embedding-the-json-ld-context","title":"Embedding the JSON-LD Context"}]},{"id":"validation","title":"Validation","anchors":[{"id":"using-validation-groups","title":"Using Validation Groups"},{"id":"dynamic-validation-groups","title":"Dynamic Validation Groups"}]},{"id":"security","title":"Security"},{"id":"data-providers","title":"Data Providers","anchors":[{"id":"custom-collection-data-provider","title":"Custom Collection Data Provider"},{"id":"custom-item-data-provider","title":"Custom Item Data Provider"}]},{"id":"pagination","title":"Pagination","anchors":[{"id":"disabling-the-pagination","title":"Disabling the Pagination","anchors":[{"id":"globally","title":"Globally"},{"id":"for-a-specific-resource","title":"For a Specific Resource"},{"id":"client-side","title":"Client-side","anchors":[{"id":"globally","title":"Globally"},{"id":"for-a-specific-resource","title":"For a specific resource"}]}]},{"id":"changing-the-number-of-items-per-page","title":"Changing the Number of Items per Page","anchors":[{"id":"globally","title":"Globally"},{"id":"for-a-specific-resource","title":"For a Specific Resource"},{"id":"client-side","title":"Client-side","anchors":[{"id":"globally","title":"Globally"},{"id":"for-a-specific-resource","title":"For a Specific Resource"}]}]}]},{"id":"events","title":"The Event System"},{"id":"content-negotiation","title":"Content Negotiation","anchors":[{"id":"enabling-several-formats","title":"Enabling Several Formats"},{"id":"registering-a-custom-serializer","title":"Registering a Custom Serializer"},{"id":"writing-a-custom-normalizer","title":"Writing a Custom Normalizer"}]},{"id":"performance","title":"Performance","anchors":[{"id":"enabling-the-builtin-http-cache-invalidation-system","title":"Enabling the Builtin HTTP Cache Invalidation System"},{"id":"enabling-the-metadata-cache","title":"Enabling the Metadata Cache"},{"id":"using-ppm-php-pm","title":"Using PPM (PHP-PM)"},{"id":"doctrine-queries-and-indexes","title":"Doctrine Queries and Indexes","anchors":[{"id":"search-filter","title":"Search Filter"},{"id":"eager-loading","title":"Eager loading","anchors":[{"id":"max-joins","title":"Max joins"},{"id":"force-eager","title":"Force eager"},{"id":"override-at-resource-and-operation-level","title":"Override at resource and operation level"},{"id":"disable-eager-loading","title":"Disable eager loading"}]}]}]},{"id":"extensions","title":"Extensions","anchors":[{"id":"custom-extension","title":"Custom Extension"},{"id":"example","title":"Example","anchors":[{"id":"blocking-anonymous-users","title":"Blocking Anonymous Users"}]}]},{"id":"swagger","title":"Swagger / Open API Support","anchors":[{"id":"overriding-the-swagger-documentation","title":"Overriding the Swagger Documentation"},{"id":"using-the-swagger-context","title":"Using the Swagger Context"},{"id":"changing-the-swagger-ui-location","title":"Changing the Swagger UI Location","anchors":[{"id":"disabling-swagger-ui","title":"Disabling Swagger UI"},{"id":"manually-registering-the-swagger-ui-controller","title":"Manually Registering the Swagger UI Controller"},{"id":"enable-swagger-doc-for-api-gateway","title":"Enable Swagger doc for API Gateway"}]}]},{"id":"default-order","title":"Overriding Default Order"},{"id":"external-vocabularies","title":"Using External Vocabularies"},{"id":"operation-path-naming","title":"Operation Path Naming","anchors":[{"id":"configuration","title":"Configuration"},{"id":"create-a-custom-operation-path-resolver","title":"Create a Custom Operation Path Resolver","anchors":[{"id":"defining-the-operation-path-resolver","title":"Defining the Operation Path Resolver"},{"id":"registering-the-service","title":"Registering the Service"},{"id":"configure-it","title":"Configure It"}]}]},{"id":"extending-jsonld-context","title":"Extending JSON-LD context"},{"id":"form-data","title":"Accept application/x-www-form-urlencoded Form Data","anchors":[{"id":"create-your-deserializelistener-decorator","title":"Create your DeserializeListener Decorator"},{"id":"create-the-service-definition","title":"Create the Service Definition"},{"id":"cleanup-the-original-listener","title":"Cleanup the Original Listener"}]},{"id":"jwt","title":"JWT Authentication"},{"id":"angularjs-integration","title":"AngularJS Integration","anchors":[{"id":"restangular","title":"Restangular"},{"id":"ng-admin","title":"ng-admin"}]},{"id":"fosuser-bundle","title":"FOSUserBundle Integration","anchors":[{"id":"installing-the-bundle","title":"Installing the Bundle"},{"id":"enabling-the-bridge","title":"Enabling the Bridge"},{"id":"creating-a-user-entity-with-serialization-groups","title":"Creating a User Entity with Serialization Groups"}]},{"id":"nelmio-api-doc","title":"NelmioApiDocBundle Integration"},{"id":"configuration","title":"Configuration"}]},{"title":"The Schema Generator Component","path":"schema-generator","items":[{"id":"index","title":"The schema generator","anchors":[{"id":"what-is-schemaorg","title":"What is Schema.org?"},{"id":"why-use-schemaorg-data-to-generate-a-php-model","title":"Why use Schema.org data to generate a PHP model?","anchors":[{"id":"dont-reinvent-the-wheel","title":"Don't Reinvent The Wheel"},{"id":"improve-seo-and-user-experience","title":"Improve SEO and user experience"},{"id":"be-ready-for-the-future","title":"Be ready for the future"}]},{"id":"documentation","title":"Documentation"}]},{"id":"getting-started","title":"Getting Started","anchors":[{"id":"installation","title":"Installation"},{"id":"model-scaffolding","title":"Model scaffolding","anchors":[{"id":"going-further","title":"Going further"}]},{"id":"cardinality-extraction","title":"Cardinality extraction"}]},{"id":"configuration","title":"Configuration","anchors":[{"id":"customizing-php-namespaces","title":"Customizing PHP Namespaces"},{"id":"forcing-a-field-range","title":"Forcing a Field Range"},{"id":"forcing-a-field-cardinality","title":"Forcing a Field Cardinality"},{"id":"forcing-a-relation-table-name","title":"Forcing a Relation Table Name"},{"id":"forcing-or-disabling-a-class-parent","title":"Forcing (or Disabling) a Class Parent"},{"id":"forcing-a-class-to-be-abstract","title":"Forcing a Class to be Abstract"},{"id":"forcing-a-nullable-property","title":"Forcing a Nullable Property"},{"id":"forcing-a-unique-property","title":"Forcing a Unique Property"},{"id":"making-a-property-read-only","title":"Making a Property Read Only"},{"id":"making-a-property-write-only","title":"Making a Property Write Only"},{"id":"forcing-a-property-to-be-in-a-serialization-group","title":"Forcing a Property to be in a Serialization Group"},{"id":"forcing-an-embeddable-class-to-be-embedded","title":"Forcing an Embeddable Class to be Embedded"},{"id":"author-phpdoc","title":"Author PHPDoc"},{"id":"disabling-generators-and-creating-custom-ones","title":"Disabling Generators and Creating Custom Ones"},{"id":"skipping-accessor-method-generation","title":"Skipping Accessor Method Generation"},{"id":"disabling-the-id-generator","title":"Disabling the id Generator"},{"id":"generating-uuids","title":"Generating UUIDs"},{"id":"user-submitted-uuids","title":"User submitted UUIDs"},{"id":"generating-custom-ids","title":"Generating Custom IDs"},{"id":"disabling-usage-of-doctrine-collection","title":"Disabling Usage of Doctrine Collection"},{"id":"changing-the-field-visibility","title":"Changing the Field Visibility"},{"id":"generating-asserttype-annotations","title":"Generating @Assert\\Type Annotations"},{"id":"forcing-doctrine-inheritance-mapping-annotation","title":"Forcing Doctrine Inheritance Mapping Annotation"},{"id":"interfaces-and-doctrine-resolve-target-entity-listener","title":"Interfaces and Doctrine Resolve Target Entity Listener"},{"id":"custom-schemas","title":"Custom Schemas"},{"id":"checking-goodrelation-compatibility","title":"Checking GoodRelation Compatibility"},{"id":"php-file-header","title":"PHP File Header"},{"id":"full-configuration-reference","title":"Full Configuration Reference"}]}]},{"title":"The Admin Component","path":"admin","items":[{"id":"index","title":"The API Platform Admin","anchors":[{"id":"features","title":"Features"}]},{"id":"getting-started","title":"Getting Started","anchors":[{"id":"installation","title":"Installation"},{"id":"creating-the-admin","title":"Creating the Admin"},{"id":"customizing-the-admin","title":"Customizing the Admin","anchors":[{"id":"using-custom-components","title":"Using Custom Components"},{"id":"managing-files-and-images","title":"Managing Files and Images"},{"id":"using-a-custom-validation-function-or-inject-custom-props","title":"Using a Custom Validation Function or Inject Custom Props"}]}]},{"id":"authentication-support","title":"Authentication Support"},{"id":"handling-relations-to-collections","title":"Handling Relations to Collections","anchors":[{"id":"using-an-autocomplete-input-for-relations","title":"Using an Autocomplete Input for Relations"}]}]},{"title":"The Client Generator Component","path":"client-generator","items":[{"id":"index","title":"The API Platform Client Generator","anchors":[{"id":"features","title":"Features"}]},{"id":"react","title":"React generator"},{"id":"vuejs","title":"Vue.js generator"},{"id":"troubleshooting","title":"Troubleshooting"}]},{"title":"Deployment","path":"deployment","items":[{"id":"index","title":"Deploying API Platform Applications"},{"id":"docker","title":"Using API Platform with Docker","anchors":[{"id":"services","title":"Services"},{"id":"installation","title":"Installation"}]},{"id":"heroku","title":"Deploying an API Platform App on Heroku"}]},{"title":"Extra","path":"extra","items":[{"id":"philosophy","title":"API Platform's Philosophy"},{"id":"troubleshooting","title":"Troubleshooting","anchors":[{"id":"using-docker","title":"Using Docker","anchors":[{"id":"with-docker-toolbox-on-windows","title":"With Docker Toolbox on Windows"},{"id":"error-starting-userland-proxy","title":"Error starting userland proxy"}]},{"id":"using-api-platform-and-jms-serializer-in-the-same-project","title":"Using API Platform and JMS Serializer in the same project"}]},{"id":"contribution-guides","title":"Contribution guides"},{"id":"conduct","title":"Contributor Code of Conduct","anchors":[{"id":"our-pledge","title":"Our Pledge"},{"id":"our-standards","title":"Our Standards"},{"id":"our-responsibilities","title":"Our Responsibilities"},{"id":"scope","title":"Scope"},{"id":"enforcement","title":"Enforcement"},{"id":"attribution","title":"Attribution"}]}]}]},"next":{"slug":"/docs/v2.1/core/filters/","title":"Filters"},"prefixedVersion":"v2.1","previous":{"slug":"/docs/v2.1/core/getting-started/","title":"Getting started"},"title":"Operations","urlEditDocumentation":"https://github.com/api-platform/docs/edit/2.1/core/operations.md","version":"v2.1/"}}}