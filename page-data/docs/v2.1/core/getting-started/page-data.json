{"componentChunkName":"component---src-templates-doc-js","path":"/docs/v2.1/core/getting-started/","result":{"pageContext":{"html":"<h1 id=\"getting-started\" style=\"position:relative;\"><a href=\"#getting-started\" aria-label=\"getting started permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Getting started</h1>\n<h2 id=\"installing-api-platform-core\" style=\"position:relative;\"><a href=\"#installing-api-platform-core\" aria-label=\"installing api platform core permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Installing API Platform Core</h2>\n<p>If you are starting a new project, the easiest way to get API Platform up is to install the <a href=\"/docs/v2.1/distribution/\">API Platform Distribution</a>.\nIt ships with the API Platform Core library integrated with <a href=\"https://symfony.com\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">the Symfony framework</a>, <a href=\"/docs/v2.1/schema-generator/\">the schema generator</a>,\n<a href=\"http://www.doctrine-project.org\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Doctrine ORM</a>, <a href=\"https://github.com/nelmio/NelmioCorsBundle\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">NelmioCorsBundle</a>\nand <a href=\"http://behat.org\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Behat</a>.\nBasically, it is a Symfony edition packaged with the best tools to develop a REST API and sensible default settings.</p>\n<p>Alternatively, you can use <a href=\"http://getcomposer.org\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Composer</a> to install the standalone bundle in an existing Symfony project:</p>\n<p><code class=\"language-text\">composer require api-platform/core</code></p>\n<p>Then, update your <code class=\"language-text\">app/AppKernel.php</code> file:</p>\n<div class=\"gatsby-highlight\" data-language=\"php\"><pre class=\"language-php\"><code class=\"language-php\"><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span>\n<span class=\"token comment\">// app/AppKernel.php</span>\n\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">function</span> <span class=\"token function\">registerBundles</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{</span>\n    <span class=\"token variable\">$bundles</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>\n        <span class=\"token comment\">// ...</span>\n        <span class=\"token keyword\">new</span> <span class=\"token class-name\">ApiPlatform<span class=\"token punctuation\">\\</span>Core<span class=\"token punctuation\">\\</span>Bridge<span class=\"token punctuation\">\\</span>Symfony<span class=\"token punctuation\">\\</span>Bundle<span class=\"token punctuation\">\\</span>ApiPlatformBundle</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">// ...</span>\n<span class=\"token punctuation\">}</span></span></code></pre></div>\n<p>Register the routes of our API by adding the following lines to <code class=\"language-text\">app/config/routing.yml</code>:</p>\n<div class=\"gatsby-highlight\" data-language=\"yaml\"><pre class=\"language-yaml\"><code class=\"language-yaml\"><span class=\"token comment\"># app/config/routing.yml</span>\n<span class=\"token key atrule\">api</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">resource</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'.'</span>\n    <span class=\"token key atrule\">type</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'api_platform'</span>\n    <span class=\"token key atrule\">prefix</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'/api'</span> <span class=\"token comment\"># Optional</span></code></pre></div>\n<p>There is no mandatory configuration options although <a href=\"/docs/v2.1/core/configuration/\">many settings are available</a>.</p>\n<h2 id=\"before-reading-this-documentation\" style=\"position:relative;\"><a href=\"#before-reading-this-documentation\" aria-label=\"before reading this documentation permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Before Reading this Documentation</h2>\n<p>If you haven't read it already, take a look at <a href=\"/docs/v2.1/distribution/\">the \"Creating your first API with API Platform, in a few minutes\" guide</a>.\nThis tutorial covers basic concepts required to understand how API Platform works including how it implements the REST pattern\nand what <a href=\"http://json-ld.org/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">JSON-LD</a> and <a href=\"http://www.hydra-cg.com/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Hydra</a> formats are.</p>\n<h2 id=\"mapping-the-entities\" style=\"position:relative;\"><a href=\"#mapping-the-entities\" aria-label=\"mapping the entities permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Mapping the Entities</h2>\n<p>API Platform Core is able to automatically expose entities mapped as \"API resources\" through a REST API supporting CRUD\noperations.\nTo expose your entities, you can use Docblock annotations, XML and YAML configuration files.</p>\n<p>Here is an example of entities mapped using annotations which will be exposed through a REST API:</p>\n<div class=\"gatsby-highlight\" data-language=\"php\"><pre class=\"language-php\"><code class=\"language-php\"><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span>\n<span class=\"token comment\">// src/AppBundle/Entity/Product.php</span>\n\n<span class=\"token keyword\">namespace</span> <span class=\"token package\">AppBundle<span class=\"token punctuation\">\\</span>Entity</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">use</span> <span class=\"token package\">ApiPlatform<span class=\"token punctuation\">\\</span>Core<span class=\"token punctuation\">\\</span>Annotation<span class=\"token punctuation\">\\</span>ApiResource</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">use</span> <span class=\"token package\">Doctrine<span class=\"token punctuation\">\\</span>ORM<span class=\"token punctuation\">\\</span>Mapping</span> <span class=\"token keyword\">as</span> <span class=\"token constant\">ORM</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">use</span> <span class=\"token package\">Doctrine<span class=\"token punctuation\">\\</span>Common<span class=\"token punctuation\">\\</span>Collections<span class=\"token punctuation\">\\</span>ArrayCollection</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">use</span> <span class=\"token package\">Symfony<span class=\"token punctuation\">\\</span>Component<span class=\"token punctuation\">\\</span>Validator<span class=\"token punctuation\">\\</span>Constraints</span> <span class=\"token keyword\">as</span> Assert<span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">/**\n * @ApiResource\n * @ORM\\Entity\n */</span>\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">Product</span> <span class=\"token comment\">// The class name will be used to name exposed resources</span>\n<span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">/**\n     * @ORM\\Column(type=\"integer\")\n     * @ORM\\Id\n     * @ORM\\GeneratedValue(strategy=\"AUTO\")\n     */</span>\n    <span class=\"token keyword\">public</span> <span class=\"token variable\">$id</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">/**\n     * @param string $name A name property - this description will be available in the API documentation too.\n     *\n     * @ORM\\Column\n     * @Assert\\NotBlank\n     */</span>\n    <span class=\"token keyword\">public</span> <span class=\"token variable\">$name</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">// Notice the \"cascade\" option below, this is mandatory if you want Doctrine to automatically persist the related entity</span>\n    <span class=\"token comment\">/**\n     * @ORM\\OneToMany(targetEntity=\"Offer\", mappedBy=\"product\", cascade={\"persist\"})\n     */</span>\n    <span class=\"token keyword\">public</span> <span class=\"token variable\">$offers</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">function</span> <span class=\"token function\">__construct</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">{</span>\n        <span class=\"token variable\">$this</span><span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token property\">offers</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">ArrayCollection</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// Initialize $offers as an Doctrine collection</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token comment\">// Adding both an adder and a remover as well as updating the reverse relation are mandatory</span>\n    <span class=\"token comment\">// if you want Doctrine to automatically update and persist (thanks to the \"cascade\" option) the related entity</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">function</span> <span class=\"token function\">addOffer</span><span class=\"token punctuation\">(</span>Offer <span class=\"token variable\">$offer</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span> void\n    <span class=\"token punctuation\">{</span>\n        <span class=\"token variable\">$offer</span><span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token property\">product</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$this</span><span class=\"token punctuation\">;</span>\n        <span class=\"token variable\">$this</span><span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token property\">offers</span><span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$offer</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">function</span> <span class=\"token function\">removeOffer</span><span class=\"token punctuation\">(</span>Offer <span class=\"token variable\">$offer</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span> void\n    <span class=\"token punctuation\">{</span>\n        <span class=\"token variable\">$offer</span><span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token property\">product</span> <span class=\"token operator\">=</span> <span class=\"token constant\">null</span><span class=\"token punctuation\">;</span>\n        <span class=\"token variable\">$this</span><span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token property\">offers</span><span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">removeElement</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$offer</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></span></code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"php\"><pre class=\"language-php\"><code class=\"language-php\"><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span>\n<span class=\"token comment\">// src/AppBundle/Entity/Offer.php</span>\n\n<span class=\"token keyword\">namespace</span> <span class=\"token package\">AppBundle<span class=\"token punctuation\">\\</span>Entity</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">use</span> <span class=\"token package\">ApiPlatform<span class=\"token punctuation\">\\</span>Core<span class=\"token punctuation\">\\</span>Annotation<span class=\"token punctuation\">\\</span>ApiResource</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">use</span> <span class=\"token package\">Doctrine<span class=\"token punctuation\">\\</span>ORM<span class=\"token punctuation\">\\</span>Mapping</span> <span class=\"token keyword\">as</span> <span class=\"token constant\">ORM</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">use</span> <span class=\"token package\">Symfony<span class=\"token punctuation\">\\</span>Component<span class=\"token punctuation\">\\</span>Validator<span class=\"token punctuation\">\\</span>Constraints</span> <span class=\"token keyword\">as</span> Assert<span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">/**\n * An offer from my shop - this description will be automatically extracted form the PHPDoc to document the API.\n *\n * @ApiResource(iri=\"http://schema.org/Offer\")\n * @ORM\\Entity\n */</span>\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">Offer</span>\n<span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">/**\n     * @ORM\\Column(type=\"integer\")\n     * @ORM\\Id\n     * @ORM\\GeneratedValue(strategy=\"AUTO\")\n     */</span>\n    <span class=\"token keyword\">public</span> <span class=\"token variable\">$id</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">/**\n     * @ORM\\Column(type=\"text\")\n     */</span>\n    <span class=\"token keyword\">public</span> <span class=\"token variable\">$description</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">/**\n     * @ORM\\Column(type=\"float\")\n     * @Assert\\NotBlank\n     * @Assert\\Range(min=0, minMessage=\"The price must be superior to 0.\")\n     * @Assert\\Type(type=\"float\")\n     */</span>\n    <span class=\"token keyword\">public</span> <span class=\"token variable\">$price</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">/**\n     * @ORM\\ManyToOne(targetEntity=\"Product\", inversedBy=\"offers\")\n     */</span>\n    <span class=\"token keyword\">public</span> <span class=\"token variable\">$product</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></span></code></pre></div>\n<p>It is the minimal configuration required to expose <code class=\"language-text\">Product</code> and <code class=\"language-text\">Offer</code> entities as JSON-LD documents through an hypermedia\nweb API.</p>\n<p>If you are familiar with the Symfony ecosystem, you noticed that entity classes are also mapped with Doctrine ORM annotations\nand validation constraints from <a href=\"http://symfony.com/doc/current/book/validation.html\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">the Symfony Validator Component</a>.\nThis isn't mandatory. You can use <a href=\"/docs/v2.1/core/data-providers/\">your preferred persistence</a> and <a href=\"/docs/v2.1/core/validation/\">validation</a> systems.\nHowever, API Platform Core has built-in support for those library and is able to use them without requiring any specific\ncode or configuration to automatically persist and validate your data. They are good default and we encourage you to use\nthem unless you know what you are doing.</p>\n<p>Thanks to the mapping done previously, API Platform Core will automatically register the following REST <a href=\"/docs/v2.1/core/operations/\">operations</a>\nfor resources of the product type:</p>\n<p>Product</p>\n<table>\n<thead>\n<tr>\n<th>Method</th>\n<th>URL</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>GET</td>\n<td>/products</td>\n<td>Retrieve the (paged) collection</td>\n</tr>\n<tr>\n<td>POST</td>\n<td>/products</td>\n<td>Create a new product</td>\n</tr>\n<tr>\n<td>GET</td>\n<td>/products/{id}</td>\n<td>Retrieve a product</td>\n</tr>\n<tr>\n<td>PUT</td>\n<td>/products/{id}</td>\n<td>Update a product</td>\n</tr>\n<tr>\n<td>DELETE</td>\n<td>/products/{id}</td>\n<td>Delete a product</td>\n</tr>\n</tbody>\n</table>\n<p>The same operations are available for the offer method (routes will start with the <code class=\"language-text\">/offers</code> pattern).\nRoute prefixes are built by pluralizing the name of the mapped entity class.\nIt is also possible to override the naming convention using <a href=\"/docs/v2.1/core/operation-path-naming/\">operation path namings</a>.</p>\n<p>As an alternative to annotations, you can map entity classes using XML or YAML:</p>\n<p>XML:</p>\n<div class=\"gatsby-highlight\" data-language=\"xml\"><pre class=\"language-xml\"><code class=\"language-xml\"><span class=\"token comment\">&lt;!-- src/AppBundle/Resources/config/api_resources/resources.xml --></span>\n<span class=\"token prolog\">&lt;?xml version=\"1.0\" encoding=\"UTF-8\" ?></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>resources</span> <span class=\"token attr-name\">xmlns</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>https://api-platform.com/schema/metadata<span class=\"token punctuation\">\"</span></span>\n           <span class=\"token attr-name\"><span class=\"token namespace\">xmlns:</span>xsi</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>http://www.w3.org/2001/XMLSchema-instance<span class=\"token punctuation\">\"</span></span>\n           <span class=\"token attr-name\"><span class=\"token namespace\">xsi:</span>schemaLocation</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>https://api-platform.com/schema/metadata\n           https://api-platform.com/schema/metadata/metadata-2.0.xsd<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>resource</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>AppBundle\\Entity\\Product<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>resource</span>\n        <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>AppBundle\\Entity\\Offer<span class=\"token punctuation\">\"</span></span>\n        <span class=\"token attr-name\">shortName</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>Offer<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">&lt;!--</span> <span class=\"token attr-name\">optional</span> <span class=\"token attr-name\">--</span><span class=\"token punctuation\">></span></span>\n        description=\"An offer form my shop\" <span class=\"token comment\">&lt;!-- optional --></span>\n        iri=\"http://schema.org/Offer\" <span class=\"token comment\">&lt;!-- optional --></span>\n    />\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>resources</span><span class=\"token punctuation\">></span></span></code></pre></div>\n<p>YAML:</p>\n<div class=\"gatsby-highlight\" data-language=\"yaml\"><pre class=\"language-yaml\"><code class=\"language-yaml\"><span class=\"token comment\"># src/AppBundle/Resources/config/api_resources/resources.yml</span>\n<span class=\"token key atrule\">resources</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">AppBundle\\Entity\\Product</span><span class=\"token punctuation\">:</span> <span class=\"token null important\">~</span>\n    <span class=\"token key atrule\">AppBundle\\Entity\\Offer</span><span class=\"token punctuation\">:</span>\n        <span class=\"token key atrule\">shortName</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'Offer'</span>                   <span class=\"token comment\"># optional</span>\n        <span class=\"token key atrule\">description</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'An offer from my shop'</span> <span class=\"token comment\"># optional</span>\n        <span class=\"token key atrule\">iri</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'http://schema.org/Offer'</span>       <span class=\"token comment\"># optional</span>\n        <span class=\"token key atrule\">attributes</span><span class=\"token punctuation\">:</span>                          <span class=\"token comment\"># optional</span>\n            <span class=\"token key atrule\">pagination_items_per_page</span><span class=\"token punctuation\">:</span> <span class=\"token number\">25    </span><span class=\"token comment\"># optional</span></code></pre></div>\n<p><strong>You're done!</strong></p>\n<p>You now have a fully featured API exposing your entities.\nRun the Symfony app (<code class=\"language-text\">bin/console server:run</code>) and browse the API entrypoint at <code class=\"language-text\">http://localhost:8000/api</code>.</p>\n<p>Interact with the API using a REST client (we recommend <a href=\"https://www.getpostman.com/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Postman</a>) or an Hydra aware application\n(you should give <a href=\"https://github.com/lanthaler/HydraConsole\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Hydra Console</a> a try). Take\na look at the usage examples in <a href=\"https://github.com/api-platform/api-platform/tree/master/features\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">the <code class=\"language-text\">features</code> directory</a>.</p>","nav":{"chapters":[{"title":"The Distribution: Create Powerful APIs with Ease","path":"distribution","items":[{"id":"index","title":"Creating your First API with API Platform, in 5 Minutes","anchors":[{"id":"installing-the-framework","title":"Installing the framework","anchors":[{"id":"in-docker-containers","title":"In Docker Containers"},{"id":"via-composer","title":"Via Composer"}]},{"id":"its-ready","title":"It's ready!"},{"id":"creating-the-model","title":"Creating the model"},{"id":"validating-data","title":"Validating Data"},{"id":"going-client-side","title":"Going Client-Side"},{"id":"other-features","title":"Other Features"}]},{"id":"testing","title":"Testing and Specifying the API"}]},{"title":"The API Component","path":"core","items":[{"id":"index","title":"The API Platform Core Library","anchors":[{"id":"features","title":"Features"},{"id":"other-resources","title":"Other resources"}]},{"id":"getting-started","title":"Getting started","anchors":[{"id":"installing-api-platform-core","title":"Installing API Platform Core"},{"id":"before-reading-this-documentation","title":"Before Reading this Documentation"},{"id":"mapping-the-entities","title":"Mapping the Entities"}]},{"id":"operations","title":"Operations","anchors":[{"id":"enabling-and-disabling-operations","title":"Enabling and Disabling Operations"},{"id":"configuring-operations","title":"Configuring Operations"},{"id":"subresources","title":"Subresources","anchors":[{"id":"control-the-path-of-subresources","title":"Control the Path of Subresources"},{"id":"control-the-depth-of-subresources","title":"Control the Depth of Subresources"}]},{"id":"creating-custom-operations-and-controllers","title":"Creating Custom Operations and Controllers"}]},{"id":"filters","title":"Filters","anchors":[{"id":"doctrine-orm-filters","title":"Doctrine ORM Filters","anchors":[{"id":"search-filter","title":"Search Filter"},{"id":"date-filter","title":"Date Filter","anchors":[{"id":"managing-null-values","title":"Managing null Values"}]},{"id":"boolean-filter","title":"Boolean Filter"},{"id":"numeric-filter","title":"Numeric Filter"},{"id":"range-filter","title":"Range Filter"},{"id":"order-filter","title":"Order Filter","anchors":[{"id":"comparing-with-null-values","title":"Comparing with Null Values"},{"id":"using-a-custom-order-query-parameter-name","title":"Using a Custom Order Query Parameter Name"}]},{"id":"filtering-on-nested-properties","title":"Filtering on Nested Properties"},{"id":"enabling-a-filter-for-all-properties-of-a-resource","title":"Enabling a Filter for All Properties of a Resource"}]},{"id":"serializer-filters","title":"Serializer Filters","anchors":[{"id":"group-filter","title":"Group Filter"},{"id":"property-filter","title":"Property filter"}]},{"id":"creating-custom-filters","title":"Creating Custom Filters","anchors":[{"id":"creating-custom-doctrine-orm-filters","title":"Creating Custom Doctrine ORM Filters"},{"id":"overriding-extraction-of-properties-from-the-request","title":"Overriding Extraction of Properties from the Request"}]}]},{"id":"serialization","title":"The Serialization Process","anchors":[{"id":"overall-process","title":"Overall Process"},{"id":"available-serializers","title":"Available Serializers"},{"id":"the-serialization-context-groups-and-relations","title":"The Serialization Context, Groups and Relations","anchors":[{"id":"configuration","title":"Configuration"}]},{"id":"using-serialization-groups","title":"Using Serialization Groups"},{"id":"using-different-serialization-groups-per-operation","title":"Using Different Serialization Groups per Operation","anchors":[{"id":"embedding-relations","title":"Embedding Relations"},{"id":"normalization","title":"Normalization"},{"id":"denormalization","title":"Denormalization"}]},{"id":"changing-the-serialization-context-dynamically","title":"Changing the Serialization Context Dynamically"},{"id":"name-conversion","title":"Name Conversion"},{"id":"decorating-a-serializer-and-add-extra-data","title":"Decorating a Serializer and Add Extra Data"},{"id":"entity-identifier-case","title":"Entity Identifier Case"},{"id":"embedding-the-json-ld-context","title":"Embedding the JSON-LD Context"}]},{"id":"validation","title":"Validation","anchors":[{"id":"using-validation-groups","title":"Using Validation Groups"},{"id":"dynamic-validation-groups","title":"Dynamic Validation Groups"}]},{"id":"security","title":"Security"},{"id":"data-providers","title":"Data Providers","anchors":[{"id":"custom-collection-data-provider","title":"Custom Collection Data Provider"},{"id":"custom-item-data-provider","title":"Custom Item Data Provider"}]},{"id":"pagination","title":"Pagination","anchors":[{"id":"disabling-the-pagination","title":"Disabling the Pagination","anchors":[{"id":"globally","title":"Globally"},{"id":"for-a-specific-resource","title":"For a Specific Resource"},{"id":"client-side","title":"Client-side","anchors":[{"id":"globally","title":"Globally"},{"id":"for-a-specific-resource","title":"For a specific resource"}]}]},{"id":"changing-the-number-of-items-per-page","title":"Changing the Number of Items per Page","anchors":[{"id":"globally","title":"Globally"},{"id":"for-a-specific-resource","title":"For a Specific Resource"},{"id":"client-side","title":"Client-side","anchors":[{"id":"globally","title":"Globally"},{"id":"for-a-specific-resource","title":"For a Specific Resource"}]}]}]},{"id":"events","title":"The Event System"},{"id":"content-negotiation","title":"Content Negotiation","anchors":[{"id":"enabling-several-formats","title":"Enabling Several Formats"},{"id":"registering-a-custom-serializer","title":"Registering a Custom Serializer"},{"id":"writing-a-custom-normalizer","title":"Writing a Custom Normalizer"}]},{"id":"performance","title":"Performance","anchors":[{"id":"enabling-the-builtin-http-cache-invalidation-system","title":"Enabling the Builtin HTTP Cache Invalidation System"},{"id":"enabling-the-metadata-cache","title":"Enabling the Metadata Cache"},{"id":"using-ppm-php-pm","title":"Using PPM (PHP-PM)"},{"id":"doctrine-queries-and-indexes","title":"Doctrine Queries and Indexes","anchors":[{"id":"search-filter","title":"Search Filter"},{"id":"eager-loading","title":"Eager loading","anchors":[{"id":"max-joins","title":"Max joins"},{"id":"force-eager","title":"Force eager"},{"id":"override-at-resource-and-operation-level","title":"Override at resource and operation level"},{"id":"disable-eager-loading","title":"Disable eager loading"}]}]}]},{"id":"extensions","title":"Extensions","anchors":[{"id":"custom-extension","title":"Custom Extension"},{"id":"example","title":"Example","anchors":[{"id":"blocking-anonymous-users","title":"Blocking Anonymous Users"}]}]},{"id":"swagger","title":"Swagger / Open API Support","anchors":[{"id":"overriding-the-swagger-documentation","title":"Overriding the Swagger Documentation"},{"id":"using-the-swagger-context","title":"Using the Swagger Context"},{"id":"changing-the-swagger-ui-location","title":"Changing the Swagger UI Location","anchors":[{"id":"disabling-swagger-ui","title":"Disabling Swagger UI"},{"id":"manually-registering-the-swagger-ui-controller","title":"Manually Registering the Swagger UI Controller"},{"id":"enable-swagger-doc-for-api-gateway","title":"Enable Swagger doc for API Gateway"}]}]},{"id":"default-order","title":"Overriding Default Order"},{"id":"external-vocabularies","title":"Using External Vocabularies"},{"id":"operation-path-naming","title":"Operation Path Naming","anchors":[{"id":"configuration","title":"Configuration"},{"id":"create-a-custom-operation-path-resolver","title":"Create a Custom Operation Path Resolver","anchors":[{"id":"defining-the-operation-path-resolver","title":"Defining the Operation Path Resolver"},{"id":"registering-the-service","title":"Registering the Service"},{"id":"configure-it","title":"Configure It"}]}]},{"id":"extending-jsonld-context","title":"Extending JSON-LD context"},{"id":"form-data","title":"Accept application/x-www-form-urlencoded Form Data","anchors":[{"id":"create-your-deserializelistener-decorator","title":"Create your DeserializeListener Decorator"},{"id":"create-the-service-definition","title":"Create the Service Definition"},{"id":"cleanup-the-original-listener","title":"Cleanup the Original Listener"}]},{"id":"jwt","title":"JWT Authentication"},{"id":"angularjs-integration","title":"AngularJS Integration","anchors":[{"id":"restangular","title":"Restangular"},{"id":"ng-admin","title":"ng-admin"}]},{"id":"fosuser-bundle","title":"FOSUserBundle Integration","anchors":[{"id":"installing-the-bundle","title":"Installing the Bundle"},{"id":"enabling-the-bridge","title":"Enabling the Bridge"},{"id":"creating-a-user-entity-with-serialization-groups","title":"Creating a User Entity with Serialization Groups"}]},{"id":"nelmio-api-doc","title":"NelmioApiDocBundle Integration"},{"id":"configuration","title":"Configuration"}]},{"title":"The Schema Generator Component","path":"schema-generator","items":[{"id":"index","title":"The schema generator","anchors":[{"id":"what-is-schemaorg","title":"What is Schema.org?"},{"id":"why-use-schemaorg-data-to-generate-a-php-model","title":"Why use Schema.org data to generate a PHP model?","anchors":[{"id":"dont-reinvent-the-wheel","title":"Don't Reinvent The Wheel"},{"id":"improve-seo-and-user-experience","title":"Improve SEO and user experience"},{"id":"be-ready-for-the-future","title":"Be ready for the future"}]},{"id":"documentation","title":"Documentation"}]},{"id":"getting-started","title":"Getting Started","anchors":[{"id":"installation","title":"Installation"},{"id":"model-scaffolding","title":"Model scaffolding","anchors":[{"id":"going-further","title":"Going further"}]},{"id":"cardinality-extraction","title":"Cardinality extraction"}]},{"id":"configuration","title":"Configuration","anchors":[{"id":"customizing-php-namespaces","title":"Customizing PHP Namespaces"},{"id":"forcing-a-field-range","title":"Forcing a Field Range"},{"id":"forcing-a-field-cardinality","title":"Forcing a Field Cardinality"},{"id":"forcing-a-relation-table-name","title":"Forcing a Relation Table Name"},{"id":"forcing-or-disabling-a-class-parent","title":"Forcing (or Disabling) a Class Parent"},{"id":"forcing-a-class-to-be-abstract","title":"Forcing a Class to be Abstract"},{"id":"forcing-a-nullable-property","title":"Forcing a Nullable Property"},{"id":"forcing-a-unique-property","title":"Forcing a Unique Property"},{"id":"making-a-property-read-only","title":"Making a Property Read Only"},{"id":"making-a-property-write-only","title":"Making a Property Write Only"},{"id":"forcing-a-property-to-be-in-a-serialization-group","title":"Forcing a Property to be in a Serialization Group"},{"id":"forcing-an-embeddable-class-to-be-embedded","title":"Forcing an Embeddable Class to be Embedded"},{"id":"author-phpdoc","title":"Author PHPDoc"},{"id":"disabling-generators-and-creating-custom-ones","title":"Disabling Generators and Creating Custom Ones"},{"id":"skipping-accessor-method-generation","title":"Skipping Accessor Method Generation"},{"id":"disabling-the-id-generator","title":"Disabling the id Generator"},{"id":"generating-uuids","title":"Generating UUIDs"},{"id":"user-submitted-uuids","title":"User submitted UUIDs"},{"id":"generating-custom-ids","title":"Generating Custom IDs"},{"id":"disabling-usage-of-doctrine-collection","title":"Disabling Usage of Doctrine Collection"},{"id":"changing-the-field-visibility","title":"Changing the Field Visibility"},{"id":"generating-asserttype-annotations","title":"Generating @Assert\\Type Annotations"},{"id":"forcing-doctrine-inheritance-mapping-annotation","title":"Forcing Doctrine Inheritance Mapping Annotation"},{"id":"interfaces-and-doctrine-resolve-target-entity-listener","title":"Interfaces and Doctrine Resolve Target Entity Listener"},{"id":"custom-schemas","title":"Custom Schemas"},{"id":"checking-goodrelation-compatibility","title":"Checking GoodRelation Compatibility"},{"id":"php-file-header","title":"PHP File Header"},{"id":"full-configuration-reference","title":"Full Configuration Reference"}]}]},{"title":"The Admin Component","path":"admin","items":[{"id":"index","title":"The API Platform Admin","anchors":[{"id":"features","title":"Features"}]},{"id":"getting-started","title":"Getting Started","anchors":[{"id":"installation","title":"Installation"},{"id":"creating-the-admin","title":"Creating the Admin"},{"id":"customizing-the-admin","title":"Customizing the Admin","anchors":[{"id":"using-custom-components","title":"Using Custom Components"},{"id":"managing-files-and-images","title":"Managing Files and Images"},{"id":"using-a-custom-validation-function-or-inject-custom-props","title":"Using a Custom Validation Function or Inject Custom Props"}]}]},{"id":"authentication-support","title":"Authentication Support"},{"id":"handling-relations-to-collections","title":"Handling Relations to Collections","anchors":[{"id":"using-an-autocomplete-input-for-relations","title":"Using an Autocomplete Input for Relations"}]}]},{"title":"The Client Generator Component","path":"client-generator","items":[{"id":"index","title":"The API Platform Client Generator","anchors":[{"id":"features","title":"Features"}]},{"id":"react","title":"React generator"},{"id":"vuejs","title":"Vue.js generator"},{"id":"troubleshooting","title":"Troubleshooting"}]},{"title":"Deployment","path":"deployment","items":[{"id":"index","title":"Deploying API Platform Applications"},{"id":"docker","title":"Using API Platform with Docker","anchors":[{"id":"services","title":"Services"},{"id":"installation","title":"Installation"}]},{"id":"heroku","title":"Deploying an API Platform App on Heroku"}]},{"title":"Extra","path":"extra","items":[{"id":"philosophy","title":"API Platform's Philosophy"},{"id":"troubleshooting","title":"Troubleshooting","anchors":[{"id":"using-docker","title":"Using Docker","anchors":[{"id":"with-docker-toolbox-on-windows","title":"With Docker Toolbox on Windows"},{"id":"error-starting-userland-proxy","title":"Error starting userland proxy"}]},{"id":"using-api-platform-and-jms-serializer-in-the-same-project","title":"Using API Platform and JMS Serializer in the same project"}]},{"id":"contribution-guides","title":"Contribution guides"},{"id":"conduct","title":"Contributor Code of Conduct","anchors":[{"id":"our-pledge","title":"Our Pledge"},{"id":"our-standards","title":"Our Standards"},{"id":"our-responsibilities","title":"Our Responsibilities"},{"id":"scope","title":"Scope"},{"id":"enforcement","title":"Enforcement"},{"id":"attribution","title":"Attribution"}]}]}]},"next":{"slug":"/docs/v2.1/core/operations/","title":"Operations"},"prefixedVersion":"v2.1","previous":{"slug":"/docs/v2.1/core/","title":"The API Platform Core Library"},"title":"Getting started","urlEditDocumentation":"https://github.com/api-platform/docs/edit/2.1/core/getting-started.md","version":"v2.1/"}}}