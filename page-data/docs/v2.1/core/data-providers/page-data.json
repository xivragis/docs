{"componentChunkName":"component---src-templates-doc-js","path":"/docs/v2.1/core/data-providers/","result":{"pageContext":{"html":"<h1 id=\"data-providers\" style=\"position:relative;\"><a href=\"#data-providers\" aria-label=\"data providers permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Data Providers</h1>\n<p>To retrieve data exposed by the API, API Platform uses classes called <strong>data providers</strong>. A data provider using <a href=\"http://www.doctrine-project.org/projects/orm.html\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Doctrine\nORM</a> to retrieve data from a database is included with the library and\nis enabled by default. This data provider natively supports paged collections and filters. It can be used as is and fits\nperfectly with common usages.</p>\n<p>However, you sometime want to retrieve data from other sources such as another persistence layer, a webservice, ElasticSearch\nor MongoDB.\nCustom data providers can be used to do so. A project can include as many data providers as it needs. The first able to\nretrieve data for a given resource will be used.</p>\n<p>For a given resource, you can implement two kind of interfaces:</p>\n<ul>\n<li>the <a href=\"https://github.com/api-platform/core/blob/master/src/DataProvider/CollectionDataProviderInterface.php\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"><code class=\"language-text\">CollectionDataProviderInterface</code></a>\nis used when fetching a collection.</li>\n<li>the <a href=\"https://github.com/api-platform/core/blob/master/src/DataProvider/ItemDataProviderInterface.php\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"><code class=\"language-text\">ItemDataProviderInterface</code></a>\nis used when fetching items.</li>\n</ul>\n<p>In the following examples we will create custom data providers for an entity class called <code class=\"language-text\">AppBundle\\Entity\\BlogPost</code>.\nNote, that if your entity is not Doctrine-related, you need to flag the identifier property by using <code class=\"language-text\">@ApiProperty(identifier=true)</code> for things to work properly (see also <a href=\"/docs/v2.1/core/serialization/#entity-identifier-case\">Entity Identifier Case</a>).</p>\n<h2 id=\"custom-collection-data-provider\" style=\"position:relative;\"><a href=\"#custom-collection-data-provider\" aria-label=\"custom collection data provider permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Custom Collection Data Provider</h2>\n<p>First, your <code class=\"language-text\">BlogPostCollectionDataProvider</code> has to implement the <a href=\"https://github.com/api-platform/core/blob/master/src/DataProvider/CollectionDataProviderInterface.php\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"><code class=\"language-text\">CollectionDataProviderInterface</code></a>:</p>\n<p>The <code class=\"language-text\">getCollection</code> method must return an <code class=\"language-text\">array</code>, a <code class=\"language-text\">Traversable</code> or a <a href=\"https://github.com/api-platform/core/blob/master/src/DataProvider/PaginatorInterface.php\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"><code class=\"language-text\">ApiPlatform\\Core\\DataProvider\\PaginatorInterface</code></a> instance.\nIf no data is available, you should return an empty array.</p>\n<div class=\"gatsby-highlight\" data-language=\"php\"><pre class=\"language-php\"><code class=\"language-php\"><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span>\n<span class=\"token comment\">// src/AppBundle/DataProvider/BlogPostCollectionDataProvider.php</span>\n\n<span class=\"token keyword\">namespace</span> <span class=\"token package\">AppBundle<span class=\"token punctuation\">\\</span>DataProvider</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">use</span> <span class=\"token package\">AppBundle<span class=\"token punctuation\">\\</span>Entity<span class=\"token punctuation\">\\</span>BlogPost</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">use</span> <span class=\"token package\">ApiPlatform<span class=\"token punctuation\">\\</span>Core<span class=\"token punctuation\">\\</span>DataProvider<span class=\"token punctuation\">\\</span>CollectionDataProviderInterface</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">use</span> <span class=\"token package\">ApiPlatform<span class=\"token punctuation\">\\</span>Core<span class=\"token punctuation\">\\</span>Exception<span class=\"token punctuation\">\\</span>ResourceClassNotSupportedException</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">final</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">BlogPostCollectionDataProvider</span> <span class=\"token keyword\">implements</span> <span class=\"token class-name\">CollectionDataProviderInterface</span>\n<span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">function</span> <span class=\"token function\">getCollection</span><span class=\"token punctuation\">(</span>string <span class=\"token variable\">$resourceClass</span><span class=\"token punctuation\">,</span> string <span class=\"token variable\">$operationName</span> <span class=\"token operator\">=</span> <span class=\"token constant\">null</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>BlogPost<span class=\"token punctuation\">:</span><span class=\"token punctuation\">:</span><span class=\"token keyword\">class</span> <span class=\"token operator\">!==</span> <span class=\"token variable\">$resourceClass</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token keyword\">throw</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">ResourceClassNotSupportedException</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n\n        <span class=\"token comment\">// Retrieve the blog post collection from somewhere</span>\n        <span class=\"token keyword\">return</span> <span class=\"token punctuation\">[</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">BlogPost</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">BlogPost</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></span></code></pre></div>\n<p>Then declare a Symfony service, for example:</p>\n<div class=\"gatsby-highlight\" data-language=\"yaml\"><pre class=\"language-yaml\"><code class=\"language-yaml\"><span class=\"token comment\"># app/config/services.yml</span>\n\n<span class=\"token key atrule\">services</span><span class=\"token punctuation\">:</span>\n\n    <span class=\"token comment\"># ...</span>\n\n    <span class=\"token key atrule\">'AppBundle\\DataProvider\\BlogPostCollectionDataProvider'</span><span class=\"token punctuation\">:</span>\n        <span class=\"token key atrule\">tags</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span> <span class=\"token punctuation\">{</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'api_platform.collection_data_provider'</span><span class=\"token punctuation\">,</span> <span class=\"token key atrule\">priority</span><span class=\"token punctuation\">:</span> <span class=\"token number\">2 </span><span class=\"token punctuation\">}</span> <span class=\"token punctuation\">]</span></code></pre></div>\n<p>Tagging the service with the tag <code class=\"language-text\">api_platform.collection_data_provider</code> will enable API Platform Core to automatically\nregister and use this data provider. The optional attribute <code class=\"language-text\">priority</code> allows to define the order in which the\ndata providers are called. The first data provider not throwing a <code class=\"language-text\">ApiPlatform\\Core\\Exception\\ResourceClassNotSupportedException</code>\nwill be used.</p>\n<h2 id=\"custom-item-data-provider\" style=\"position:relative;\"><a href=\"#custom-item-data-provider\" aria-label=\"custom item data provider permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Custom Item Data Provider</h2>\n<p>The process is similar for item data providers. Create a <code class=\"language-text\">BlogPostItemDataProvider</code> implementing the <a href=\"https://github.com/api-platform/core/blob/master/src/DataProvider/ItemDataProviderInterface.php\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"><code class=\"language-text\">ItemDataProviderInterface</code></a>\ninterface:</p>\n<p>The <code class=\"language-text\">getItem</code> method can return <code class=\"language-text\">null</code> if no result has been found.</p>\n<div class=\"gatsby-highlight\" data-language=\"php\"><pre class=\"language-php\"><code class=\"language-php\"><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span>\n<span class=\"token comment\">// src/AppBundle/DataProvider/BlogPostItemDataProvider.php</span>\n\n<span class=\"token keyword\">namespace</span> <span class=\"token package\">AppBundle<span class=\"token punctuation\">\\</span>DataProvider</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">use</span> <span class=\"token package\">AppBundle<span class=\"token punctuation\">\\</span>Entity<span class=\"token punctuation\">\\</span>BlogPost</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">use</span> <span class=\"token package\">ApiPlatform<span class=\"token punctuation\">\\</span>Core<span class=\"token punctuation\">\\</span>DataProvider<span class=\"token punctuation\">\\</span>ItemDataProviderInterface</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">use</span> <span class=\"token package\">ApiPlatform<span class=\"token punctuation\">\\</span>Core<span class=\"token punctuation\">\\</span>Exception<span class=\"token punctuation\">\\</span>ResourceClassNotSupportedException</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">final</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">BlogPostItemDataProvider</span> <span class=\"token keyword\">implements</span> <span class=\"token class-name\">ItemDataProviderInterface</span>\n<span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">function</span> <span class=\"token function\">getItem</span><span class=\"token punctuation\">(</span>string <span class=\"token variable\">$resourceClass</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$id</span><span class=\"token punctuation\">,</span> string <span class=\"token variable\">$operationName</span> <span class=\"token operator\">=</span> <span class=\"token constant\">null</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">array</span> <span class=\"token variable\">$context</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>    <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>BlogPost<span class=\"token punctuation\">:</span><span class=\"token punctuation\">:</span><span class=\"token keyword\">class</span> <span class=\"token operator\">!==</span> <span class=\"token variable\">$resourceClass</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n          <span class=\"token keyword\">throw</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">ResourceClassNotSupportedException</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n\n        <span class=\"token comment\">// Retrieve the blog post item from somewhere then return it or null if not found</span>\n        <span class=\"token keyword\">return</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">BlogPost</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$id</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></span></code></pre></div>\n<p>If service autowiring and autoconfiguration are enabled (it's the case by default), you are done!</p>\n<p>Otherwise, if you use a custom dependency injection configuration, you need to register the corresponding service and add the\n<code class=\"language-text\">api_platform.item_data_provider</code> tag to it. As for collection data providers, the <code class=\"language-text\">priority</code> attribute can be used to order\nproviders.</p>\n<div class=\"gatsby-highlight\" data-language=\"yaml\"><pre class=\"language-yaml\"><code class=\"language-yaml\"><span class=\"token comment\"># app/config/services.yml</span>\n\n<span class=\"token key atrule\">services</span><span class=\"token punctuation\">:</span>\n\n    <span class=\"token comment\"># ...</span>\n\n    <span class=\"token key atrule\">'AppBundle\\DataProvider\\BlogPostItemDataProvider'</span><span class=\"token punctuation\">:</span>\n        <span class=\"token key atrule\">tags</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span> <span class=\"token string\">'api_platform.item_data_provider'</span> <span class=\"token punctuation\">]</span></code></pre></div>","nav":{"chapters":[{"title":"The Distribution: Create Powerful APIs with Ease","path":"distribution","items":[{"id":"index","title":"Creating your First API with API Platform, in 5 Minutes","anchors":[{"id":"installing-the-framework","title":"Installing the framework","anchors":[{"id":"in-docker-containers","title":"In Docker Containers"},{"id":"via-composer","title":"Via Composer"}]},{"id":"its-ready","title":"It's ready!"},{"id":"creating-the-model","title":"Creating the model"},{"id":"validating-data","title":"Validating Data"},{"id":"going-client-side","title":"Going Client-Side"},{"id":"other-features","title":"Other Features"}]},{"id":"testing","title":"Testing and Specifying the API"}]},{"title":"The API Component","path":"core","items":[{"id":"index","title":"The API Platform Core Library","anchors":[{"id":"features","title":"Features"},{"id":"other-resources","title":"Other resources"}]},{"id":"getting-started","title":"Getting started","anchors":[{"id":"installing-api-platform-core","title":"Installing API Platform Core"},{"id":"before-reading-this-documentation","title":"Before Reading this Documentation"},{"id":"mapping-the-entities","title":"Mapping the Entities"}]},{"id":"operations","title":"Operations","anchors":[{"id":"enabling-and-disabling-operations","title":"Enabling and Disabling Operations"},{"id":"configuring-operations","title":"Configuring Operations"},{"id":"subresources","title":"Subresources","anchors":[{"id":"control-the-path-of-subresources","title":"Control the Path of Subresources"},{"id":"control-the-depth-of-subresources","title":"Control the Depth of Subresources"}]},{"id":"creating-custom-operations-and-controllers","title":"Creating Custom Operations and Controllers"}]},{"id":"filters","title":"Filters","anchors":[{"id":"doctrine-orm-filters","title":"Doctrine ORM Filters","anchors":[{"id":"search-filter","title":"Search Filter"},{"id":"date-filter","title":"Date Filter","anchors":[{"id":"managing-null-values","title":"Managing null Values"}]},{"id":"boolean-filter","title":"Boolean Filter"},{"id":"numeric-filter","title":"Numeric Filter"},{"id":"range-filter","title":"Range Filter"},{"id":"order-filter","title":"Order Filter","anchors":[{"id":"comparing-with-null-values","title":"Comparing with Null Values"},{"id":"using-a-custom-order-query-parameter-name","title":"Using a Custom Order Query Parameter Name"}]},{"id":"filtering-on-nested-properties","title":"Filtering on Nested Properties"},{"id":"enabling-a-filter-for-all-properties-of-a-resource","title":"Enabling a Filter for All Properties of a Resource"}]},{"id":"serializer-filters","title":"Serializer Filters","anchors":[{"id":"group-filter","title":"Group Filter"},{"id":"property-filter","title":"Property filter"}]},{"id":"creating-custom-filters","title":"Creating Custom Filters","anchors":[{"id":"creating-custom-doctrine-orm-filters","title":"Creating Custom Doctrine ORM Filters"},{"id":"overriding-extraction-of-properties-from-the-request","title":"Overriding Extraction of Properties from the Request"}]}]},{"id":"serialization","title":"The Serialization Process","anchors":[{"id":"overall-process","title":"Overall Process"},{"id":"available-serializers","title":"Available Serializers"},{"id":"the-serialization-context-groups-and-relations","title":"The Serialization Context, Groups and Relations","anchors":[{"id":"configuration","title":"Configuration"}]},{"id":"using-serialization-groups","title":"Using Serialization Groups"},{"id":"using-different-serialization-groups-per-operation","title":"Using Different Serialization Groups per Operation","anchors":[{"id":"embedding-relations","title":"Embedding Relations"},{"id":"normalization","title":"Normalization"},{"id":"denormalization","title":"Denormalization"}]},{"id":"changing-the-serialization-context-dynamically","title":"Changing the Serialization Context Dynamically"},{"id":"name-conversion","title":"Name Conversion"},{"id":"decorating-a-serializer-and-add-extra-data","title":"Decorating a Serializer and Add Extra Data"},{"id":"entity-identifier-case","title":"Entity Identifier Case"},{"id":"embedding-the-json-ld-context","title":"Embedding the JSON-LD Context"}]},{"id":"validation","title":"Validation","anchors":[{"id":"using-validation-groups","title":"Using Validation Groups"},{"id":"dynamic-validation-groups","title":"Dynamic Validation Groups"}]},{"id":"security","title":"Security"},{"id":"data-providers","title":"Data Providers","anchors":[{"id":"custom-collection-data-provider","title":"Custom Collection Data Provider"},{"id":"custom-item-data-provider","title":"Custom Item Data Provider"}]},{"id":"pagination","title":"Pagination","anchors":[{"id":"disabling-the-pagination","title":"Disabling the Pagination","anchors":[{"id":"globally","title":"Globally"},{"id":"for-a-specific-resource","title":"For a Specific Resource"},{"id":"client-side","title":"Client-side","anchors":[{"id":"globally","title":"Globally"},{"id":"for-a-specific-resource","title":"For a specific resource"}]}]},{"id":"changing-the-number-of-items-per-page","title":"Changing the Number of Items per Page","anchors":[{"id":"globally","title":"Globally"},{"id":"for-a-specific-resource","title":"For a Specific Resource"},{"id":"client-side","title":"Client-side","anchors":[{"id":"globally","title":"Globally"},{"id":"for-a-specific-resource","title":"For a Specific Resource"}]}]}]},{"id":"events","title":"The Event System"},{"id":"content-negotiation","title":"Content Negotiation","anchors":[{"id":"enabling-several-formats","title":"Enabling Several Formats"},{"id":"registering-a-custom-serializer","title":"Registering a Custom Serializer"},{"id":"writing-a-custom-normalizer","title":"Writing a Custom Normalizer"}]},{"id":"performance","title":"Performance","anchors":[{"id":"enabling-the-builtin-http-cache-invalidation-system","title":"Enabling the Builtin HTTP Cache Invalidation System"},{"id":"enabling-the-metadata-cache","title":"Enabling the Metadata Cache"},{"id":"using-ppm-php-pm","title":"Using PPM (PHP-PM)"},{"id":"doctrine-queries-and-indexes","title":"Doctrine Queries and Indexes","anchors":[{"id":"search-filter","title":"Search Filter"},{"id":"eager-loading","title":"Eager loading","anchors":[{"id":"max-joins","title":"Max joins"},{"id":"force-eager","title":"Force eager"},{"id":"override-at-resource-and-operation-level","title":"Override at resource and operation level"},{"id":"disable-eager-loading","title":"Disable eager loading"}]}]}]},{"id":"extensions","title":"Extensions","anchors":[{"id":"custom-extension","title":"Custom Extension"},{"id":"example","title":"Example","anchors":[{"id":"blocking-anonymous-users","title":"Blocking Anonymous Users"}]}]},{"id":"swagger","title":"Swagger / Open API Support","anchors":[{"id":"overriding-the-swagger-documentation","title":"Overriding the Swagger Documentation"},{"id":"using-the-swagger-context","title":"Using the Swagger Context"},{"id":"changing-the-swagger-ui-location","title":"Changing the Swagger UI Location","anchors":[{"id":"disabling-swagger-ui","title":"Disabling Swagger UI"},{"id":"manually-registering-the-swagger-ui-controller","title":"Manually Registering the Swagger UI Controller"},{"id":"enable-swagger-doc-for-api-gateway","title":"Enable Swagger doc for API Gateway"}]}]},{"id":"default-order","title":"Overriding Default Order"},{"id":"external-vocabularies","title":"Using External Vocabularies"},{"id":"operation-path-naming","title":"Operation Path Naming","anchors":[{"id":"configuration","title":"Configuration"},{"id":"create-a-custom-operation-path-resolver","title":"Create a Custom Operation Path Resolver","anchors":[{"id":"defining-the-operation-path-resolver","title":"Defining the Operation Path Resolver"},{"id":"registering-the-service","title":"Registering the Service"},{"id":"configure-it","title":"Configure It"}]}]},{"id":"extending-jsonld-context","title":"Extending JSON-LD context"},{"id":"form-data","title":"Accept application/x-www-form-urlencoded Form Data","anchors":[{"id":"create-your-deserializelistener-decorator","title":"Create your DeserializeListener Decorator"},{"id":"create-the-service-definition","title":"Create the Service Definition"},{"id":"cleanup-the-original-listener","title":"Cleanup the Original Listener"}]},{"id":"jwt","title":"JWT Authentication"},{"id":"angularjs-integration","title":"AngularJS Integration","anchors":[{"id":"restangular","title":"Restangular"},{"id":"ng-admin","title":"ng-admin"}]},{"id":"fosuser-bundle","title":"FOSUserBundle Integration","anchors":[{"id":"installing-the-bundle","title":"Installing the Bundle"},{"id":"enabling-the-bridge","title":"Enabling the Bridge"},{"id":"creating-a-user-entity-with-serialization-groups","title":"Creating a User Entity with Serialization Groups"}]},{"id":"nelmio-api-doc","title":"NelmioApiDocBundle Integration"},{"id":"configuration","title":"Configuration"}]},{"title":"The Schema Generator Component","path":"schema-generator","items":[{"id":"index","title":"The schema generator","anchors":[{"id":"what-is-schemaorg","title":"What is Schema.org?"},{"id":"why-use-schemaorg-data-to-generate-a-php-model","title":"Why use Schema.org data to generate a PHP model?","anchors":[{"id":"dont-reinvent-the-wheel","title":"Don't Reinvent The Wheel"},{"id":"improve-seo-and-user-experience","title":"Improve SEO and user experience"},{"id":"be-ready-for-the-future","title":"Be ready for the future"}]},{"id":"documentation","title":"Documentation"}]},{"id":"getting-started","title":"Getting Started","anchors":[{"id":"installation","title":"Installation"},{"id":"model-scaffolding","title":"Model scaffolding","anchors":[{"id":"going-further","title":"Going further"}]},{"id":"cardinality-extraction","title":"Cardinality extraction"}]},{"id":"configuration","title":"Configuration","anchors":[{"id":"customizing-php-namespaces","title":"Customizing PHP Namespaces"},{"id":"forcing-a-field-range","title":"Forcing a Field Range"},{"id":"forcing-a-field-cardinality","title":"Forcing a Field Cardinality"},{"id":"forcing-a-relation-table-name","title":"Forcing a Relation Table Name"},{"id":"forcing-or-disabling-a-class-parent","title":"Forcing (or Disabling) a Class Parent"},{"id":"forcing-a-class-to-be-abstract","title":"Forcing a Class to be Abstract"},{"id":"forcing-a-nullable-property","title":"Forcing a Nullable Property"},{"id":"forcing-a-unique-property","title":"Forcing a Unique Property"},{"id":"making-a-property-read-only","title":"Making a Property Read Only"},{"id":"making-a-property-write-only","title":"Making a Property Write Only"},{"id":"forcing-a-property-to-be-in-a-serialization-group","title":"Forcing a Property to be in a Serialization Group"},{"id":"forcing-an-embeddable-class-to-be-embedded","title":"Forcing an Embeddable Class to be Embedded"},{"id":"author-phpdoc","title":"Author PHPDoc"},{"id":"disabling-generators-and-creating-custom-ones","title":"Disabling Generators and Creating Custom Ones"},{"id":"skipping-accessor-method-generation","title":"Skipping Accessor Method Generation"},{"id":"disabling-the-id-generator","title":"Disabling the id Generator"},{"id":"generating-uuids","title":"Generating UUIDs"},{"id":"user-submitted-uuids","title":"User submitted UUIDs"},{"id":"generating-custom-ids","title":"Generating Custom IDs"},{"id":"disabling-usage-of-doctrine-collection","title":"Disabling Usage of Doctrine Collection"},{"id":"changing-the-field-visibility","title":"Changing the Field Visibility"},{"id":"generating-asserttype-annotations","title":"Generating @Assert\\Type Annotations"},{"id":"forcing-doctrine-inheritance-mapping-annotation","title":"Forcing Doctrine Inheritance Mapping Annotation"},{"id":"interfaces-and-doctrine-resolve-target-entity-listener","title":"Interfaces and Doctrine Resolve Target Entity Listener"},{"id":"custom-schemas","title":"Custom Schemas"},{"id":"checking-goodrelation-compatibility","title":"Checking GoodRelation Compatibility"},{"id":"php-file-header","title":"PHP File Header"},{"id":"full-configuration-reference","title":"Full Configuration Reference"}]}]},{"title":"The Admin Component","path":"admin","items":[{"id":"index","title":"The API Platform Admin","anchors":[{"id":"features","title":"Features"}]},{"id":"getting-started","title":"Getting Started","anchors":[{"id":"installation","title":"Installation"},{"id":"creating-the-admin","title":"Creating the Admin"},{"id":"customizing-the-admin","title":"Customizing the Admin","anchors":[{"id":"using-custom-components","title":"Using Custom Components"},{"id":"managing-files-and-images","title":"Managing Files and Images"},{"id":"using-a-custom-validation-function-or-inject-custom-props","title":"Using a Custom Validation Function or Inject Custom Props"}]}]},{"id":"authentication-support","title":"Authentication Support"},{"id":"handling-relations-to-collections","title":"Handling Relations to Collections","anchors":[{"id":"using-an-autocomplete-input-for-relations","title":"Using an Autocomplete Input for Relations"}]}]},{"title":"The Client Generator Component","path":"client-generator","items":[{"id":"index","title":"The API Platform Client Generator","anchors":[{"id":"features","title":"Features"}]},{"id":"react","title":"React generator"},{"id":"vuejs","title":"Vue.js generator"},{"id":"troubleshooting","title":"Troubleshooting"}]},{"title":"Deployment","path":"deployment","items":[{"id":"index","title":"Deploying API Platform Applications"},{"id":"docker","title":"Using API Platform with Docker","anchors":[{"id":"services","title":"Services"},{"id":"installation","title":"Installation"}]},{"id":"heroku","title":"Deploying an API Platform App on Heroku"}]},{"title":"Extra","path":"extra","items":[{"id":"philosophy","title":"API Platform's Philosophy"},{"id":"troubleshooting","title":"Troubleshooting","anchors":[{"id":"using-docker","title":"Using Docker","anchors":[{"id":"with-docker-toolbox-on-windows","title":"With Docker Toolbox on Windows"},{"id":"error-starting-userland-proxy","title":"Error starting userland proxy"}]},{"id":"using-api-platform-and-jms-serializer-in-the-same-project","title":"Using API Platform and JMS Serializer in the same project"}]},{"id":"contribution-guides","title":"Contribution guides"},{"id":"conduct","title":"Contributor Code of Conduct","anchors":[{"id":"our-pledge","title":"Our Pledge"},{"id":"our-standards","title":"Our Standards"},{"id":"our-responsibilities","title":"Our Responsibilities"},{"id":"scope","title":"Scope"},{"id":"enforcement","title":"Enforcement"},{"id":"attribution","title":"Attribution"}]}]}]},"next":{"slug":"/docs/v2.1/core/pagination/","title":"Pagination"},"prefixedVersion":"v2.1","previous":{"slug":"/docs/v2.1/core/security/","title":"Security"},"title":"Data Providers","urlEditDocumentation":"https://github.com/api-platform/docs/edit/2.1/core/data-providers.md","version":"v2.1/"}}}