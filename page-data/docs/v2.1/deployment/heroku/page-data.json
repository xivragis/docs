{"componentChunkName":"component---src-templates-doc-js","path":"/docs/v2.1/deployment/heroku/","result":{"pageContext":{"html":"<h1 id=\"deploying-an-api-platform-app-on-heroku\" style=\"position:relative;\"><a href=\"#deploying-an-api-platform-app-on-heroku\" aria-label=\"deploying an api platform app on heroku permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Deploying an API Platform App on Heroku</h1>\n<p><a href=\"http://heroku.com\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Heroku</a> is a popular, fast, scalable and reliable <em>Platform As A Service</em> (PaaS). As Heroku offers a\nfree plan including database support through <a href=\"https://www.heroku.com/postgres\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Heroku Postgres</a>, it's\na convenient way to experiment with the API Platform.</p>\n<p>The API Platform Heroku integration also supports MySQL databases provided by <a href=\"https://addons.heroku.com/cleardb\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">the ClearDB add-on</a>.</p>\n<p>Deploying API Platform applications on Heroku is straightforward and you will learn how to do it in this tutorial.</p>\n<p><em>Note: this tutorial works perfectly well with API Platform but also with any Symfony application based on the Symfony Standard\nEdition.</em></p>\n<p>If you don't already have one, <a href=\"https://signup.heroku.com/signup/dc\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">create an account on Heroku</a>. Then install <a href=\"https://devcenter.heroku.com/articles/getting-started-with-php#local-workstation-setup\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">the Heroku\ntoolbelt</a>. We guess you already\nhave a working install of <a href=\"http://getcomposer.org\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Composer</a>, perfect, we will need it.</p>\n<p>Create a new API Platform project as usual:</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">composer create-project api-platform/api-platform</code></pre></div>\n<p>Go to the created directory. Then install the API Heroku integration library created by the API Platform team. It we will ease the deployment.\nInstall it:</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">composer require dunglas/api-platform-heroku</code></pre></div>\n<p>Heroku relies on <a href=\"https://devcenter.heroku.com/articles/config-vars\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">environment variables</a> for its configuration. Regardless of what provider you\nchoose for hosting your application, using environment variables to configure your production environment is a best practice.\nSo we will configure the library we just installed and remove the Incenteev Parameter Handler library that was bundled with\nAPI Platform. Parameter Handler generated the <code class=\"language-text\">app/config/parameters.yml</code> file during the installation process.</p>\n<p>Open the <code class=\"language-text\">composer.json</code> file and remove the following line from the  <code class=\"language-text\">require</code> section:</p>\n<div class=\"gatsby-highlight\" data-language=\"json\"><pre class=\"language-json\"><code class=\"language-json\"><span class=\"token property\">\"incenteev/composer-parameter-handler\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"~2.0\"</span><span class=\"token punctuation\">,</span></code></pre></div>\n<p>Then remove the following script call from the <code class=\"language-text\">post-install-cmd</code> and <code class=\"language-text\">post-update-cmd</code> sections:</p>\n<div class=\"gatsby-highlight\" data-language=\"json\"><pre class=\"language-json\"><code class=\"language-json\"><span class=\"token string\">\"Incenteev\\\\ParameterHandler\\\\ScriptHandler::buildParameters\"</span><span class=\"token punctuation\">,</span></code></pre></div>\n<p>Then we must register the Composer script provided by the library we installed in the <code class=\"language-text\">scripts</code> section of the <code class=\"language-text\">composer.json</code>\nfile:</p>\n<div class=\"gatsby-highlight\" data-language=\"json\"><pre class=\"language-json\"><code class=\"language-json\">    <span class=\"token property\">\"scripts\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token property\">\"pre-install-cmd\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\n          <span class=\"token string\">\"Dunglas\\\\Heroku\\\\Database::createParameters\"</span>\n        <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n        <span class=\"token property\">\"_\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"...\"</span>\n    <span class=\"token punctuation\">}</span></code></pre></div>\n<p>Delete <code class=\"language-text\">app/config/parameters.yml</code> and <code class=\"language-text\">app/config/parameters.yml.dist</code> as they will not be used anymore. Then remove the following line from the <code class=\"language-text\">imports</code> section of <code class=\"language-text\">app/config/config.yml</code>:</p>\n<div class=\"gatsby-highlight\" data-language=\"yaml\"><pre class=\"language-yaml\"><code class=\"language-yaml\">    <span class=\"token punctuation\">-</span> <span class=\"token punctuation\">{</span> <span class=\"token key atrule\">resource</span><span class=\"token punctuation\">:</span> parameters.yml <span class=\"token punctuation\">}</span></code></pre></div>\n<p>We will now create the Heroku <code class=\"language-text\">app.json</code> file at the root of the application directory to set the parameters of our application\nusing the external parameters feature of the Symfony container:</p>\n<div class=\"gatsby-highlight\" data-language=\"json\"><pre class=\"language-json\"><code class=\"language-json\"><span class=\"token punctuation\">{</span>\n  <span class=\"token property\">\"success_url\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"/\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"env\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">\"SYMFONY_ENV\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"prod\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"SYMFONY__DATABASE_DRIVER\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"pdo_pgsql\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"SYMFONY__MAILER_TRANSPORT\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"smtp\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"SYMFONY__MAILER_HOST\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"your-mailer.com\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"SYMFONY__MAILER_USER\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"your-mailer-username\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"SYMFONY__MAILER_PASSWORD\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"your-mailer-password\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"SYMFONY__CORS_ALLOW_ORIGIN\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"https://your-client-url.com\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"SYMFONY__LOCALE\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"en\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"SYMFONY__SECRET\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token property\">\"generator\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"secret\"</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"addons\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\n    <span class=\"token string\">\"heroku-postgresql\"</span>\n  <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"buildpacks\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\n    <span class=\"token punctuation\">{</span>\n      <span class=\"token property\">\"url\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"https://github.com/heroku/heroku-buildpack-php\"</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">]</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>The file also tells the Heroku deployment system to build a PHP container and to add the Postgres add-on.</p>\n<p>If you also want to run your app locally or on another hosting provider, don't forget to set those environment variables\nand another one called <code class=\"language-text\">DATABASE_URL</code> containing your database <a href=\"https://en.wikipedia.org/wiki/Data_source_name\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">DSN</a>.\nA convenient way to manage environment variables is the <a href=\"https://github.com/vlucas/phpdotenv\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">PHP dotenv</a> library.</p>\n<p>We are almost done, but API Platform (and Symfony) has a particular directory structure which requires further configuration. We must tell Heroku that the document root is <code class=\"language-text\">web/</code>, and that all other\ndirectories must be private.</p>\n<p>Create a new file named <code class=\"language-text\">Procfile</code> at the root of the application directory with the following content:</p>\n<div class=\"gatsby-highlight\" data-language=\"yaml\"><pre class=\"language-yaml\"><code class=\"language-yaml\"><span class=\"token key atrule\">web</span><span class=\"token punctuation\">:</span> bin/heroku<span class=\"token punctuation\">-</span>php<span class=\"token punctuation\">-</span>apache2 web/</code></pre></div>\n<p>Our application is ready to be deployed, but Heroku dynos are not persistent and file stored directly on the filesystem\nwill be lost. It's problematic for our logs.</p>\n<p>Note: if you want to store files permanently, use a persistent file storage service such as Amazon S3.</p>\n<p>Heroku provides another free service, <a href=\"https://devcenter.heroku.com/articles/logplex\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Logplex</a>, which allows us to centralize and\npersist applications logs. To use it we need to configure Monolog to output logs to <code class=\"language-text\">STDERR</code> instead of to a file.</p>\n<p>Open <code class=\"language-text\">app/config/config_prod.yml</code> and find the following block:</p>\n<div class=\"gatsby-highlight\" data-language=\"yaml\"><pre class=\"language-yaml\"><code class=\"language-yaml\"><span class=\"token key atrule\">monolog</span><span class=\"token punctuation\">:</span>\n    <span class=\"token comment\"># ...</span>\n\n    <span class=\"token key atrule\">nested</span><span class=\"token punctuation\">:</span>\n        <span class=\"token key atrule\">type</span><span class=\"token punctuation\">:</span> stream\n        <span class=\"token key atrule\">path</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'%kernel.logs_dir%/%kernel.environment%.log'</span>\n        <span class=\"token key atrule\">level</span><span class=\"token punctuation\">:</span> debug</code></pre></div>\n<p>And replace it with:</p>\n<div class=\"gatsby-highlight\" data-language=\"yaml\"><pre class=\"language-yaml\"><code class=\"language-yaml\"><span class=\"token key atrule\">monolog</span><span class=\"token punctuation\">:</span>\n    <span class=\"token comment\"># ...</span>\n\n    <span class=\"token key atrule\">nested</span><span class=\"token punctuation\">:</span>\n        <span class=\"token key atrule\">type</span><span class=\"token punctuation\">:</span> stream\n        <span class=\"token key atrule\">path</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'php://stderr'</span>\n        <span class=\"token key atrule\">level</span><span class=\"token punctuation\">:</span> debug</code></pre></div>\n<p>We are now ready to deploy our app!</p>\n<p>Initialize a git repository:</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">git init</code></pre></div>\n<p>Add all existing files:</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">git add --all</code></pre></div>\n<p>Commit:</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">git commit -a -m &quot;My first API Platform app running on Heroku!&quot;</code></pre></div>\n<p>Create the Heroku application:</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">heroku create</code></pre></div>\n<p>And deploy for the first time:</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">git push heroku master</code></pre></div>\n<p>Your browser should open automatically and display the entrypoint of the API. It's time to create the database:</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">heroku run &quot;app/console doctrine:schema:create&quot;</code></pre></div>\n<p><strong>We're done.</strong> You can play with the demo bookstore API provided with API Platform. It is ready for production and you\ncan scale it in one click from the Heroku interface.</p>\n<p>To see your logs, run <code class=\"language-text\">heroku logs --tail</code>.</p>","nav":{"chapters":[{"title":"The Distribution: Create Powerful APIs with Ease","path":"distribution","items":[{"id":"index","title":"Creating your First API with API Platform, in 5 Minutes","anchors":[{"id":"installing-the-framework","title":"Installing the framework","anchors":[{"id":"in-docker-containers","title":"In Docker Containers"},{"id":"via-composer","title":"Via Composer"}]},{"id":"its-ready","title":"It's ready!"},{"id":"creating-the-model","title":"Creating the model"},{"id":"validating-data","title":"Validating Data"},{"id":"going-client-side","title":"Going Client-Side"},{"id":"other-features","title":"Other Features"}]},{"id":"testing","title":"Testing and Specifying the API"}]},{"title":"The API Component","path":"core","items":[{"id":"index","title":"The API Platform Core Library","anchors":[{"id":"features","title":"Features"},{"id":"other-resources","title":"Other resources"}]},{"id":"getting-started","title":"Getting started","anchors":[{"id":"installing-api-platform-core","title":"Installing API Platform Core"},{"id":"before-reading-this-documentation","title":"Before Reading this Documentation"},{"id":"mapping-the-entities","title":"Mapping the Entities"}]},{"id":"operations","title":"Operations","anchors":[{"id":"enabling-and-disabling-operations","title":"Enabling and Disabling Operations"},{"id":"configuring-operations","title":"Configuring Operations"},{"id":"subresources","title":"Subresources","anchors":[{"id":"control-the-path-of-subresources","title":"Control the Path of Subresources"},{"id":"control-the-depth-of-subresources","title":"Control the Depth of Subresources"}]},{"id":"creating-custom-operations-and-controllers","title":"Creating Custom Operations and Controllers"}]},{"id":"filters","title":"Filters","anchors":[{"id":"doctrine-orm-filters","title":"Doctrine ORM Filters","anchors":[{"id":"search-filter","title":"Search Filter"},{"id":"date-filter","title":"Date Filter","anchors":[{"id":"managing-null-values","title":"Managing null Values"}]},{"id":"boolean-filter","title":"Boolean Filter"},{"id":"numeric-filter","title":"Numeric Filter"},{"id":"range-filter","title":"Range Filter"},{"id":"order-filter","title":"Order Filter","anchors":[{"id":"comparing-with-null-values","title":"Comparing with Null Values"},{"id":"using-a-custom-order-query-parameter-name","title":"Using a Custom Order Query Parameter Name"}]},{"id":"filtering-on-nested-properties","title":"Filtering on Nested Properties"},{"id":"enabling-a-filter-for-all-properties-of-a-resource","title":"Enabling a Filter for All Properties of a Resource"}]},{"id":"serializer-filters","title":"Serializer Filters","anchors":[{"id":"group-filter","title":"Group Filter"},{"id":"property-filter","title":"Property filter"}]},{"id":"creating-custom-filters","title":"Creating Custom Filters","anchors":[{"id":"creating-custom-doctrine-orm-filters","title":"Creating Custom Doctrine ORM Filters"},{"id":"overriding-extraction-of-properties-from-the-request","title":"Overriding Extraction of Properties from the Request"}]}]},{"id":"serialization","title":"The Serialization Process","anchors":[{"id":"overall-process","title":"Overall Process"},{"id":"available-serializers","title":"Available Serializers"},{"id":"the-serialization-context-groups-and-relations","title":"The Serialization Context, Groups and Relations","anchors":[{"id":"configuration","title":"Configuration"}]},{"id":"using-serialization-groups","title":"Using Serialization Groups"},{"id":"using-different-serialization-groups-per-operation","title":"Using Different Serialization Groups per Operation","anchors":[{"id":"embedding-relations","title":"Embedding Relations"},{"id":"normalization","title":"Normalization"},{"id":"denormalization","title":"Denormalization"}]},{"id":"changing-the-serialization-context-dynamically","title":"Changing the Serialization Context Dynamically"},{"id":"name-conversion","title":"Name Conversion"},{"id":"decorating-a-serializer-and-add-extra-data","title":"Decorating a Serializer and Add Extra Data"},{"id":"entity-identifier-case","title":"Entity Identifier Case"},{"id":"embedding-the-json-ld-context","title":"Embedding the JSON-LD Context"}]},{"id":"validation","title":"Validation","anchors":[{"id":"using-validation-groups","title":"Using Validation Groups"},{"id":"dynamic-validation-groups","title":"Dynamic Validation Groups"}]},{"id":"security","title":"Security"},{"id":"data-providers","title":"Data Providers","anchors":[{"id":"custom-collection-data-provider","title":"Custom Collection Data Provider"},{"id":"custom-item-data-provider","title":"Custom Item Data Provider"}]},{"id":"pagination","title":"Pagination","anchors":[{"id":"disabling-the-pagination","title":"Disabling the Pagination","anchors":[{"id":"globally","title":"Globally"},{"id":"for-a-specific-resource","title":"For a Specific Resource"},{"id":"client-side","title":"Client-side","anchors":[{"id":"globally","title":"Globally"},{"id":"for-a-specific-resource","title":"For a specific resource"}]}]},{"id":"changing-the-number-of-items-per-page","title":"Changing the Number of Items per Page","anchors":[{"id":"globally","title":"Globally"},{"id":"for-a-specific-resource","title":"For a Specific Resource"},{"id":"client-side","title":"Client-side","anchors":[{"id":"globally","title":"Globally"},{"id":"for-a-specific-resource","title":"For a Specific Resource"}]}]}]},{"id":"events","title":"The Event System"},{"id":"content-negotiation","title":"Content Negotiation","anchors":[{"id":"enabling-several-formats","title":"Enabling Several Formats"},{"id":"registering-a-custom-serializer","title":"Registering a Custom Serializer"},{"id":"writing-a-custom-normalizer","title":"Writing a Custom Normalizer"}]},{"id":"performance","title":"Performance","anchors":[{"id":"enabling-the-builtin-http-cache-invalidation-system","title":"Enabling the Builtin HTTP Cache Invalidation System"},{"id":"enabling-the-metadata-cache","title":"Enabling the Metadata Cache"},{"id":"using-ppm-php-pm","title":"Using PPM (PHP-PM)"},{"id":"doctrine-queries-and-indexes","title":"Doctrine Queries and Indexes","anchors":[{"id":"search-filter","title":"Search Filter"},{"id":"eager-loading","title":"Eager loading","anchors":[{"id":"max-joins","title":"Max joins"},{"id":"force-eager","title":"Force eager"},{"id":"override-at-resource-and-operation-level","title":"Override at resource and operation level"},{"id":"disable-eager-loading","title":"Disable eager loading"}]}]}]},{"id":"extensions","title":"Extensions","anchors":[{"id":"custom-extension","title":"Custom Extension"},{"id":"example","title":"Example","anchors":[{"id":"blocking-anonymous-users","title":"Blocking Anonymous Users"}]}]},{"id":"swagger","title":"Swagger / Open API Support","anchors":[{"id":"overriding-the-swagger-documentation","title":"Overriding the Swagger Documentation"},{"id":"using-the-swagger-context","title":"Using the Swagger Context"},{"id":"changing-the-swagger-ui-location","title":"Changing the Swagger UI Location","anchors":[{"id":"disabling-swagger-ui","title":"Disabling Swagger UI"},{"id":"manually-registering-the-swagger-ui-controller","title":"Manually Registering the Swagger UI Controller"},{"id":"enable-swagger-doc-for-api-gateway","title":"Enable Swagger doc for API Gateway"}]}]},{"id":"default-order","title":"Overriding Default Order"},{"id":"external-vocabularies","title":"Using External Vocabularies"},{"id":"operation-path-naming","title":"Operation Path Naming","anchors":[{"id":"configuration","title":"Configuration"},{"id":"create-a-custom-operation-path-resolver","title":"Create a Custom Operation Path Resolver","anchors":[{"id":"defining-the-operation-path-resolver","title":"Defining the Operation Path Resolver"},{"id":"registering-the-service","title":"Registering the Service"},{"id":"configure-it","title":"Configure It"}]}]},{"id":"extending-jsonld-context","title":"Extending JSON-LD context"},{"id":"form-data","title":"Accept application/x-www-form-urlencoded Form Data","anchors":[{"id":"create-your-deserializelistener-decorator","title":"Create your DeserializeListener Decorator"},{"id":"create-the-service-definition","title":"Create the Service Definition"},{"id":"cleanup-the-original-listener","title":"Cleanup the Original Listener"}]},{"id":"jwt","title":"JWT Authentication"},{"id":"angularjs-integration","title":"AngularJS Integration","anchors":[{"id":"restangular","title":"Restangular"},{"id":"ng-admin","title":"ng-admin"}]},{"id":"fosuser-bundle","title":"FOSUserBundle Integration","anchors":[{"id":"installing-the-bundle","title":"Installing the Bundle"},{"id":"enabling-the-bridge","title":"Enabling the Bridge"},{"id":"creating-a-user-entity-with-serialization-groups","title":"Creating a User Entity with Serialization Groups"}]},{"id":"nelmio-api-doc","title":"NelmioApiDocBundle Integration"},{"id":"configuration","title":"Configuration"}]},{"title":"The Schema Generator Component","path":"schema-generator","items":[{"id":"index","title":"The schema generator","anchors":[{"id":"what-is-schemaorg","title":"What is Schema.org?"},{"id":"why-use-schemaorg-data-to-generate-a-php-model","title":"Why use Schema.org data to generate a PHP model?","anchors":[{"id":"dont-reinvent-the-wheel","title":"Don't Reinvent The Wheel"},{"id":"improve-seo-and-user-experience","title":"Improve SEO and user experience"},{"id":"be-ready-for-the-future","title":"Be ready for the future"}]},{"id":"documentation","title":"Documentation"}]},{"id":"getting-started","title":"Getting Started","anchors":[{"id":"installation","title":"Installation"},{"id":"model-scaffolding","title":"Model scaffolding","anchors":[{"id":"going-further","title":"Going further"}]},{"id":"cardinality-extraction","title":"Cardinality extraction"}]},{"id":"configuration","title":"Configuration","anchors":[{"id":"customizing-php-namespaces","title":"Customizing PHP Namespaces"},{"id":"forcing-a-field-range","title":"Forcing a Field Range"},{"id":"forcing-a-field-cardinality","title":"Forcing a Field Cardinality"},{"id":"forcing-a-relation-table-name","title":"Forcing a Relation Table Name"},{"id":"forcing-or-disabling-a-class-parent","title":"Forcing (or Disabling) a Class Parent"},{"id":"forcing-a-class-to-be-abstract","title":"Forcing a Class to be Abstract"},{"id":"forcing-a-nullable-property","title":"Forcing a Nullable Property"},{"id":"forcing-a-unique-property","title":"Forcing a Unique Property"},{"id":"making-a-property-read-only","title":"Making a Property Read Only"},{"id":"making-a-property-write-only","title":"Making a Property Write Only"},{"id":"forcing-a-property-to-be-in-a-serialization-group","title":"Forcing a Property to be in a Serialization Group"},{"id":"forcing-an-embeddable-class-to-be-embedded","title":"Forcing an Embeddable Class to be Embedded"},{"id":"author-phpdoc","title":"Author PHPDoc"},{"id":"disabling-generators-and-creating-custom-ones","title":"Disabling Generators and Creating Custom Ones"},{"id":"skipping-accessor-method-generation","title":"Skipping Accessor Method Generation"},{"id":"disabling-the-id-generator","title":"Disabling the id Generator"},{"id":"generating-uuids","title":"Generating UUIDs"},{"id":"user-submitted-uuids","title":"User submitted UUIDs"},{"id":"generating-custom-ids","title":"Generating Custom IDs"},{"id":"disabling-usage-of-doctrine-collection","title":"Disabling Usage of Doctrine Collection"},{"id":"changing-the-field-visibility","title":"Changing the Field Visibility"},{"id":"generating-asserttype-annotations","title":"Generating @Assert\\Type Annotations"},{"id":"forcing-doctrine-inheritance-mapping-annotation","title":"Forcing Doctrine Inheritance Mapping Annotation"},{"id":"interfaces-and-doctrine-resolve-target-entity-listener","title":"Interfaces and Doctrine Resolve Target Entity Listener"},{"id":"custom-schemas","title":"Custom Schemas"},{"id":"checking-goodrelation-compatibility","title":"Checking GoodRelation Compatibility"},{"id":"php-file-header","title":"PHP File Header"},{"id":"full-configuration-reference","title":"Full Configuration Reference"}]}]},{"title":"The Admin Component","path":"admin","items":[{"id":"index","title":"The API Platform Admin","anchors":[{"id":"features","title":"Features"}]},{"id":"getting-started","title":"Getting Started","anchors":[{"id":"installation","title":"Installation"},{"id":"creating-the-admin","title":"Creating the Admin"},{"id":"customizing-the-admin","title":"Customizing the Admin","anchors":[{"id":"using-custom-components","title":"Using Custom Components"},{"id":"managing-files-and-images","title":"Managing Files and Images"},{"id":"using-a-custom-validation-function-or-inject-custom-props","title":"Using a Custom Validation Function or Inject Custom Props"}]}]},{"id":"authentication-support","title":"Authentication Support"},{"id":"handling-relations-to-collections","title":"Handling Relations to Collections","anchors":[{"id":"using-an-autocomplete-input-for-relations","title":"Using an Autocomplete Input for Relations"}]}]},{"title":"The Client Generator Component","path":"client-generator","items":[{"id":"index","title":"The API Platform Client Generator","anchors":[{"id":"features","title":"Features"}]},{"id":"react","title":"React generator"},{"id":"vuejs","title":"Vue.js generator"},{"id":"troubleshooting","title":"Troubleshooting"}]},{"title":"Deployment","path":"deployment","items":[{"id":"index","title":"Deploying API Platform Applications"},{"id":"docker","title":"Using API Platform with Docker","anchors":[{"id":"services","title":"Services"},{"id":"installation","title":"Installation"}]},{"id":"heroku","title":"Deploying an API Platform App on Heroku"}]},{"title":"Extra","path":"extra","items":[{"id":"philosophy","title":"API Platform's Philosophy"},{"id":"troubleshooting","title":"Troubleshooting","anchors":[{"id":"using-docker","title":"Using Docker","anchors":[{"id":"with-docker-toolbox-on-windows","title":"With Docker Toolbox on Windows"},{"id":"error-starting-userland-proxy","title":"Error starting userland proxy"}]},{"id":"using-api-platform-and-jms-serializer-in-the-same-project","title":"Using API Platform and JMS Serializer in the same project"}]},{"id":"contribution-guides","title":"Contribution guides"},{"id":"conduct","title":"Contributor Code of Conduct","anchors":[{"id":"our-pledge","title":"Our Pledge"},{"id":"our-standards","title":"Our Standards"},{"id":"our-responsibilities","title":"Our Responsibilities"},{"id":"scope","title":"Scope"},{"id":"enforcement","title":"Enforcement"},{"id":"attribution","title":"Attribution"}]}]}]},"next":{},"prefixedVersion":"v2.1","previous":{"slug":"/docs/v2.1/deployment/docker/","title":"Using API Platform with Docker"},"title":"Deploying an API Platform App on Heroku","urlEditDocumentation":"https://github.com/api-platform/docs/edit/2.1/deployment/heroku.md","version":"v2.1/"}}}